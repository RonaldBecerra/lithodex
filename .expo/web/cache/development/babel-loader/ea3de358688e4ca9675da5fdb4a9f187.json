{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\modifiedLibraries\\\\PickerCheckBox\\\\PickerCheckbox.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ModalOVerlay from \"./modalOverlay\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { CheckBox } from \"react-native-elements\";\nvar ARROW_COLOR = 'black';\nvar PLACEHOLDER_COLOR = '#899DAE';\nvar DIVIDER_COLOR = '#EEEEEE';\nvar CONFIRM_BUTTON_TITLE = 'Confirm';\nvar PLACEHOLDER_ITEMS_SELECTED_COLOR = 'black';\nvar PLACEHOLDER_ITEMS_SELECTED = '$count selected item(s)';\n\nvar PickerCheckbox = function (_React$Component) {\n  _inherits(PickerCheckbox, _React$Component);\n\n  function PickerCheckbox(props) {\n    var _this;\n\n    _classCallCheck(this, PickerCheckbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PickerCheckbox).call(this, props));\n\n    _this.renderContainerModal = function () {\n      return React.createElement(ModalOVerlay, {\n        cancelable: true,\n        visible: _this.state.modalVisible,\n        styleContent: StyleCheckBoxListPicker.containerModal,\n        onRequestClose: function onRequestClose() {\n          return _this.handleRequestClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        }\n      }, _this.renderModal());\n    };\n\n    _this.state = {\n      modalVisible: false,\n      checkedItems: [],\n      arraySelectedItems: _this.props.arrayOfValues\n    };\n    return _this;\n  }\n\n  _createClass(PickerCheckbox, [{\n    key: \"handleRequestClose\",\n    value: function handleRequestClose() {\n      OnConfirm = this.props.OnConfirm;\n\n      if (OnConfirm != null) {\n        vData = this.props.data;\n        vItems = this.state.checkedItems;\n        vKeyField = this.props.KeyField;\n        vResult = vData.filter(function (item) {\n          return vItems.includes(item[vKeyField]);\n        });\n        OnConfirm(vResult);\n      }\n\n      this.setModalVisible(false);\n    }\n  }, {\n    key: \"handlePressPicker\",\n    value: function handlePressPicker() {\n      this.setModalVisible(!this.state.modalVisible);\n    }\n  }, {\n    key: \"handlePressCheckBox\",\n    value: function handlePressCheckBox(pId, index) {\n      var tmp = this.state.checkedItems;\n\n      if (tmp.includes(pId)) {\n        tmp.splice(tmp.indexOf(pId), 1);\n      } else {\n        tmp.push(pId);\n      }\n\n      array = this.state.arraySelectedItems;\n\n      if (array[index] == false) {\n        array[index] = true;\n      } else {\n        array[index] = false;\n      }\n\n      this.setState({\n        checkedItems: tmp,\n        arraySelectedItems: array\n      });\n    }\n  }, {\n    key: \"setModalVisible\",\n    value: function setModalVisible(pVisible) {\n      this.setState({\n        modalVisible: pVisible\n      });\n    }\n  }, {\n    key: \"ItemExistList\",\n    value: function ItemExistList(pKey) {\n      return this.state.checkedItems.includes(pKey) ? true : false;\n    }\n  }, {\n    key: \"renderArrow\",\n    value: function renderArrow() {\n      vArrowColor = ARROW_COLOR;\n\n      if (this.props.arrowColor != null) {\n        vArrowColor = this.props.arrowColor;\n      }\n\n      vArrowSize = 20;\n\n      if (this.props.arrowSize != null) {\n        vArrowSize = this.props.arrowSize;\n      }\n\n      return React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'flex-end',\n          paddingRight: 15,\n          width: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        }\n      }, React.createElement(Ionicons, {\n        color: vArrowColor,\n        size: vArrowSize,\n        name: \"md-arrow-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }));\n    }\n  }, {\n    key: \"renderPlaceHolder\",\n    value: function renderPlaceHolder() {\n      vPlaceHolder = this.props.placeholder || '';\n      vColorTextPlaceHolder = this.props.placeholderTextColor || PLACEHOLDER_COLOR;\n\n      if (this.state.checkedItems.length > 0) {\n        vPlaceHolderSelectedItems = this.props.placeholderSelectedItems || PLACEHOLDER_ITEMS_SELECTED;\n        vCount = this.state.checkedItems.length;\n        vPlaceHolder = vPlaceHolderSelectedItems.replace('$count', vCount);\n        vColorTextPlaceHolder = PLACEHOLDER_ITEMS_SELECTED_COLOR;\n      }\n\n      return React.createElement(View, {\n        style: StyleCheckBoxListPicker.containerPlaceholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        }\n      }, React.createElement(Text, {\n        style: [{\n          color: vColorTextPlaceHolder,\n          fontSize: 16\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        }\n      }, vPlaceHolder));\n    }\n  }, {\n    key: \"renderCheckBox\",\n    value: function renderCheckBox(pItem, index) {\n      var _this2 = this;\n\n      return React.createElement(CheckBox, {\n        value: this.ItemExistList(pItem[this.props.KeyField]),\n        onPress: function onPress() {\n          return _this2.handlePressCheckBox(pItem[_this2.props.KeyField], index);\n        },\n        checked: this.state.arraySelectedItems[index],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      });\n    }\n  }, {\n    key: \"renderDescriptionCheckBox\",\n    value: function renderDescriptionCheckBox(pItem) {\n      return React.createElement(View, {\n        style: {\n          paddingLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }, pItem[this.props.DescriptionField]));\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems(pItem, index) {\n      var _this3 = this;\n\n      return React.createElement(TouchableNativeFeedback, {\n        onPress: function onPress() {\n          return _this3.handlePressCheckBox(pItem[_this3.props.KeyField], index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }, React.createElement(View, {\n        style: StyleCheckBoxListPicker.containerItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, this.renderCheckBox(pItem, index), this.renderDescriptionCheckBox(pItem)));\n    }\n  }, {\n    key: \"renderDivider\",\n    value: function renderDivider() {\n      DividerVisible = this.props.dividerVisible || true;\n      DividerColor = this.props.dividerColor || DIVIDER_COLOR;\n      vDivider = null;\n\n      if (DividerVisible) {\n        vDivider = React.createElement(View, {\n          style: {\n            borderBottomColor: DividerColor,\n            borderBottomWidth: 1,\n            marginTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          }\n        });\n      }\n\n      return vDivider;\n    }\n  }, {\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      if (this.props.headerComponent != null) {\n        vDivider = this.renderDivider();\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, this.props.headerComponent, vDivider);\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      ButtonTitle = this.props.ConfirmButtonTitle || CONFIRM_BUTTON_TITLE;\n      return React.createElement(View, {\n        style: StyleCheckBoxListPicker.containerFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      }, this.renderConfirmButton(ButtonTitle));\n    }\n  }, {\n    key: \"renderConfirmButton\",\n    value: function renderConfirmButton(pButtonTitle) {\n      var _this4 = this;\n\n      return React.createElement(Button, {\n        onPress: function onPress() {\n          return _this4.handleRequestClose();\n        },\n        title: pButtonTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        }\n      });\n    }\n  }, {\n    key: \"renderFlatList\",\n    value: function renderFlatList() {\n      var _this5 = this;\n\n      vCheckedItems = this.props.checkedItems;\n\n      if (vCheckedItems != null) {\n        this.state.checkedItems = vCheckedItems;\n      }\n\n      return React.createElement(FlatList, {\n        style: {\n          flex: 1\n        },\n        data: this.props.data,\n        extraData: this.state,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return _this5.renderItems(item, index);\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        }\n      });\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      }, React.createElement(View, {\n        style: StyleCheckBoxListPicker.containerHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        }\n      }, this.renderHeader()), this.renderFlatList(), this.renderFooter());\n    }\n  }, {\n    key: \"renderPicker\",\n    value: function renderPicker() {\n      var _this6 = this;\n\n      return React.createElement(TouchableNativeFeedback, {\n        onPress: function onPress() {\n          return _this6.handlePressPicker();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        }\n      }, React.createElement(View, {\n        style: [this.props.containerStyle, StyleCheckBoxListPicker.containerPicker],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        }\n      }, this.renderPlaceHolder(), this.renderArrow()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        }\n      }, this.renderContainerModal(), this.renderPicker());\n    }\n  }]);\n\n  return PickerCheckbox;\n}(React.Component);\n\nexport { PickerCheckbox as default };\nStyleCheckBoxListPicker = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.55)',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  containerModal: {\n    flex: 1,\n    margin: 20,\n    padding: 20\n  },\n  containerPicker: {\n    flexDirection: 'row',\n    height: 45\n  },\n  containerHeader: {\n    paddingBottom: 10,\n    flex: 0\n  },\n  containerFooter: {\n    flex: 0,\n    paddingTop: 10\n  },\n  containerItem: {\n    flexDirection: 'row',\n    paddingBottom: 5,\n    alignItems: 'center'\n  },\n  containerPlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/modifiedLibraries/PickerCheckBox/PickerCheckbox.js"],"names":["React","Component","ModalOVerlay","Ionicons","CheckBox","ARROW_COLOR","PLACEHOLDER_COLOR","DIVIDER_COLOR","CONFIRM_BUTTON_TITLE","PLACEHOLDER_ITEMS_SELECTED_COLOR","PLACEHOLDER_ITEMS_SELECTED","PickerCheckbox","props","renderContainerModal","state","modalVisible","StyleCheckBoxListPicker","containerModal","handleRequestClose","renderModal","checkedItems","arraySelectedItems","arrayOfValues","OnConfirm","vData","data","vItems","vKeyField","KeyField","vResult","filter","item","includes","setModalVisible","pId","index","tmp","splice","indexOf","push","array","setState","pVisible","pKey","vArrowColor","arrowColor","vArrowSize","arrowSize","justifyContent","alignItems","paddingRight","width","vPlaceHolder","placeholder","vColorTextPlaceHolder","placeholderTextColor","length","vPlaceHolderSelectedItems","placeholderSelectedItems","vCount","replace","containerPlaceholder","color","fontSize","pItem","ItemExistList","handlePressCheckBox","paddingLeft","DescriptionField","containerItem","renderCheckBox","renderDescriptionCheckBox","DividerVisible","dividerVisible","DividerColor","dividerColor","vDivider","borderBottomColor","borderBottomWidth","marginTop","headerComponent","renderDivider","ButtonTitle","ConfirmButtonTitle","containerFooter","renderConfirmButton","pButtonTitle","vCheckedItems","flex","renderItems","toString","containerHeader","renderHeader","renderFlatList","renderFooter","handlePressPicker","containerStyle","containerPicker","renderPlaceHolder","renderArrow","renderPicker","StyleSheet","create","container","backgroundColor","flexDirection","margin","padding","height","paddingBottom","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {View,Text,\n\t\tTouchableNativeFeedback,\n\t\tFlatList, Button, StyleSheet } from 'react-native';\nimport ModalOVerlay from './modalOverlay';\nimport {Ionicons} from '@expo/vector-icons'\n\nimport {CheckBox} from \"react-native-elements\";\n\nconst ARROW_COLOR = 'black';\nconst PLACEHOLDER_COLOR = '#899DAE';\nconst DIVIDER_COLOR = '#EEEEEE';\nconst CONFIRM_BUTTON_TITLE = 'Confirm';\nconst PLACEHOLDER_ITEMS_SELECTED_COLOR = 'black';\nconst PLACEHOLDER_ITEMS_SELECTED = '$count selected item(s)';\n\nexport default class PickerCheckbox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props); \n\t\tthis.state = {\n\t\t\tmodalVisible:       false,\n\t\t\tcheckedItems:       [],\n\t\t\tarraySelectedItems: this.props.arrayOfValues, // Este parámetro fue agregado en este proyecto\n\t\t};\n\t}\n\n\n\t//Events\n\thandleRequestClose(){\n\t\tOnConfirm = this.props.OnConfirm;\n\n\t\tif (OnConfirm != null) {\n\t\t\tvData     = this.props.data;\n\t\t\tvItems    = this.state.checkedItems;\n\t\t\tvKeyField = this.props.KeyField;\n\t\t\tvResult   = vData.filter(function(item){\n\t\t\t\treturn vItems.includes(item[vKeyField]);\n\t\t\t});\n\t\t\tOnConfirm(vResult);\n\t\t}\n\t\tthis.setModalVisible(false);\n\t}\n\n\thandlePressPicker() {\n\t\tthis.setModalVisible(!this.state.modalVisible);\n\t}\n\n\thandlePressCheckBox(pId,index){\n\t\tlet tmp = this.state.checkedItems;\n\n\t\tif ( tmp.includes(pId) ) {\n\t\t\ttmp.splice(tmp.indexOf(pId),1);\n\t\t} else {\n\t\t\ttmp.push(pId);\n\t\t}\n\t\tarray = this.state.arraySelectedItems;\n\t\tif (array[index] == false){\n\t\t\tarray[index] = true;\n\t\t}\n\t\telse{\n\t\t\tarray[index] = false;\n\t\t}\n\t\tthis.setState({checkedItems: tmp, arraySelectedItems: array});\n\t}\n\n\t//Other Methods\n\tsetModalVisible(pVisible) {\n\t\tthis.setState({modalVisible: pVisible});\n\t}\n\n\tItemExistList(pKey) {\n\t\treturn this.state.checkedItems.includes(pKey) ? true : false;\n\t}\n\n\t//render Methods\n\trenderArrow () {\n\t\tvArrowColor = ARROW_COLOR;\n\t\tif (this.props.arrowColor != null) {\n\t\t\tvArrowColor = this.props.arrowColor;\n\t\t}\n\n\t\tvArrowSize = 20;\n\t\tif (this.props.arrowSize != null) {\n\t\t\tvArrowSize = this.props.arrowSize;\n\t\t}\n\t\treturn (\n\t\t\t<View style = {{\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems:     'flex-end',\n\t\t\t\tpaddingRight:   15,\n\t\t\t\twidth:          30\n\t\t\t}}>\n\t\t\t\t<Ionicons\n\t\t\t\t   color = {vArrowColor}\n\t\t\t\t\tsize = {vArrowSize}\n\t\t\t\t\tname = 'md-arrow-dropdown'\n\t\t\t\t/>\n\t\t\t</View>\n\t\t)\n\t}\n\n\trenderPlaceHolder (){\n\t\tvPlaceHolder          = this.props.placeholder || '';\n\t\tvColorTextPlaceHolder = this.props.placeholderTextColor || PLACEHOLDER_COLOR;\n\n\t\tif (this.state.checkedItems.length > 0){\n\t\t\tvPlaceHolderSelectedItems = this.props.placeholderSelectedItems || PLACEHOLDER_ITEMS_SELECTED;\n\t\t\tvCount                    = this.state.checkedItems.length\n\t\t\tvPlaceHolder              = vPlaceHolderSelectedItems.replace('$count', vCount);\n\t\t\tvColorTextPlaceHolder     = PLACEHOLDER_ITEMS_SELECTED_COLOR\n\t\t}\n\t\n\t\treturn(\n\t\t\t<View\n\t\t\t\tstyle = {StyleCheckBoxListPicker.containerPlaceholder}>\n\t\t\t\t<Text style = {[{color:vColorTextPlaceHolder, fontSize:16}]}>\n\t\t\t\t\t{vPlaceHolder}\n\t\t\t\t</Text>\n\t\t\t</View>\n\t\t)\n\t}\n\n\trenderCheckBox(pItem,index) {\n\t\t///console.log(\"El índice es: \"+index)\n\t\t//console.log(\"El arreglo completo es: \"+this.state.arraySelectedItems)\n\t\t//console.log(\"El valor actual con el índice es: \"+this.state.arraySelectedItems[index])\n\t\t\n\t\treturn(\n\t\t\t<CheckBox\n\t\t\t\tvalue   = {this.ItemExistList(pItem[this.props.KeyField])}\n\t\t\t\tonPress = {() => this.handlePressCheckBox(pItem[this.props.KeyField],index)}\n\t\t\t\tchecked = {this.state.arraySelectedItems[index]}\n\t\t\t/>\n\t\t)\n\t}\n\n\trenderDescriptionCheckBox(pItem) {\n\t\treturn (\n\t\t\t<View style = {{paddingLeft:10}}>\n\t\t\t\t<Text>{pItem[this.props.DescriptionField]}</Text>\n\t\t\t</View>\n\t\t)\n\t}\n\n\trenderItems(pItem,index) {\n\t\treturn(\n\t\t\t<TouchableNativeFeedback  onPress = {() => this.handlePressCheckBox(pItem[this.props.KeyField],index)}>\n\t\t\t\t<View style = {StyleCheckBoxListPicker.containerItem}>\n\t\t\t\t\t{this.renderCheckBox(pItem,index)}\n\t\t\t\t\t{this.renderDescriptionCheckBox(pItem)}\n\t\t\t\t</View>\n\t\t\t</TouchableNativeFeedback>\n\t\t)\n\t}\n\n\trenderDivider(){\n\t\tDividerVisible = this.props.dividerVisible||true;\n\t\tDividerColor   = this.props.dividerColor||DIVIDER_COLOR;\n\t\tvDivider       = null;\n\t\t\n\t\tif (DividerVisible) {\n\t\t\tvDivider = \n\t\t\t\t<View\n\t\t\t\t\tstyle = {{\n\t\t\t\t\t\tborderBottomColor: DividerColor,\n\t\t\t\t\t\tborderBottomWidth: 1,\n\t\t\t\t\t\tmarginTop:         10\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t}\n\t\treturn vDivider;\n\t}\n\t\n\trenderHeader(){\n\t\tif (this.props.headerComponent != null) {\n\t\t\tvDivider = this.renderDivider()\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<View>\n\t\t\t\t\t{this.props.headerComponent}\n\t\t\t\t\t{vDivider}\n\t\t\t\t</View>\n\t\t\t)\n\t\t}\n\n\trenderFooter(){\n\t\tButtonTitle = this.props.ConfirmButtonTitle || CONFIRM_BUTTON_TITLE;\n\t\treturn (\n\t\t\t<View style = {StyleCheckBoxListPicker.containerFooter}>\n\t\t\t\t{this.renderConfirmButton(ButtonTitle)}\n\t\t\t</View>)\n\t}\n\n\trenderConfirmButton(pButtonTitle) {\n\t\treturn(\n\t\t\t<Button\n\t\t\t\tonPress = {() => this.handleRequestClose()}\n\t\t\t\ttitle   = {pButtonTitle}\n\t\t\t/>\n\t\t)\n\t}\n\n\trenderFlatList() {\n\t\tvCheckedItems = this.props.checkedItems;\n\t\tif (vCheckedItems != null) {\n\t\t\tthis.state.checkedItems = vCheckedItems;\n\t\t}\n\t\treturn (\n\t\t\t<FlatList\n\t\t\t\tstyle        = {{flex:1}}\n\t\t\t\tdata         = {this.props.data}\n\t\t\t\textraData    = {this.state}\n\t\t\t\trenderItem   = {({item,index}) => this.renderItems(item,index)}\n\t\t\t\tkeyExtractor = {(item,index) => index.toString()}>       \n\t\t\t</FlatList>\n\t\t)\n\t}\n\trenderModal(){\n\t\treturn (\n\t\t\t<View style = {{flex:1, justifyContent:'center'}}>\n\t\t\t\t<View style = {StyleCheckBoxListPicker.containerHeader}>\n\t\t\t\t\t{this.renderHeader()}\n\t\t\t\t</View>\n\t\t\t\t{this.renderFlatList()}\n\t\t\t\t{this.renderFooter()}       \n\t\t\t</View>\n\t\t)\n\t}\n\n\trenderContainerModal = () => {\n\t\treturn (\n\t\t\t<ModalOVerlay\n\t\t\t\tcancelable     = {true}\n\t\t\t\tvisible        = {this.state.modalVisible}    \n\t\t\t\tstyleContent   = {StyleCheckBoxListPicker.containerModal}\n\t\t\t\tonRequestClose = {() => this.handleRequestClose()}>\n\t\t\t\t{this.renderModal()}\n\t\t\t</ModalOVerlay>\n\t\t)\n\t}\n\n\trenderPicker() {\n\t\treturn (\n\t\t\t<TouchableNativeFeedback\n\t\t\t\tonPress     = {() => this.handlePressPicker()}>\n\t\t\t\t<View style = {[this.props.containerStyle, StyleCheckBoxListPicker.containerPicker]}>\n\t\t\t\t\t{this.renderPlaceHolder()}\n\t\t\t\t\t{this.renderArrow()}    \n\t\t\t\t</View>\n\t\t\t</TouchableNativeFeedback>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{this.renderContainerModal()}\n\t\t\t\t{this.renderPicker()}\n\t\t\t</View>\n\t\t)\n\t};\n}\n\nStyleCheckBoxListPicker = StyleSheet.create({\n\tcontainer :{\n\t\tflex:            1,\n\t\tbackgroundColor: 'rgba(0, 0, 0, 0.55)',\n\t\tflexDirection:   'column',\n\t\tjustifyContent:  'center'\n\t},\n\n\tcontainerModal:{\n\t\tflex:    1,\n\t\tmargin:  20,\n\t\tpadding: 20,\n\t},\n\n\tcontainerPicker:{\n\t\tflexDirection: 'row',\n\t\theight:45\n\t},\n\tcontainerHeader:{\n\t\tpaddingBottom: 10,\n\t\tflex:          0,\n\t},\n\tcontainerFooter:{\n\t\tflex:       0,\n\t\tpaddingTop: 10,\n\t},\n\n\tcontainerItem:{\n\t\tflexDirection: 'row', \n\t\tpaddingBottom: 5,\n\t\talignItems:    'center'\n\t},\n\t\n\tcontainerPlaceholder: {\n\t\tflex:           1,\n\t\tjustifyContent: 'center',\n\t\tpaddingLeft:    10\n\t}\n\n});\n"]},"metadata":{},"sourceType":"module"}