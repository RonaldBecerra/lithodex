{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\MainMenu.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { NavigationEvents } from 'react-navigation';\nimport { connect } from 'react-redux';\nimport { changeUser, changeUserProfileImage, changeUserPrivileges, changeSyncHandler } from \"../redux/actions/userActions\";\nimport { bindActionCreators } from 'redux';\nimport * as Network from 'expo-network';\nimport { MainMenu_Texts } from \"../languages/screens/MainMenu\";\nimport { genericStyles } from \"../constants/genericStyles\";\nimport * as genericImages from \"../constants/genericImages\";\nimport * as D from \"../constants/Dimensions\";\nimport * as appConstants from \"../constants/appConstants\";\nimport * as Log from \"../genericFunctions/logFunctions\";\nimport * as Database from \"../genericFunctions/databaseFunctions\";\nimport PouchDB from 'pouchdb-react-native';\nPouchDB.plugin(require('pouchdb-adapter-asyncstorage').default);\nGLOBAL_BUTTON_WIDTH = 0.32 * D.MIN_GLOBAL_DIMENSION;\nGLOBAL_BUTTON_HEIGHT = 0.315 * D.MIN_GLOBAL_DIMENSION;\n\nvar MainMenu = function (_Component) {\n  _inherits(MainMenu, _Component);\n\n  function MainMenu(props) {\n    var _this;\n\n    _classCallCheck(this, MainMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainMenu).call(this, props));\n\n    _this.editProfile = function _callee() {\n      var payload;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              payload = {};\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.props.local_database.get(appConstants.DEFAULT_DOCUMENT_ID).then(function (database) {\n                payload = database;\n              }).catch(function (e) {\n                console.error(error.toString());\n              }));\n\n            case 3:\n              _this.props.navigation.navigate({\n                key: 'UserForm',\n                routeName: 'UserForm',\n                params: payload\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.logOut = function _callee2() {\n      var _await$Network$getNet, isInternetReachable;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(_this.props.syncHandler.cancel());\n\n            case 2:\n              _this.props.dispatchResetProfileImage();\n\n              _this.props.dispatchResetPrivileges();\n\n              _this.props.dispatchResetSyncHandler();\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(Network.getNetworkStateAsync());\n\n            case 7:\n              _await$Network$getNet = _context2.sent;\n              isInternetReachable = _await$Network$getNet.isInternetReachable;\n\n              if (isInternetReachable) {\n                _this.props.localDB.destroy();\n              }\n\n              _this.props.dispatchLogOut(appConstants.UNAUTHENTICATED_ID);\n\n              Database.logOut();\n              Alert.alert(_this.props.allMessages[14], _this.props.allMessages[10]);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Log.log_action(1, this.props.user_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var p = this.props;\n      console.log('Running on ' + Platform.OS + ' ' + Platform.Version);\n\n      if (Platform.Version <= 14 && Platform.OS == 'android') {\n        return React.createElement(View, {\n          style: styles.menu,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          }\n        }, p.allMessages[0]), \"}\");\n      }\n\n      return React.createElement(ImageBackground, {\n        source: genericImages.MAIN_MENU_BACKGROUND,\n        style: {\n          flex: 1,\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        }\n      }, this.props.user_id == appConstants.UNAUTHENTICATED_ID && React.createElement(View, {\n        style: styles.sessionBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }, React.createElement(Text, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'UserForm',\n            routeName: 'UserForm'\n          });\n        },\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        }\n      }, p.allMessages[2]), React.createElement(Text, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'Login',\n            routeName: 'Login'\n          });\n        },\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        }\n      }, p.allMessages[3])), this.props.user_id != appConstants.UNAUTHENTICATED_ID && React.createElement(View, {\n        style: styles.sessionBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, React.createElement(Text, {\n        onPress: function onPress() {\n          return _this2.editProfile();\n        },\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        }\n      }, p.allMessages[4]), React.createElement(Text, {\n        onPress: function onPress() {\n          return _this2.logOut();\n        },\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }, p.allMessages[5])), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }, React.createElement(View, {\n        style: styles.menu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }, React.createElement(Image, {\n        style: styles.lithoDexImage,\n        source: genericImages.LITHODEX_ICON,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        }\n      }), React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ObjectGallery',\n            routeName: 'ObjectGallery',\n            params: {\n              isCore: false\n            }\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ObjectGallery',\n            routeName: 'ObjectGallery',\n            params: {\n              isCore: false\n            }\n          });\n        },\n        underlayColor: \"#cccc\",\n        style: _objectSpread({}, styles.buttonHighlight, {}, styles.leftButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: GLOBAL_BUTTON_WIDTH,\n          height: GLOBAL_BUTTON_HEIGHT\n        },\n        source: genericImages.OUTCROP_ICON,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonHighlight_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      }, p.allMessages[6]))), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ObjectGallery',\n            routeName: 'ObjectGallery',\n            params: {\n              isCore: true\n            }\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ObjectGallery',\n            routeName: 'ObjectGallery',\n            params: {\n              isCore: true\n            }\n          });\n        },\n        underlayColor: \"#cccc\",\n        style: _objectSpread({}, styles.buttonHighlight, {}, styles.rightButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: GLOBAL_BUTTON_WIDTH,\n          height: GLOBAL_BUTTON_HEIGHT\n        },\n        source: genericImages.CORE_ICON,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonHighlight_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      }, p.allMessages[7])))), this.props.user_id != appConstants.UNAUTHENTICATED_ID && React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ContactUsersRootComponent',\n            routeName: 'ContactUsersRootComponent'\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ContactUsersRootComponent',\n            routeName: 'ContactUsersRootComponent'\n          });\n        },\n        underlayColor: \"#cccc\",\n        style: styles.buttonHighlight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: GLOBAL_BUTTON_WIDTH,\n          height: GLOBAL_BUTTON_HEIGHT\n        },\n        source: genericImages.CONTACT_USERS_ICON,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }), React.createElement(Text, {\n        style: styles.buttonHighlight_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        }\n      }, p.allMessages[13])))), React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'Settings',\n            routeName: 'Settings'\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.props.navigation.navigate({\n            key: 'Settings',\n            routeName: 'Settings'\n          });\n        },\n        underlayColor: \"#cccc\",\n        style: _objectSpread({}, styles.buttonHighlight, {}, styles.leftButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonHighlight_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        }\n      }, p.allMessages[8])), React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'AboutLithoDex',\n            routeName: 'AboutLithoDex'\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.props.navigation.navigate({\n            key: 'AboutLithoDex',\n            routeName: 'AboutLithoDex'\n          });\n        },\n        underlayColor: \"#cccc\",\n        style: _objectSpread({}, styles.buttonHighlight, {}, styles.rightButton),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonHighlight_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        }\n      }, p.allMessages[9]))), this.props.privileges == 2 && React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ConsultLog',\n            routeName: 'ConsultLog'\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.props.navigation.navigate({\n            key: 'ConsultLog',\n            routeName: 'ConsultLog'\n          });\n        },\n        underlayColor: \"#cccc\",\n        style: styles.buttonHighlight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonHighlight_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        }\n      }, p.allMessages[11]))))));\n    }\n  }]);\n\n  return MainMenu;\n}(Component);\n\nMainMenu.navigationOptions = function (_ref) {\n  var screenProps = _ref.screenProps;\n  return {\n    title: MainMenu_Texts[screenProps.language][12],\n    headerTintColor: screenProps.headerTintColor,\n    headerStyle: _objectSpread({\n      backgroundColor: screenProps.headerBackgroundColor\n    }, genericStyles.navigationHeader)\n  };\n};\n\nvar styles = StyleSheet.create({\n  sessionBar: {\n    width: '100%',\n    height: 0.078125 * D.MIN_GLOBAL_DIMENSION,\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    alignItems: 'center'\n  },\n  text: {\n    textDecorationLine: 'underline',\n    padding: 0.01325 * D.MIN_GLOBAL_DIMENSION,\n    fontSize: 0.04 * D.MIN_GLOBAL_DIMENSION\n  },\n  lithoDexImage: {\n    width: GLOBAL_BUTTON_WIDTH,\n    height: GLOBAL_BUTTON_HEIGHT,\n    marginTop: 0.035128805 * D.GLOBAL_SCREEN_HEIGHT,\n    marginBottom: 0.035128805 * D.GLOBAL_SCREEN_HEIGHT\n  },\n  menu: {\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 0.01325 * D.MIN_GLOBAL_DIMENSION\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    width: '100%',\n    paddingTop: 0.01375 * D.MIN_GLOBAL_DIMENSION,\n    paddingBottom: 0.09375 * D.MIN_GLOBAL_DIMENSION,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonHighlight: {\n    backgroundColor: '#f2f2f2',\n    borderColor: '#000000',\n    borderRadius: 10,\n    paddingTop: 0.0087822 * D.GLOBAL_SCREEN_HEIGHT,\n    paddingBottom: 0.0087822 * D.GLOBAL_SCREEN_HEIGHT,\n    width: GLOBAL_BUTTON_WIDTH,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  leftButton: {\n    marginLeft: 0.4 * D.GLOBAL_SCREEN_WIDTH,\n    marginRight: 0.125 * D.GLOBAL_SCREEN_WIDTH\n  },\n  rightButton: {\n    marginRight: 0.4 * D.GLOBAL_SCREEN_WIDTH,\n    marginLeft: 0.125 * D.GLOBAL_SCREEN_WIDTH\n  },\n  buttonHighlight_text: {\n    fontSize: 0.04 * D.MIN_GLOBAL_DIMENSION,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: MainMenu_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB,\n    remoteDB: state.userReducer.remoteDB,\n    syncHandler: state.userReducer.syncHandler,\n    privileges: state.userReducer.privileges\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchLogOut: function dispatchLogOut(user_id) {\n      return dispatch(changeUser(user_id));\n    },\n    dispatchResetProfileImage: function dispatchResetProfileImage() {\n      return dispatch(changeUserProfileImage(null));\n    },\n    dispatchResetPrivileges: function dispatchResetPrivileges() {\n      return dispatch(changeUserPrivileges(0));\n    },\n    dispatchResetSyncHandler: function dispatchResetSyncHandler() {\n      return dispatch(changeSyncHandler(null));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMenu);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/screens/MainMenu.js"],"names":["React","Component","NavigationEvents","connect","changeUser","changeUserProfileImage","changeUserPrivileges","changeSyncHandler","bindActionCreators","Network","MainMenu_Texts","genericStyles","genericImages","D","appConstants","Log","Database","PouchDB","plugin","require","default","GLOBAL_BUTTON_WIDTH","MIN_GLOBAL_DIMENSION","GLOBAL_BUTTON_HEIGHT","MainMenu","props","editProfile","payload","local_database","get","DEFAULT_DOCUMENT_ID","then","database","catch","e","console","error","toString","navigation","navigate","key","routeName","params","logOut","syncHandler","cancel","dispatchResetProfileImage","dispatchResetPrivileges","dispatchResetSyncHandler","getNetworkStateAsync","isInternetReachable","localDB","destroy","dispatchLogOut","UNAUTHENTICATED_ID","Alert","alert","allMessages","log_action","user_id","p","log","Platform","OS","Version","styles","menu","MAIN_MENU_BACKGROUND","flex","flexDirection","sessionBar","text","lithoDexImage","LITHODEX_ICON","row","isCore","buttonHighlight","leftButton","width","height","OUTCROP_ICON","buttonHighlight_text","rightButton","CORE_ICON","CONTACT_USERS_ICON","privileges","navigationOptions","screenProps","title","language","headerTintColor","headerStyle","backgroundColor","headerBackgroundColor","navigationHeader","StyleSheet","create","justifyContent","alignItems","textDecorationLine","padding","fontSize","marginTop","GLOBAL_SCREEN_HEIGHT","marginBottom","paddingTop","paddingBottom","borderColor","borderRadius","marginLeft","GLOBAL_SCREEN_WIDTH","marginRight","textAlign","fontWeight","mapStateToProps","state","appPreferencesReducer","userReducer","remoteDB","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, Image, TouchableHighlight, Alert,\n\t\t ScrollView, Platform, ImageBackground} from 'react-native';\n\nimport { NavigationEvents } from 'react-navigation'\n\nimport { connect } from 'react-redux'\nimport { changeUser, changeUserProfileImage, changeUserPrivileges, changeSyncHandler } from '../redux/actions/userActions'\nimport { bindActionCreators } from 'redux'\nimport * as Network from 'expo-network';\n\nimport { MainMenu_Texts } from '../languages/screens/MainMenu'\n\nimport {genericStyles}    from '../constants/genericStyles'\nimport * as genericImages from '../constants/genericImages'\nimport * as D             from '../constants/Dimensions'\nimport * as appConstants  from '../constants/appConstants'\nimport * as Log           from '../genericFunctions/logFunctions'\nimport * as Database      from '../genericFunctions/databaseFunctions'\n\nimport PouchDB from 'pouchdb-react-native'\nPouchDB.plugin(require('pouchdb-adapter-asyncstorage').default);\n\n// Definir variables globales\nGLOBAL_BUTTON_WIDTH  = 0.32 * D.MIN_GLOBAL_DIMENSION; // Anchura de las imágenes que representan los botones en esta vista\nGLOBAL_BUTTON_HEIGHT = 0.315 * D.MIN_GLOBAL_DIMENSION; // Altura de las imágenes que representan los botones en esta vista\n\nclass MainMenu extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\t// Formato de la cabecera de la vista\n\tstatic navigationOptions = ({ screenProps }) => {\n\t\treturn ({\n\t\t\ttitle:           MainMenu_Texts[screenProps.language][12],\n\t\t\theaderTintColor: screenProps.headerTintColor,\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: screenProps.headerBackgroundColor,\n\t\t\t\t...genericStyles.navigationHeader,\n\t\t\t}\n\t\t})\n\t};\n\n\t// Para registrar en el \"log\" que se ha iniciado la aplicación\n\tcomponentDidMount() {\n\t\tLog.log_action(1, this.props.user_id);  \n\t}\n\n\t// Procedimiento para ir a la vista de edición del perfil de usuario\n\teditProfile = async() => {\n\t\tvar payload = {};\n\t\tawait this.props.local_database.get(appConstants.DEFAULT_DOCUMENT_ID)\n\t\t\t.then(database => {\n\t\t\t\tpayload = database;\n\t\t\t}).catch(e => {\n\t\t\t\tconsole.error(error.toString());\n\t\t\t})\n\t\tthis.props.navigation.navigate({key: 'UserForm', routeName: 'UserForm', params: payload});\n\t}\n\n\t// Procedimiento para cerrar la sesión\n\tlogOut = async() => {\n\t\tawait this.props.syncHandler.cancel(); // Si destruyéramos la base de datos local sin haber cancelado la sincronización, destruiríamos también la remota\n\t\t// Al cerrar sesión, siempre cambiamos al usuario no autenticado\t\t \n\t\tthis.props.dispatchResetProfileImage();\n\t\tthis.props.dispatchResetPrivileges();\n\t\tthis.props.dispatchResetSyncHandler();\n\n\t\tconst {isInternetReachable} = await Network.getNetworkStateAsync();\n\t\tif (isInternetReachable){\n\t\t\t// Si hay internet, todo lo que se salvó en la base de datos local del usuario se salvó también\n\t\t\t// en la remota, de modo que ya no hace falta mantener la local almacenada en el dispositivo.\n\t\t\tthis.props.localDB.destroy(); \n\n\t\t\t// De lo contrario, la local no se destruye, y lo que puede haber en ella adicional a la remota se replicará cuando\n\t\t\t// se vuelva a iniciar sesión con la misma cuenta\n\t\t}\n\t\tthis.props.dispatchLogOut(appConstants.UNAUTHENTICATED_ID);\n\t\tDatabase.logOut();\n\n\t\t// Alerta: \"Se ha cerrado la sesión\"\n\t\tAlert.alert(this.props.allMessages[14], this.props.allMessages[10]);\n\t}\n\n\t// Lo que se le mostrará al usuario\n\trender(){\n\t\tlet p = this.props;\n\t\tconsole.log('Running on '+Platform.OS+' '+Platform.Version);\n\t\t\n\t\tif ((Platform.Version <= 14) && Platform.OS=='android') {\n\t\t\treturn(\n\t\t\t\t<View style = {styles.menu}>\n\t\t\t\t\t{/*Mensaje: \"Lamentablemente, LithoDex sólo funciona correctamente en versiones de Android 4.1 o mayor\" */}\n\t\t\t\t\t<Text>{p.allMessages[0]}</Text>\n\t\t\t\t\t}\n\t\t\t\t</View>\n\t\t\t)\n\t\t}\n\n\t\treturn(\n\t\t\t< //Imagen de fondo. Nota: Usar ImageBackground implica que todo el resto del contenido tiene que anidarse, a diferencia de si usáramos Image\n\t\t\tImageBackground source = {genericImages.MAIN_MENU_BACKGROUND} style = {{flex: 1, flexDirection: 'column'}}>\n\n\t\t\t\t{/*Barra superior en la que se encuentran las opciones de inicio de sesión. Esto se muestra cuando el usuario no está autenticado*/}\n\t\t\t\t{(this.props.user_id == appConstants.UNAUTHENTICATED_ID) &&\n\t\t\t\t\t<View style = {styles.sessionBar}>\n\n\t\t\t\t\t\t{/*Botón para registrarse*/}\n\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\tonPress = {() => this.props.navigation.navigate({ key: 'UserForm', routeName: 'UserForm'})}\n\t\t\t\t\t\t\tstyle   = {styles.text}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{p.allMessages[2]}\n\t\t\t\t\t\t</Text> \n\n\t\t\t\t\t\t{/*//Botón para iniciar sesión*/}\n\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\tonPress = {() => this.props.navigation.navigate({ key: 'Login', routeName: 'Login'})}\n\t\t\t\t\t\t\tstyle   = {styles.text}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{p.allMessages[3]}\n\t\t\t\t\t\t</Text> \n\t\t\t\t\t</View>\n\t\t\t\t}\n\n\t\t\t\t{/*Barra superior en la que se encuentran las opciones de editar perfil y cerrar sesión*/}\n\t\t\t\t{(this.props.user_id != appConstants.UNAUTHENTICATED_ID) &&\n\t\t\t\t\t<View style = {styles.sessionBar}>\n\t\t\t\t\t\t{/*Botón para editar perfil*/}\n\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\tonPress = {() => this.editProfile()}\n\t\t\t\t\t\t\tstyle   = {styles.text}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{p.allMessages[4]}\n\t\t\t\t\t\t</Text> \n\n\t\t\t\t\t\t{/*//Botón para cerrar sesión*/}\n\t\t\t\t\t\t<Text \n\t\t\t\t\t\t\tonPress = {() => this.logOut()}\n\t\t\t\t\t\t\tstyle   = {styles.text}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{p.allMessages[5]}\n\t\t\t\t\t\t</Text> \n\t\t\t\t\t</View>\n\t\t\t\t}\n\n\t\t\t\t<ScrollView>\n\t\t\t\t\t<View style = {styles.menu}>\t\n\n\t\t\t\t\t\t<Image  // Imagen de título: LithoDex\n\t\t\t\t\t\t\tstyle  = {styles.lithoDexImage}\n\t\t\t\t\t\t\tsource = {genericImages.LITHODEX_ICON}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<View style = {styles.row}>  \n\t\t\t\t\t\t\t<TouchableHighlight /// Botón para ir a la vista: \"Galería de afloramientos\"\n\t\t\t\t\t\t\t\tonPress       = {() => this.props.navigation.navigate({ key: 'ObjectGallery', routeName: 'ObjectGallery', params: {isCore: false}})}\n\t\t\t\t\t\t\t\tonLongPress   = {() => this.props.navigation.navigate({ key: 'ObjectGallery', routeName: 'ObjectGallery', params: {isCore: false}})}\n\t\t\t\t\t\t\t\tunderlayColor = '#cccc'\n\t\t\t\t\t\t\t\tstyle         = {{...styles.buttonHighlight, ...styles.leftButton}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\tstyle  = {{width: GLOBAL_BUTTON_WIDTH, height: GLOBAL_BUTTON_HEIGHT}}\n\t\t\t\t\t\t\t\t\t\tsource = {genericImages.OUTCROP_ICON}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Text style = {styles.buttonHighlight_text}>\n\t\t\t\t\t\t\t\t\t\t{p.allMessages[6]}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\n\t\t\t\t\t\t\t<TouchableHighlight  /// Botón para ir a la vista: \"Galería de núcleos\"\n\t\t\t\t\t\t\t\tonPress       = {() => this.props.navigation.navigate({ key: 'ObjectGallery', routeName: 'ObjectGallery', params: {isCore: true}})}\n\t\t\t\t\t\t\t\tonLongPress   = {() => this.props.navigation.navigate({ key: 'ObjectGallery', routeName: 'ObjectGallery', params: {isCore: true}})}\n\t\t\t\t\t\t\t\tunderlayColor = '#cccc'\n\t\t\t\t\t\t\t\tstyle         = {{...styles.buttonHighlight, ...styles.rightButton}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\tstyle  = {{width: GLOBAL_BUTTON_WIDTH, height: GLOBAL_BUTTON_HEIGHT}}\n\t\t\t\t\t\t\t\t\t\tsource = {genericImages.CORE_ICON}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Text style = {styles.buttonHighlight_text}>\n\t\t\t\t\t\t\t\t\t\t{p.allMessages[7]}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/* En esta línea (fila) están los botones de contactar usuarios*/}\n\t\t\t\t\t\t{(this.props.user_id != appConstants.UNAUTHENTICATED_ID) &&\n\t\t\t\t\t\t\t<View style = {styles.row}> \t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<TouchableHighlight // Botón\n\t\t\t\t\t\t\t\t\tonPress       = {() => this.props.navigation.navigate({ key: 'ContactUsersRootComponent', routeName: 'ContactUsersRootComponent'})}\n\t\t\t\t\t\t\t\t\tonLongPress   = {() => this.props.navigation.navigate({ key: 'ContactUsersRootComponent', routeName: 'ContactUsersRootComponent'})}\n\t\t\t\t\t\t\t\t\tunderlayColor = '#cccc'\n\t\t\t\t\t\t\t\t\tstyle         = {styles.buttonHighlight}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\t\tstyle  = {{width: GLOBAL_BUTTON_WIDTH, height: GLOBAL_BUTTON_HEIGHT}}\n\t\t\t\t\t\t\t\t\t\t\tsource = {genericImages.CONTACT_USERS_ICON}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Text style = {styles.buttonHighlight_text}>\n\t\t\t\t\t\t\t\t\t\t\t{p.allMessages[13]}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/*//En esta línea (fila) están los botones: \"Configuración\" y \"Sobre LithoDex\". Estos botones no vienen acompañados por imágenes como los anteriores.*/}\n\t\t\t\t\t\t<View style = {styles.row}> \n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t<TouchableHighlight // Botón para ir a la configuración\n\t\t\t\t\t\t\t\tonPress       = {() => this.props.navigation.navigate({ key: 'Settings', routeName: 'Settings'})}\n\t\t\t\t\t\t\t\tonLongPress   = {() => this.props.navigation.navigate({ key: 'Settings', routeName: 'Settings'})}\n\t\t\t\t\t\t\t\tunderlayColor = '#cccc'\n\t\t\t\t\t\t\t\tstyle         = {{...styles.buttonHighlight, ...styles.leftButton}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text style   = {styles.buttonHighlight_text}>\n\t\t\t\t\t\t\t\t\t{p.allMessages[8]}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<TouchableHighlight // Botón para ir a la información \"Sobre LithoDex\"\n\t\t\t\t\t\t\t\tonPress       = {() => this.props.navigation.navigate({ key: 'AboutLithoDex', routeName: 'AboutLithoDex'})}\n\t\t\t\t\t\t\t\tonLongPress   = {() => this.props.navigation.navigate({ key: 'AboutLithoDex', routeName: 'AboutLithoDex'})}\n\t\t\t\t\t\t\t\tunderlayColor = '#cccc'\n\t\t\t\t\t\t\t\tstyle         = {{...styles.buttonHighlight, ...styles.rightButton}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text style   = {styles.buttonHighlight_text}>\n\t\t\t\t\t\t\t\t\t{p.allMessages[9]}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Esta funcionalidad sólo le corresponde al administrador*/}\n\t\t\t\t\t\t{ (this.props.privileges == 2) &&\n\t\t\t\t\t\t\t<View style = {styles.row}>\n\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t<TouchableHighlight // Botón para ir a la ventana del \"log\"\n\t\t\t\t\t\t\t\t\tonPress       = {() => this.props.navigation.navigate({ key: 'ConsultLog', routeName: 'ConsultLog'})}\n\t\t\t\t\t\t\t\t\tonLongPress   = {() => this.props.navigation.navigate({ key: 'ConsultLog', routeName: 'ConsultLog'})}\n\t\t\t\t\t\t\t\t\tunderlayColor = '#cccc'\n\t\t\t\t\t\t\t\t\tstyle         = {styles.buttonHighlight}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Text style   = {styles.buttonHighlight_text}>\n\t\t\t\t\t\t\t\t\t\t{p.allMessages[11]}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</View>\n\t\t\t\t</ScrollView>\n\t\t\t</ImageBackground>\n\t\t);\n\t}\n}\n\n// Constante para darle formato a los diversos componentes de esta pantalla\nconst styles = StyleSheet.create({\n\n\t// Formato del cintillo superior en el que están los botones de registro, inicio de sesión, etc.\n\tsessionBar: {\n\t\twidth:           '100%',\n\t\theight:          0.078125 * D.MIN_GLOBAL_DIMENSION, // 25 en mi teléfono\n\t\tjustifyContent:  'flex-end',\n\t\tflexDirection:   'row',\n\t\tbackgroundColor: '#f5f5f5',\n\t\talignItems:      'center',\n\t},\n\n\t// Formato de los textos que aparecen en la barra superior\n\ttext: {\n\t\ttextDecorationLine: 'underline',\n\t\tpadding:            0.01325 * D.MIN_GLOBAL_DIMENSION, // 10 en mi teléfono\n\t\tfontSize:           0.04 * D.MIN_GLOBAL_DIMENSION,    // 12.8 en mi teléfono\n\t},\n\n\t// Formato de la imagen superior con el logo de LithoDex\n\tlithoDexImage: {\n\t\twidth:        GLOBAL_BUTTON_WIDTH, \n\t\theight:       GLOBAL_BUTTON_HEIGHT, \n\t\tmarginTop:    0.035128805 * D.GLOBAL_SCREEN_HEIGHT, // 20 en mi teléfono\n\t\tmarginBottom: 0.035128805 * D.GLOBAL_SCREEN_HEIGHT, // 20 en mi teléfono\n\t},\n\n\t// Usado para darle formato a toda la parte que tiene la imagen de fondo (no incluye el cintillo superior de registro/inicio de sesión)\n\tmenu: {\n\t\tbackgroundColor: 'transparent',\n\t\talignItems:      'center',\n\t\tjustifyContent:  'center',\n\t\tpadding:         0.01325 * D.MIN_GLOBAL_DIMENSION, // 10 en mi teléfono\n\t},\n\n\t// Formato de las líneas que representan las divisiones horizontales de la vista\n\trow: {\n\t\tflex:            1,\n\t\tflexDirection:   'row',\n\t\twidth:           '100%',\n\t\tpaddingTop:      0.01375 * D.MIN_GLOBAL_DIMENSION,\n\t\tpaddingBottom:   0.09375 * D.MIN_GLOBAL_DIMENSION, // 30 en mi teléfono\n\t\tbackgroundColor: 'transparent',\n\t\talignItems:      'center',\n\t\tjustifyContent:  'center',\n\t},\n\n\t// Formato de un botón creado con un highlight (no el que trae por defecto html)\n\tbuttonHighlight: {\n\t\tbackgroundColor: '#f2f2f2',\n\t\tborderColor:     '#000000',\n\t\tborderRadius:    10,\n\t\tpaddingTop:      0.0087822 * D.GLOBAL_SCREEN_HEIGHT, \n\t\tpaddingBottom:   0.0087822 * D.GLOBAL_SCREEN_HEIGHT,\n\t\twidth:           GLOBAL_BUTTON_WIDTH,\n\t\talignItems:      'center',\n\t\tjustifyContent:  'center',\n\t},\n\n\t// Se le anexa al formato buttonHighlight en los botones que quedan a la izquierda de la pantalla\n\tleftButton: {\n\t\tmarginLeft:  0.4 * D.GLOBAL_SCREEN_WIDTH, \n\t\tmarginRight: 0.125 * D.GLOBAL_SCREEN_WIDTH,\n\t},\n\n\t// Se le anexa al formato buttonHighlight en los botones que quedan a la derecha de la pantalla\n\trightButton: {\n\t\tmarginRight: 0.4 * D.GLOBAL_SCREEN_WIDTH, \n\t\tmarginLeft:  0.125 * D.GLOBAL_SCREEN_WIDTH,\n\t},\n  \n\t// Formato de los textos que se muestran sobre los botones creados con highlight\n\tbuttonHighlight_text: {\n\t\tfontSize:   0.04 * D.MIN_GLOBAL_DIMENSION, // 12.8 en mi teléfono\n\t\ttextAlign:  'center',\n\t\tfontWeight: 'bold',\n\t},\n});\n\n\n// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages: MainMenu_Texts[state.appPreferencesReducer.language], \n\t\tuser_id:     state.userReducer.user_id,\n\t\tlocalDB:     state.userReducer.localDB,\n\t\tremoteDB:    state.userReducer.remoteDB,\n\t\tsyncHandler: state.userReducer.syncHandler,\n\t\tprivileges:  state.userReducer.privileges,\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchLogOut:            (user_id) => dispatch(changeUser(user_id)),\n\t\tdispatchResetProfileImage: ()        => dispatch(changeUserProfileImage(null)),\n\t\tdispatchResetPrivileges:   ()        => dispatch(changeUserPrivileges(0)),\n\t\tdispatchResetSyncHandler:  ()        => dispatch(changeSyncHandler(null)),\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMenu);"]},"metadata":{},"sourceType":"module"}