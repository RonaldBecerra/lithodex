{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\objectsOfStudy\\\\ObjectGallery.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { ListItem, Button as ButtonWithIcon } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { NavigationEvents } from 'react-navigation';\nimport { connect } from 'react-redux';\nimport { ObjectGallery_Texts } from \"../../languages/screens/objectsOfStudy/ObjectGallery\";\nimport * as ExpoFileSystem from 'expo-file-system';\nimport * as ExpoDocumentPicker from 'expo-document-picker';\nimport * as ExpoMediaLibrary from 'expo-media-library';\nimport * as Log from \"../../genericFunctions/logFunctions\";\nimport * as Database from \"../../genericFunctions/databaseFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR } from \"../../constants/genericStyles\";\nimport { UNAUTHENTICATED_ID, OUTCROPS_DOCUMENT_ID, CORES_DOCUMENT_ID } from \"../../constants/appConstants\";\nimport { generateObject_id } from \"../../genericFunctions/otherFunctions\";\n\nvar ObjectGallery = function (_Component) {\n  _inherits(ObjectGallery, _Component);\n\n  function ObjectGallery(props) {\n    var _this;\n\n    _classCallCheck(this, ObjectGallery);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ObjectGallery).call(this, props));\n\n    _this.loadObjects = function _callee() {\n      var s, p;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              s = _this.state;\n              p = _this.props;\n              p.localDB.get(s.isCore ? CORES_DOCUMENT_ID : OUTCROPS_DOCUMENT_ID).then(function (document) {\n                var objects = document.objects;\n                var objectsArray = Object.keys(objects).map(function (key) {\n                  return _objectSpread({}, objects[key]);\n                });\n\n                _this.setState({\n                  loading: false,\n                  modalsEnabled: true,\n                  renderList: objectsArray.map(function (item, index) {\n                    return React.createElement(ListItem, {\n                      chevron: true,\n                      bottomDivider: true,\n                      key: item._id,\n                      onPress: function onPress() {\n                        _this.goToObjectScreen(item);\n                      },\n                      onLongPress: function onLongPress() {\n                        _this.showOptionsModal(item);\n                      },\n                      title: item.name,\n                      subtitle: s.isCore ? p.allMessages[4] + _this.substituteNull(item.date) + \"\\n\" + p.allMessages[5] + _this.substituteNull(item.locationInWords) + \"\\n\" + p.allMessages[6] + _this.substituteNull(item.baseHeight[item.unit][0], item.unit == 0 ? ' m' : ' ft') + \"\\n\" + p.allMessages[7] + _this.substituteNull(item.endHeight[item.unit][0], item.unit == 0 ? ' m' : ' ft') + \"\\n\" + p.allMessages[8] + _this.substituteNull(item.DF[item.unit][0], item.unit == 0 ? ' m' : ' ft') + \"\\n\" + p.allMessages[9] + _this.substituteNull(item.GL[item.unit][0], item.unit == 0 ? ' m' : ' ft') : p.allMessages[4] + _this.substituteNull(item.date) + \"\\n\" + p.allMessages[5] + _this.substituteNull(item.locationInWords) + \"\\n\" + p.allMessages[6] + _this.substituteNull(item.baseHeight[item.unit][0], item.unit == 0 ? ' m' : ' ft'),\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 67\n                      }\n                    });\n                  })\n                });\n              }).catch(function (e) {\n                _this.setState({\n                  loading: false,\n                  renderList: [],\n                  optionsModalVisible: false,\n                  selectedObject: null,\n                  modalsEnabled: true\n                });\n\n                Database.dummy_database();\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.substituteNull = function (mainMessage) {\n      var secondMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      if (mainMessage == null) {\n        return \"---\";\n      } else {\n        return mainMessage.toString() + secondMessage.toString();\n      }\n    };\n\n    _this.closeOptionsModal = function () {\n      _this.setState({\n        optionsModalVisible: false\n      });\n    };\n\n    _this.closeNewObjectModal = function () {\n      _this.setState({\n        newObjectModalVisible: false,\n        loading: false\n      });\n    };\n\n    _this.newObject = function () {\n      _this.closeNewObjectModal();\n\n      _this.props.navigation.navigate({\n        key: 'ObjectForm',\n        routeName: 'ObjectForm',\n        params: {\n          isCore: _this.state.isCore\n        }\n      });\n    };\n\n    _this.readObjectFromFile = function _callee2() {\n      var file, fileContent, object, commonConditions, outcropConditions, coreConditions, stratums, completeSuccess, stratum, listOfImages, j, assetImage;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ExpoDocumentPicker.getDocumentAsync());\n\n            case 3:\n              file = _context2.sent;\n\n              if (!(file.type === 'success')) {\n                _context2.next = 53;\n                break;\n              }\n\n              _this.setState({\n                loading: true\n              });\n\n              _this.closeNewObjectModal();\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(ExpoFileSystem.readAsStringAsync(file.uri));\n\n            case 9:\n              fileContent = _context2.sent;\n              object = JSON.parse(fileContent);\n              commonConditions = object.hasOwnProperty('_id') && object.hasOwnProperty('name') && object.hasOwnProperty('locationInWords') && object.hasOwnProperty('longitude') && object.hasOwnProperty('latitude') && object.hasOwnProperty('scale') && object.hasOwnProperty('showInfo') && object.hasOwnProperty('showLithology') && object.hasOwnProperty('showStructure') && object.hasOwnProperty('showFossils') && object.hasOwnProperty('showPictures') && object.hasOwnProperty('showNotes') && object.hasOwnProperty('showCarbonatesRule') && object.hasOwnProperty('showNoCarbonatesRule') && object.hasOwnProperty('layerList') && object.hasOwnProperty('numberOfItems') && object.hasOwnProperty('date') && object.hasOwnProperty('unit') && object.hasOwnProperty('baseHeight');\n              outcropConditions = commonConditions && !object.hasOwnProperty('gammaRayValues');\n              coreConditions = commonConditions && object.hasOwnProperty('showGammaRay') && object.hasOwnProperty('R') && object.hasOwnProperty('DF') && object.hasOwnProperty('GL') && object.hasOwnProperty('TVD') && object.hasOwnProperty('TVDFromGL') && object.hasOwnProperty('endHeight') && object.hasOwnProperty('gammaRayValues');\n\n              if (!(_this.state.isCore && coreConditions || !_this.state.isCore && outcropConditions)) {\n                _context2.next = 49;\n                break;\n              }\n\n              stratums = object.layerList;\n              completeSuccess = true;\n              i = 0;\n\n            case 18:\n              if (!(i < stratums.length)) {\n                _context2.next = 42;\n                break;\n              }\n\n              stratum = stratums[i];\n              listOfImages = stratum.image_data.listOfImages;\n\n              if (!(listOfImages != null)) {\n                _context2.next = 39;\n                break;\n              }\n\n              _context2.prev = 22;\n              j = 0;\n              j = 0;\n\n            case 25:\n              if (!(j < listOfImages.length)) {\n                _context2.next = 33;\n                break;\n              }\n\n              _context2.next = 28;\n              return _regeneratorRuntime.awrap(ExpoMediaLibrary.createAssetAsync(listOfImages[j].uri));\n\n            case 28:\n              assetImage = _context2.sent;\n              listOfImages[j].uri = assetImage.uri;\n\n            case 30:\n              j++;\n              _context2.next = 25;\n              break;\n\n            case 33:\n              _context2.next = 39;\n              break;\n\n            case 35:\n              _context2.prev = 35;\n              _context2.t0 = _context2[\"catch\"](22);\n              stratum.image_data = {};\n              completeSuccess = false;\n\n            case 39:\n              i++;\n              _context2.next = 18;\n              break;\n\n            case 42:\n              object._id = generateObject_id();\n              _context2.next = 45;\n              return _regeneratorRuntime.awrap(Database.saveObjectOfStudyInfo(object, _this.state.isCore, true, _this.props.user_id, object._id, _this.props.localDB));\n\n            case 45:\n              _this.loadObjects();\n\n              if (completeSuccess) {\n                Alert.alert(_this.props.allMessages[10], _this.props.allMessages[15]);\n              } else {\n                Alert.alert(_this.props.allMessages[10], _this.props.allMessages[16]);\n              }\n\n              _context2.next = 51;\n              break;\n\n            case 49:\n              Alert.alert(_this.props.allMessages[10], _this.props.allMessages[17](_this.state.objectTypeMessage));\n\n              _this.closeNewObjectModal();\n\n            case 51:\n              _context2.next = 54;\n              break;\n\n            case 53:\n              if (file.type === 'cancel') {} else {\n                Alert.alert(_this.props.allMessages[10], _this.props.allMessages[18]);\n\n                _this.closeNewObjectModal();\n              }\n\n            case 54:\n              _context2.next = 60;\n              break;\n\n            case 56:\n              _context2.prev = 56;\n              _context2.t1 = _context2[\"catch\"](0);\n              console.error(_context2.t1.toString());\n\n              _this.closeNewObjectModal();\n\n            case 60:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 56], [22, 35]]);\n    };\n\n    _this.state = _objectSpread({}, _this.props.navigation.state.params, {\n      loading: true,\n      renderList: [],\n      optionsModalVisible: false,\n      newObjectModalVisible: false,\n      selectedObject: null,\n      modalsEnabled: true,\n      objectTypeMessage: _this.props.navigation.getParam('isCore') ? _this.props.allMessages[0] : _this.props.allMessages[1]\n    });\n    return _this;\n  }\n\n  _createClass(ObjectGallery, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Log.log_action(4, this.props.user_id, this.state.isCore);\n    }\n  }, {\n    key: \"canNavigate\",\n    value: function canNavigate() {\n      return !(this.state.newObjectModalVisible || this.state.optionsModalVisible);\n    }\n  }, {\n    key: \"goToObjectScreen\",\n    value: function goToObjectScreen(object) {\n      if (this.canNavigate()) {\n        this.setState({\n          modalsEnabled: false\n        });\n        this.props.navigation.navigate({\n          key: 'ObjectScreen',\n          routeName: 'ObjectScreen',\n          params: _objectSpread({}, object, {\n            isCore: this.state.isCore\n          })\n        });\n      }\n    }\n  }, {\n    key: \"showOptionsModal\",\n    value: function showOptionsModal(object) {\n      this.setState({\n        selectedObject: object,\n        optionsModalVisible: true\n      });\n    }\n  }, {\n    key: \"showNewObjectModal\",\n    value: function showNewObjectModal() {\n      this.setState({\n        newObjectModalVisible: true\n      });\n    }\n  }, {\n    key: \"showLocationInGoogleMaps\",\n    value: function showLocationInGoogleMaps(object) {\n      var p = this.props;\n\n      if (object.latitude[0] != null && object.longitude[0] != null) {\n        this.props.navigation.navigate({\n          key: 'GoogleMaps',\n          routeName: 'GoogleMaps',\n          params: _objectSpread({}, object, {\n            isCore: this.state.isCore\n          })\n        });\n        this.setState({\n          optionsModalVisible: false\n        });\n      } else {\n        Alert.alert(p.allMessages[10], p.allMessages[11](this.state.objectTypeMessage));\n      }\n    }\n  }, {\n    key: \"showLocationInGoogleEarth\",\n    value: function showLocationInGoogleEarth(object) {\n      var p, latitude, longitude, altitudeMeters, url, canOpen;\n      return _regeneratorRuntime.async(function showLocationInGoogleEarth$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              p = this.props;\n              latitude = object.latitude;\n              longitude = object.longitude;\n              altitudeMeters = this.state.isCore ? (object.GL[0][0] + 10000).toString() : (object.baseHeight[0][0] + 10000).toString();\n              url = \"https://earth.google.com/web/\";\n\n              if (!(latitude[0] != null || longitude[0] != null)) {\n                _context3.next = 14;\n                break;\n              }\n\n              url += \"@\" + latitude[1] + \",\" + longitude[1] + \",\" + altitudeMeters + \"a\";\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(Linking.canOpenURL(url));\n\n            case 9:\n              canOpen = _context3.sent;\n              this.setState({\n                optionsModalVisible: false\n              });\n\n              if (canOpen) {\n                Linking.openURL(url);\n              } else {\n                Alert.alert(p.allMessages[10], p.allMessages[12]);\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 14:\n              Alert.alert(p.allMessages[10], p.allMessages[11](this.state.objectTypeMessage));\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"editObjectInfo\",\n    value: function editObjectInfo(object) {\n      this.setState({\n        optionsModalVisible: false\n      });\n      this.props.navigation.navigate({\n        key: 'ObjectForm',\n        routeName: 'ObjectForm',\n        params: _objectSpread({}, object, {\n          isCore: this.state.isCore\n        })\n      });\n    }\n  }, {\n    key: \"saveObject\",\n    value: function saveObject(object) {\n      var _await$ExpoMediaLibra, status, folder, stratums, stratum, listOfImages, stratumFolder, j, assetImage, fileUri, assetFile;\n\n      return _regeneratorRuntime.async(function saveObject$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(ExpoMediaLibrary.getPermissionsAsync());\n\n            case 2:\n              _await$ExpoMediaLibra = _context4.sent;\n              status = _await$ExpoMediaLibra.status;\n\n              if (!(status === \"granted\")) {\n                _context4.next = 42;\n                break;\n              }\n\n              this.closeOptionsModal();\n              this.setState({\n                loading: true\n              });\n              folder = \"Lithodex/\" + this.props.user_id + (this.state.isCore ? \"/Cores/\" : \"/Outcrops/\") + object.name + \"_\" + object._id;\n              stratums = object.layerList;\n              i = 0;\n\n            case 10:\n              if (!(i < stratums.length)) {\n                _context4.next = 30;\n                break;\n              }\n\n              stratum = stratums[i];\n              listOfImages = stratum.image_data.listOfImages;\n              stratumFolder = folder + \"/\" + stratum.name + \"_\" + stratum.key;\n\n              if (!(listOfImages != null)) {\n                _context4.next = 27;\n                break;\n              }\n\n              j = 0;\n              j = 0;\n\n            case 17:\n              if (!(j < listOfImages.length)) {\n                _context4.next = 27;\n                break;\n              }\n\n              _context4.next = 20;\n              return _regeneratorRuntime.awrap(ExpoMediaLibrary.createAssetAsync(listOfImages[j].uri));\n\n            case 20:\n              assetImage = _context4.sent;\n              listOfImages[j].uri = \"/storage/emulated/0/\" + stratumFolder + \"/\" + assetImage.filename;\n              _context4.next = 24;\n              return _regeneratorRuntime.awrap(ExpoMediaLibrary.createAlbumAsync(stratumFolder, assetImage, false));\n\n            case 24:\n              j++;\n              _context4.next = 17;\n              break;\n\n            case 27:\n              i++;\n              _context4.next = 10;\n              break;\n\n            case 30:\n              fileUri = ExpoFileSystem.documentDirectory + \"information\" + \".txt\";\n              _context4.next = 33;\n              return _regeneratorRuntime.awrap(ExpoFileSystem.writeAsStringAsync(fileUri, JSON.stringify(object), {\n                encoding: ExpoFileSystem.EncodingType.UTF8\n              }));\n\n            case 33:\n              _context4.next = 35;\n              return _regeneratorRuntime.awrap(ExpoMediaLibrary.createAssetAsync(fileUri));\n\n            case 35:\n              assetFile = _context4.sent;\n              _context4.next = 38;\n              return _regeneratorRuntime.awrap(ExpoMediaLibrary.createAlbumAsync(folder, assetFile, false));\n\n            case 38:\n              this.setState({\n                loading: false\n              });\n              Alert.alert(this.props.allMessages[10], this.props.allMessages[13](this.state.objectTypeMessage));\n              _context4.next = 44;\n              break;\n\n            case 42:\n              this.setState({\n                loading: false\n              });\n              Alert.alert(this.props.allMessages[10], this.props.allMessages[14]);\n\n            case 44:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"deleteObject\",\n    value: function deleteObject() {\n      var _this2 = this;\n\n      var p = this.props;\n\n      var deleteObjectAux = function deleteObjectAux() {\n        var id_to_delete = _this2.state.selectedObject._id;\n        Database.deleteObjectOfStudy(id_to_delete, _this2.state.isCore, _this2.props.user_id, _this2.props.localDB);\n\n        var list = _this2.state.renderList.filter(function (item) {\n          return item.key.toString() !== id_to_delete.toString();\n        });\n\n        _this2.setState({\n          optionsModalVisible: false,\n          renderList: list\n        });\n      };\n\n      Alert.alert(p.allMessages[10], p.allMessages[19](this.state.objectTypeMessage), [{\n        text: p.allMessages[20],\n        onPress: function onPress() {\n          return deleteObjectAux();\n        }\n      }, {\n        text: p.allMessages[21]\n      }]);\n    }\n  }, {\n    key: \"optionsModalView\",\n    value: function optionsModalView() {\n      var _this3 = this;\n\n      var p = this.props;\n      var s = this.state;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        }\n      }, React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: this.state.optionsModalVisible,\n        onRequestClose: this.closeOptionsModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.9,\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        }\n      }, React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: {\n          name: 'create'\n        },\n        title: p.allMessages[22](s.objectTypeMessage),\n        onPress: function onPress() {\n          _this3.editObjectInfo(s.selectedObject);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        }\n      })), React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: {\n          name: 'place'\n        },\n        title: p.allMessages[23],\n        onPress: function onPress() {\n          _this3.showLocationInGoogleMaps(s.selectedObject);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        }\n      })), React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: React.createElement(Icon, {\n          name: \"google-earth\",\n          size: 20,\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          }\n        }),\n        title: \"  \" + p.allMessages[24],\n        onPress: function onPress() {\n          _this3.showLocationInGoogleEarth(s.selectedObject);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        }\n      })), React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: {\n          name: 'description'\n        },\n        title: p.allMessages[25],\n        onPress: function onPress() {\n          _this3.saveObject(s.selectedObject);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        }\n      })), React.createElement(View, {\n        style: _objectSpread({}, genericStyles.simple_center, {\n          flex: 1.2\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[26](s.objectTypeMessage),\n        color: \"red\",\n        onPress: function onPress() {\n          return _this3.deleteObject();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        }\n      }))), React.createElement(View, {\n        style: _objectSpread({}, genericStyles.simple_center, {\n          flex: 0.1,\n          padding: 10\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[27],\n        onPress: this.closeOptionsModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        }\n      }))));\n    }\n  }, {\n    key: \"newObjectModalView\",\n    value: function newObjectModalView() {\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        }\n      }, React.createElement(Modal, {\n        animationType: \"none\",\n        transparent: false,\n        visible: this.state.newObjectModalVisible,\n        onRequestClose: this.closeNewObjectModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.7,\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          paddingTop: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        }\n      }, React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: {\n          name: 'create'\n        },\n        title: p.allMessages[28],\n        onPress: this.newObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        }\n      })), React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: {\n          name: 'description'\n        },\n        title: p.allMessages[29],\n        onPress: this.readObjectFromFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 0.3,\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexDirection: 'column',\n          paddingBottom: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[27],\n        onPress: this.closeNewObjectModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        }\n      }))));\n    }\n  }, {\n    key: \"activateLoadObjects\",\n    value: function activateLoadObjects() {\n      this.loadObjects();\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var p = this.props;\n\n      if (this.state.loading) {\n        return React.createElement(View, {\n          style: genericStyles.simple_center,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 534\n          }\n        }, this.activateLoadObjects(), React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538\n          }\n        }, p.allMessages[30], \"...\"));\n      }\n\n      return React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        }\n      }, React.createElement(NavigationEvents, {\n        onWillFocus: function onWillFocus(payload) {\n          return _this4.loadObjects();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        }\n      }), this.optionsModalView(), this.newObjectModalView(), React.createElement(View, {\n        style: {\n          flex: 0.9,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        }\n      }, React.createElement(ScrollView, {\n        keyboardShouldPersistTaps: \"handled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        }\n      }, this.state.renderList)), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        icon: {\n          name: 'playlist-add'\n        },\n        title: p.allMessages[31](this.state.objectTypeMessage),\n        onPress: this.state.modalsEnabled ? function () {\n          _this4.showNewObjectModal();\n        } : function () {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        }\n      })));\n    }\n  }]);\n\n  return ObjectGallery;\n}(Component);\n\nObjectGallery.navigationOptions = function (_ref) {\n  var screenProps = _ref.screenProps,\n      navigation = _ref.navigation;\n  return {\n    title: navigation.state.params.isCore ? ObjectGallery_Texts[screenProps.language][2] : ObjectGallery_Texts[screenProps.language][3],\n    headerTintColor: screenProps.headerTintColor,\n    headerStyle: _objectSpread({\n      backgroundColor: screenProps.headerBackgroundColor\n    }, genericStyles.navigationHeader)\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: ObjectGallery_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB,\n    remoteDB: state.userReducer.remoteDB\n  };\n};\n\nexport default connect(mapStateToProps)(ObjectGallery);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/screens/objectsOfStudy/ObjectGallery.js"],"names":["React","Component","ListItem","Button","ButtonWithIcon","Icon","NavigationEvents","connect","ObjectGallery_Texts","ExpoFileSystem","ExpoDocumentPicker","ExpoMediaLibrary","Log","Database","genericStyles","DARK_GRAY_COLOR","UNAUTHENTICATED_ID","OUTCROPS_DOCUMENT_ID","CORES_DOCUMENT_ID","generateObject_id","ObjectGallery","props","loadObjects","s","state","p","localDB","get","isCore","then","document","objects","objectsArray","Object","keys","map","key","setState","loading","modalsEnabled","renderList","item","index","_id","goToObjectScreen","showOptionsModal","name","allMessages","substituteNull","date","locationInWords","baseHeight","unit","endHeight","DF","GL","catch","e","optionsModalVisible","selectedObject","dummy_database","mainMessage","secondMessage","toString","closeOptionsModal","closeNewObjectModal","newObjectModalVisible","newObject","navigation","navigate","routeName","params","readObjectFromFile","getDocumentAsync","file","type","readAsStringAsync","uri","fileContent","object","JSON","parse","commonConditions","hasOwnProperty","outcropConditions","coreConditions","stratums","layerList","completeSuccess","i","length","stratum","listOfImages","image_data","j","createAssetAsync","assetImage","saveObjectOfStudyInfo","user_id","Alert","alert","objectTypeMessage","console","error","getParam","log_action","canNavigate","latitude","longitude","altitudeMeters","url","Linking","canOpenURL","canOpen","openURL","getPermissionsAsync","status","folder","stratumFolder","filename","createAlbumAsync","fileUri","documentDirectory","writeAsStringAsync","stringify","encoding","EncodingType","UTF8","assetFile","deleteObjectAux","id_to_delete","deleteObjectOfStudy","list","filter","text","onPress","flex","justifyContent","alignItems","flexDirection","marginTop","simple_center","editObjectInfo","showLocationInGoogleMaps","showLocationInGoogleEarth","saveObject","deleteObject","padding","paddingTop","paddingBottom","activateLoadObjects","lightGray_background","payload","optionsModalView","newObjectModalView","down_buttons","showNewObjectModal","navigationOptions","screenProps","title","language","headerTintColor","headerStyle","backgroundColor","headerBackgroundColor","navigationHeader","mapStateToProps","appPreferencesReducer","userReducer","remoteDB"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button as ButtonNoIcon, Text, View, ScrollView,\n\t     ActivityIndicator, Modal, Alert, Linking} from 'react-native';\n\nimport { ListItem, Button as ButtonWithIcon} from 'react-native-elements'\n\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons'\n\nimport { NavigationEvents } from 'react-navigation'\nimport { connect } from 'react-redux'\nimport { ObjectGallery_Texts } from '../../languages/screens/objectsOfStudy/ObjectGallery'\n\nimport * as ExpoFileSystem     from 'expo-file-system'\nimport * as ExpoDocumentPicker from 'expo-document-picker'\nimport * as ExpoMediaLibrary   from 'expo-media-library'\n\nimport * as Log from '../../genericFunctions/logFunctions'\nimport * as Database from '../../genericFunctions/databaseFunctions'\nimport { genericStyles, DARK_GRAY_COLOR } from '../../constants/genericStyles'\nimport { UNAUTHENTICATED_ID, OUTCROPS_DOCUMENT_ID, CORES_DOCUMENT_ID } from '../../constants/appConstants'\nimport { generateObject_id } from '../../genericFunctions/otherFunctions'\n\n\nclass ObjectGallery extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\t...this.props.navigation.state.params,\n\t\t\tloading:               true,  // Variable que determina si todavía se están cargando los objetos desde la base de datos\n\t\t\trenderList:            [],    // Lista de objetos que se muestran en pantalla\n\t\t\toptionsModalVisible:   false, // Determina si está visible el modal que muestra las opciones de un objeto de estudio\n\t\t\tnewObjectModalVisible: false, // Determina si está visible el modal que permite decidir si el nuevo objeto se agrega desde archivo o si se rellena uno nuevo\n\t\t\tselectedObject:        null,  /* Esta variable tendrá el objeto que se haya seleccionado en la lista de objetos, bien sea para luego mostrar el modal\n\t\t\t                                 o para ir a la ventana donde están sus estratos.*/\n\t\t\tmodalsEnabled:         true,  // Variable que indica que se puede acceder a los modales. Se hace falsa en el momento en que estamos navegando a otra vista\n\n\t\t\t// Contiene la cadena \"núcleo\" o \"afloramiento\" según sea el caso, en el idioma actual\n\t\t\tobjectTypeMessage: (this.props.navigation.getParam('isCore') ? this.props.allMessages[0] : this.props.allMessages[1]),\n\t\t}\n\t}\n\n\t// Formato de la cabecera de la vista\n\tstatic navigationOptions = ({ screenProps, navigation }) => ({\n\t\ttitle: (navigation.state.params.isCore) ? ObjectGallery_Texts[screenProps.language][2] : ObjectGallery_Texts[screenProps.language][3],\n\t\theaderTintColor: screenProps.headerTintColor,\n\t\theaderStyle: {\n\t\t\tbackgroundColor: screenProps.headerBackgroundColor,\n\t\t\t...genericStyles.navigationHeader,\n\t\t}\n\t});\n\n\t// Función para cargar los objetos desde la base de datos\n\tloadObjects = async() => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\tp.localDB.get(s.isCore ? CORES_DOCUMENT_ID : OUTCROPS_DOCUMENT_ID)\n\t\t\t.then(document => {\n\t\t\t\tlet objects = document.objects;\n\t\t\t\tlet objectsArray = Object.keys(objects).map((key) => ({...objects[key]}));\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tmodalsEnabled: true,\n\t\t\t\t\trenderList: objectsArray.map((item, index) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tchevron\n\t\t\t\t\t\t\tbottomDivider\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tkey         = {item._id}\n\t\t\t\t\t\t\tonPress     = {() => {this.goToObjectScreen(item)}}\n\t\t\t\t\t\t\tonLongPress = {() => {this.showOptionsModal(item)}}\n\t\t\t\t\t\t\ttitle       = {item.name}  \n\t\t\t\t\t\t\tsubtitle    = {\n\t\t\t\t\t\t\t\t(s.isCore) ? (\n\t\t\t\t\t\t\t\t\t\tp.allMessages[4] + this.substituteNull(item.date) + \"\\n\" + p.allMessages[5] + this.substituteNull(item.locationInWords)\n\t\t\t\t\t\t\t\t\t\t+ \"\\n\" + p.allMessages[6] + this.substituteNull(item.baseHeight[item.unit][0], ((item.unit == 0) ? ' m' : ' ft'))\n\t\t\t\t\t\t\t\t\t\t+ \"\\n\" + p.allMessages[7] + this.substituteNull(item.endHeight[item.unit][0], ((item.unit == 0) ? ' m' : ' ft'))\n\t\t\t\t\t\t\t\t\t\t+ \"\\n\" + p.allMessages[8] + this.substituteNull(item.DF[item.unit][0], ((item.unit == 0) ? ' m' : ' ft'))\n\t\t\t\t\t\t\t\t\t\t+ \"\\n\" + p.allMessages[9] + this.substituteNull(item.GL[item.unit][0], ((item.unit == 0) ? ' m' : ' ft'))\n\t\t\t\t\t\t\t\t\t\t//+ \"\\n\" + p.allMessages[5] + item.TVD[item.unit][0] + ((item.unit == 0) ? ' m' : ' ft')\n\t\t\t\t\t\t\t\t\t\t//+ \"\\n\" + p.allMessages[6] + item.R[item.unit] + ((item.unit == 0) ? ' m' : ' ft')\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\tp.allMessages[4] + this.substituteNull(item.date) + \"\\n\" + p.allMessages[5] + this.substituteNull(item.locationInWords) + \"\\n\" +\n\t\t\t\t\t\t\t\t\t\tp.allMessages[6] + this.substituteNull(item.baseHeight[item.unit][0], ((item.unit == 0) ? ' m' : ' ft'))\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t})\n\t\t\t}).catch(e => {\n\t\t\t\t// No se encontró una base de datos, así que se creará una dummy\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading:             false,\n\t\t\t\t\trenderList:          [],\n\t\t\t\t\toptionsModalVisible: false,\n\t\t\t\t\tselectedObject:      null,\n\t\t\t\t\tmodalsEnabled:       true,\n\t\t\t\t})\n\t\t\t\tDatabase.dummy_database();\n\t\t\t})\n\t}\n\n\t// Para registrar en el \"log\" que se entró en la galería\n\tcomponentDidMount(){\n\t\tLog.log_action(4, this.props.user_id, this.state.isCore);\n\t}\n\n\t// Función para que cuando haya un campo nulo, en lugar de mostrarse la palabra \"null\" se muestre \"---\"\n\tsubstituteNull = (mainMessage, secondMessage='') => {\n\t\tif (mainMessage == null){\n\t\t\treturn(\"---\")\n\t\t} else {\n\t\t\treturn mainMessage.toString() + secondMessage.toString();\n\t\t}\n\t}\n\n\t// Función que determina si se puede navegar a otra vista\n\tcanNavigate(){\n\t\treturn !(this.state.newObjectModalVisible || this.state.optionsModalVisible)\n\t}\n\n\t// Lleva a la vista en la que se muestra la gráfica del objeto de estudio\n\t// Se activa cuando se presiona de forma rápida sobre el nombre de uno de los elementos\n\tgoToObjectScreen(object) {\n\t\tif (this.canNavigate()){\n\t\t\tthis.setState({modalsEnabled: false});\n\t\t\tthis.props.navigation.navigate({ key: 'ObjectScreen', routeName: 'ObjectScreen', params: {...object, isCore: this.state.isCore}});\n\t\t}\n\t}\n\n\t// Hace que se vea la subventana con las opciones para un elemento\n\t// Se activa cuando se deja presionado largamente sobre el nombre del elemento.\n\tshowOptionsModal(object) {  \t\n\t\tthis.setState({\n\t\t\tselectedObject:      object,\n\t\t\toptionsModalVisible: true,\n\t\t})\n\t}\n\n\t// Para cerrar la subventana del modal anterior\n\tcloseOptionsModal = () => {\n\t\tthis.setState({optionsModalVisible: false});\n\t}\n\n\t// Para que se vea subventana con la doble opción para agregar un objeto, ya sea caégándolo desde archivo o creando uno completamente nuevo\n\tshowNewObjectModal(){\n\t\tthis.setState({newObjectModalVisible: true});\n\t}\n\n\t// Para cerrar la subventana del modal de nuevo afloramiento\n\tcloseNewObjectModal = () => {\n\t\tthis.setState({\n\t\t\tnewObjectModalVisible: false,\n\t\t\tloading:                false,\n\t\t});\n\t}\n\n\t// Muestra la localización del objeto en Google Maps\n\tshowLocationInGoogleMaps(object) {\n\t\tlet p = this.props;\n\n\t\tif ((object.latitude[0] != null) && (object.longitude[0] != null)){\n\t\t\tthis.props.navigation.navigate({ key: 'GoogleMaps', routeName: 'GoogleMaps', params: {...object, isCore: this.state.isCore}});\n\t\t\tthis.setState({optionsModalVisible: false});\n\t\t}\n\t\telse {\n\t\t\t// Alerta: \"No se puede abrir el mapa porque las coordenadas de este [núcleo/afloramiento] no son válidas\"\n\t\t\tAlert.alert(p.allMessages[10], p.allMessages[11](this.state.objectTypeMessage));\n\t\t}\n\t}\n\n\t/* Muestra la localización del afloramiento en Google Earth. (Esto implica salirnos de la aplicación)\n\t\n\t   Lo logré haciendo uso de este enlace: \n\t   https://stackoverflow.com/questions/56960146/creating-a-dynamic-google-earth-web-link\n\t */\n\tasync showLocationInGoogleEarth(object) {\n\t\tlet p = this.props;\n\n\t\tconst latitude  = object.latitude;\n\t\tconst longitude = object.longitude;\n\n\t\t// El 10000 lo obtuve probando. Es necesario para que la cámara esté por encima de lo que queremos ver\n\t\tconst altitudeMeters = this.state.isCore ? (object.GL[0][0] + 10000).toString() : (object.baseHeight[0][0] + 10000).toString(); \n\n\t\tvar url = \"https://earth.google.com/web/\";\n\n\t\tif ((latitude[0] != null) || (longitude[0] != null)){\n\t\t\turl += \"@\" + latitude[1] + \",\" + longitude[1] + \",\" + altitudeMeters + \"a\";\n\n\t\t\tconst canOpen = await Linking.canOpenURL(url);\n\t\t\tthis.setState({optionsModalVisible: false});\n\n\t\t\tif (canOpen){\n\t\t\t\tLinking.openURL(url);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Alerta: \"No se puede abrir este enlace\"\n\t\t\t\tAlert.alert(p.allMessages[10], p.allMessages[12]);\n\t\t\t}\t\n\t\t}\t\n\t\telse {\n\t\t\t// Alerta: \"No se puede abrir el mapa porque las coordenadas de este [núcleo/afloramiento] no son válidas\"\n\t\t\tAlert.alert(p.allMessages[10], p.allMessages[11](this.state.objectTypeMessage));\n\t\t}\n\t}\n\n\t// Se usa cuando vamos al formulario de afloramiento o núcleo para crear uno nuevo, no editar uno ya existente\n\tnewObject = () => {\n\t\tthis.closeNewObjectModal();\n\t\tthis.props.navigation.navigate({ key: 'ObjectForm', routeName: 'ObjectForm', params: {isCore: this.state.isCore}});\n\t}\n\n\t// Lleva a la misma vista que cuando se está creando un afloramiento o núcleo, sólo que ahora\n\t// se está pasando uno ya creado como parámetro, por lo que se cargarán sus datos previos.\n\teditObjectInfo(object) { \n\t\tthis.setState({optionsModalVisible: false}); \t\n\t\tthis.props.navigation.navigate({ key: 'ObjectForm', routeName: 'ObjectForm', params: {...object, isCore: this.state.isCore}});\n\t}\n\n\t// Función para salvar el objeto en un archivo, y las imágenes de sus estratos en carpetas separadas\n\tasync saveObject(object) {\n\t\tconst { status } = await ExpoMediaLibrary.getPermissionsAsync();\n\n\t\tif (status === \"granted\") {\n\t\t\tthis.closeOptionsModal();\n\t\t\tthis.setState({loading: true});\n\n\t\t\t// Carpeta en la que se salvará el archivo\n\t\t\tconst folder = \"Lithodex/\" + this.props.user_id + (this.state.isCore ? \"/Cores/\" : \"/Outcrops/\") + object.name + \"_\" + object._id;\n\n\t\t\t// Primero vamos a salvar las imágenes de los estratos, cada una en una carpeta distinta\n\t\t\tlet stratums = object.layerList;\n\t\t\tfor (i = 0; i < stratums.length; i++){\n\t\t\t\tlet stratum       = stratums[i]; // Estrato actual\n\t\t\t\tlet listOfImages  = stratum.image_data.listOfImages; // Lista de imágenes del estrato actual\n\t\t\t\tlet stratumFolder = folder+\"/\"+stratum.name+\"_\"+stratum.key; // Carpeta en la que salvaremos las imágenes de este estrato\n\t\t\t\tif (listOfImages != null){\n\t\t\t\t\tvar j = 0;\n\t\t\t\t\tfor (j = 0; j < listOfImages.length; j++){\n\t\t\t\t\t\tlet assetImage = await ExpoMediaLibrary.createAssetAsync(listOfImages[j].uri);\n\n\t\t\t\t\t\t// En el archivo de información no guardaremos la dirección de la imagen de la memoria caché, sino de la que vamos a crear ahora\n\t\t\t\t\t\t/* Según esta fuente, la ruta inicial funciona también en iOS: \n\t\t\t\t\t\t   https://stackoverflow.com/questions/60134920/how-to-store-a-uiimage-into-iphones-app-folder-with-xamarin-ios */\n\t\t\t\t\t\tlistOfImages[j].uri = \"/storage/emulated/0/\"+stratumFolder+\"/\"+assetImage.filename;\n\n\t\t\t\t\t\t/*El tercer argumento \"false\" sirve para que la imagen que acabamos de crear: \"assetImage\" no se copie\n\t\t\t\t\t\t  sino que se mueva a la nueva carpeta que deseamos. De esta forma, no tenemos dos apariciones de ella */\n\t\t\t\t\t\tawait ExpoMediaLibrary.createAlbumAsync(stratumFolder, assetImage, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// El nombre del archivo principal será \"information\"\n\t\t\tlet fileUri = ExpoFileSystem.documentDirectory + \"information\" +\".txt\"; \n\n\t\t\t// El archivo en donde está salvado el objeto, que es un JSON, lo convertimos a cadena de caracteres y lo salvamos en la dirección \"fileUri\"\n\t\t\tawait ExpoFileSystem.writeAsStringAsync(fileUri, JSON.stringify(object), { encoding: ExpoFileSystem.EncodingType.UTF8 });\n\n\t\t\t// El \"fileUri\" tenemos que convertirlo en un archivo\n\t\t\tconst assetFile = await ExpoMediaLibrary.createAssetAsync(fileUri);\n\n\t\t\t// Salvamos el archivo en la carpeta \"folder\"\n\t\t\tawait ExpoMediaLibrary.createAlbumAsync(folder, assetFile, false); \n\n\t\t\tthis.setState({loading: false});\n\n\t\t\t// Alerta: \"El [núcleo/afloramiento] fue salvado\"\n\t\t\tAlert.alert(this.props.allMessages[10], this.props.allMessages[13](this.state.objectTypeMessage));\t\n\t\t}\n\t\telse {\n\t\t\tthis.setState({loading: false});\n\t\t\t// Alerta: \"No tiene permiso para guardar este archivo\"\n\t\t\tAlert.alert(this.props.allMessages[10], this.props.allMessages[14]);\t\n\t\t}\n\t} \n\n\t// Se usa cuando queremos leer un afloramiento o núcleo que está almacenado en un archivo\n\treadObjectFromFile = async() => {\n\t\ttry{\n\t\t\tconst file = await ExpoDocumentPicker.getDocumentAsync();\n\t\t\tif (file.type === 'success'){\n\t\t\t\tthis.setState({loading: true});\n\t\t\t\tthis.closeNewObjectModal();\n\n\t\t\t\tconst fileContent = await ExpoFileSystem.readAsStringAsync(file.uri);\n\t\t\t\tconst object      = JSON.parse(fileContent);\n\n\t\t\t\t// Condiciones que tiene que cumplirse para que el archivo sea válido, independientemente de si se trata de un afloramiento o un núcleo\n\t\t\t\tconst commonConditions = object.hasOwnProperty('_id') && object.hasOwnProperty('name') && object.hasOwnProperty('locationInWords') &&\n\t\t\t\t\tobject.hasOwnProperty('longitude') && object.hasOwnProperty('latitude') && object.hasOwnProperty('scale') &&\n\t\t\t\t\tobject.hasOwnProperty('showInfo') && object.hasOwnProperty('showLithology') && object.hasOwnProperty('showStructure') &&\n\t\t\t\t\tobject.hasOwnProperty('showFossils') && object.hasOwnProperty('showPictures') && object.hasOwnProperty('showNotes') &&\n\t\t\t\t\tobject.hasOwnProperty('showCarbonatesRule') && object.hasOwnProperty('showNoCarbonatesRule') && object.hasOwnProperty('layerList') &&\n\t\t\t\t\tobject.hasOwnProperty('numberOfItems') && object.hasOwnProperty('date') && object.hasOwnProperty('unit') &&\n\t\t\t\t\tobject.hasOwnProperty('baseHeight');\n\n\t\t\t\t// Condiciones para que sea un afloramiento válido\n\t\t\t\tconst outcropConditions = commonConditions && (!object.hasOwnProperty('gammaRayValues'));\n\n\t\t\t\t// Condiciones para que sea un núcleo válido\n\t\t\t\tconst coreConditions = commonConditions && object.hasOwnProperty('showGammaRay') && object.hasOwnProperty('R') && object.hasOwnProperty('DF') &&\n\t\t\t\t\tobject.hasOwnProperty('GL') && object.hasOwnProperty('TVD') && object.hasOwnProperty('TVDFromGL') && \n\t\t\t\t\tobject.hasOwnProperty('endHeight') && object.hasOwnProperty('gammaRayValues');\n\n\t\t\t\tif ((this.state.isCore && coreConditions) || (!this.state.isCore && outcropConditions)){\n\n\t\t\t\t\t// Necesitamos recuperar las imágenes de cada estrato\n\t\t\t\t\tlet stratums        = object.layerList;\n\t\t\t\t\tvar completeSuccess = true; // Determina si todas las imágenes pudieron ser cargadas exitosamente\n\t\t\t\t\tfor (i = 0; i < stratums.length; i++){\n\t\t\t\t\t\tlet stratum        = stratums[i]; // Estrato actual\n\t\t\t\t\t\tlet listOfImages   = stratum.image_data.listOfImages; // Lista de imágenes del estrato actual\n\n\t\t\t\t\t\tif (listOfImages != null){\n\t\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\t\tvar j = 0;\n\t\t\t\t\t\t\t\tfor (j = 0; j < listOfImages.length; j++){\n\t\t\t\t\t\t\t\t\tlet assetImage      = await ExpoMediaLibrary.createAssetAsync(listOfImages[j].uri);\n\t\t\t\t\t\t\t\t\tlistOfImages[j].uri = assetImage.uri;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (error){\n\t\t\t\t\t\t\t\t// Si alguna de las imágenes de este estrato no se encontró, el estrato completo se queda sin imágenes\n\t\t\t\t\t\t\t\tstratum.image_data = {};\n\t\t\t\t\t\t\t\tcompleteSuccess    = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Cambiamos el _id por uno nuevo, para que nunca haya dos objetos de estudio con el mismo _id\n\t\t\t\t\tobject._id = generateObject_id();\n\t\t\t\t\t\n\t\t\t\t\t// Los argumentos son: 1) payload; 2) isCore; 3) isNew=true; 4) user_id, 5) object_id\n\t\t\t\t\tawait Database.saveObjectOfStudyInfo(object, this.state.isCore, true, this.props.user_id, object._id, this.props.localDB);  \n\t\t\t\t\tthis.loadObjects();\n\t\t\t\t\t\n\t\t\t\t\tif (completeSuccess){\n\t\t\t\t\t\t// Alerta: \"El archivo fue cargado exitosamente\"\n\t\t\t\t\t\tAlert.alert(this.props.allMessages[10], this.props.allMessages[15]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Alerta: \"El archivo fue cargado, pero no se pudieron encontrar todas las imágenes\"\n\t\t\t\t\t\tAlert.alert(this.props.allMessages[10], this.props.allMessages[16]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Alerta: \"El archivo no se corresponde con un [núcleo/afloramiento]\"\n\t\t\t\t\tAlert.alert(this.props.allMessages[10], this.props.allMessages[17](this.state.objectTypeMessage));\n\t\t\t\t\tthis.closeNewObjectModal();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (file.type === 'cancel'){\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Alerta: \"Ocurrió un error al tratar de leer el archivo\"\n\t\t\t\tAlert.alert(this.props.allMessages[10], this.props.allMessages[18]);\n\t\t\t\tthis.closeNewObjectModal();\n\t\t\t}\n\t\t} catch(error){\n\t\t\t// Expo no se construyó con iCloud, expo turtle fallback\n\t\t\tconsole.error(error.toString());\n\t\t\tthis.closeNewObjectModal();\n\t\t}\n\t}\n\n\t// Eliminar el objeto seleccionado. \n\tdeleteObject () {\n\t\tlet p = this.props;\t\n\n\t\t// Procedimiento auxiliar que se invoca cuando se confirma que se desea eliminar\n\t\tlet deleteObjectAux = () => {\n\t\t\tconst id_to_delete = this.state.selectedObject._id;\n\n\t\t\t// Los argumentos son: 1) object_id; 2) isCore; 3) user_id; 4) localDB\n\t\t\tDatabase.deleteObjectOfStudy(id_to_delete, this.state.isCore, this.props.user_id, this.props.localDB);\n\n\t\t\tconst list = this.state.renderList.filter(function(item){\n\t\t\t\treturn item.key.toString() !== id_to_delete.toString()\n\t\t\t})\n\t\t\tthis.setState({\n\t\t\t\toptionsModalVisible: false,\n\t\t\t\trenderList:  list,\n\t\t\t})\n\t\t}\n\n\t\t// Alerta: \"¿Seguro de que desea eliminar el [núcleo/afloramiento]?\"\n\t\tAlert.alert(p.allMessages[10], p.allMessages[19](this.state.objectTypeMessage),\n\t\t\t[\n\t\t\t\t// Mensaje: \"Sí\"\n\t\t\t\t{text: p.allMessages[20], onPress: () => deleteObjectAux()},\n\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t{text: p.allMessages[21]},\n\t\t\t] \n\t\t)\n\t}\n\n\t// Vista del modal de opciones, que se ve cuando el usuario deja presionado prolongadamente sobre un elemento\n\toptionsModalView(){\n\t\tlet p = this.props;\n\t\tlet s = this.state;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Modal  \n\t\t\t\t\tanimationType  = \"slide\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {this.state.optionsModalVisible}\n\t\t\t\t\tonRequestClose = {this.closeOptionsModal} // Esto permite cerrar el \"modal\" cuando se le da al botón de atrás\n\t\t\t\t> \n\t\t\t\t\t<View style = {{flex: 0.9, justifyContent: 'center', alignItems: 'center', flexDirection: 'column', marginTop: 30}}>\n\n\t\t\t\t\t\t<View style = {genericStyles.simple_center}> \n\t\t\t\t\t\t\t<ButtonWithIcon // Botón para modificar la información del objeto que se proporcionó cuando se creó\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ticon    = {{name: 'create'}}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[22](s.objectTypeMessage)} // Mensaje: \"Editar información de [núcleo/afloramiento]\"\n\t\t\t\t\t\t\t\tonPress = {() => {this.editObjectInfo(s.selectedObject)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View style = {genericStyles.simple_center}> \n\t\t\t\t\t\t\t<ButtonWithIcon /// Botón para mostrar la localización del objeto en Google Maps, según la latitud y longitud registradas\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ticon    = {{name: 'place'}}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[23]} // Mensaje: \"Ver localización en Google Maps\"\n\t\t\t\t\t\t\t\tonPress = {() => {this.showLocationInGoogleMaps(s.selectedObject)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View style = {genericStyles.simple_center}> \n\t\t\t\t\t\t\t<ButtonWithIcon /// Botón para mostrar la localización del objeto en Google Earth, según la latitud, longitud y altitud registradas\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ticon    = {<Icon  name=\"google-earth\"  size={20}  color=\"black\"/>}\n\t\t\t\t\t\t\t\ttitle   = {\"  \" + p.allMessages[24]} // Mensaje: \"Ver localización en Google Earth\"\n\t\t\t\t\t\t\t\tonPress = {() => {this.showLocationInGoogleEarth(s.selectedObject)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View style = {genericStyles.simple_center}> \n\t\t\t\t\t\t\t<ButtonWithIcon /// Botón para salvar el objeto en un archivo\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ticon    = {{name: 'description'}}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[25]} // Mensaje: \"Salvar en archivo\"\n\t\t\t\t\t\t\t\tonPress = {() => {this.saveObject(s.selectedObject)}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View style = {{...genericStyles.simple_center, flex: 1.2}}>\n\t\t\t\t\t\t\t<ButtonNoIcon /// Botón para eliminar el objeto\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[26](s.objectTypeMessage)} // Mensaje: \"Eliminar [núcleo/afloramiento]\"\n\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\tonPress = {() => this.deleteObject()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style = {{...genericStyles.simple_center, flex: 0.1, padding: 10}}>\n\t\t\t\t\t\t<ButtonNoIcon  // Botón para regresar a la lista de objetos, es decir, cerrar el este modal\n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\ttitle   = {p.allMessages[27]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\tonPress = {this.closeOptionsModal}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Vista para decidir si el nuevo objeto se agrega desde archivo o si se rellenan los datos de uno completamente nuevo\n\tnewObjectModalView(){\n\t\tlet p = this.props;\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Modal  \n\t\t\t\t\tanimationType     = \"none\"\n\t\t\t\t\ttransparent       = {false}\n\t\t\t\t\tvisible           = {this.state.newObjectModalVisible}\n\t\t\t\t\tonRequestClose    = {this.closeNewObjectModal} // Esto permite cerrar el \"modal\" cuando se le da al botón de atrás\n\t\t\t\t> \n\n\t\t\t\t\t<View style = {{flex: 0.7, justifyContent: 'center', alignItems: 'center', flexDirection: 'column', paddingTop: 100}}>\n\n\t\t\t\t\t\t<View style = {genericStyles.simple_center}> \n\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ticon    = {{name: 'create'}}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[28]} // Mensaje: \"Crear nuevo\"\n\t\t\t\t\t\t\t\tonPress = {this.newObject}\n\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t<View style = {genericStyles.simple_center}> \n\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\ticon    = {{name: 'description'}}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[29]} /// Mensaje: \"Agregar desde archivo\"\n\t\t\t\t\t\t\t\tonPress = {this.readObjectFromFile}\n\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style = {{flex: 0.3, justifyContent: 'center', alignItems: 'center', flexDirection: 'column', paddingBottom: 100}}>\n\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\ttitle   = {p.allMessages[27]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\tonPress = {this.closeNewObjectModal}\n\t\t\t\t\t\t/>\t\t\t\t\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Sirve para activar la función que lee desde la base de datos. Esto es útil cuando estamos emulando la aplicación y refrescamos la página\n\t// en caliente, ya que hacer eso volverá a colocar this.state.loading en su valor inicial (true) pero este componente ya estará montado, por lo que \n\t// no se activará el NavigationEvents onWillFocus, y en consecuencia la vista se quedará pegada en \"Cargando\"\n\tactivateLoadObjects(){\n\t\tthis.loadObjects();\n\t\treturn(<View/>)\n\t}\n\n\t// Lo que se le mostrará al usuario\n\trender (){\n\t\tlet p = this.props;\n\n\t\tif (this.state.loading){\n\t\t\treturn (\n\t\t\t\t<View style = {genericStyles.simple_center}>\n\t\t\t\t\t{this.activateLoadObjects()}\n\t\t\t\t\t<ActivityIndicator size = \"large\" color = \"#0000ff\" />\n\t\t\t\t\t{/*Mensaje: \"Cargando\"*/}\n\t\t\t\t\t<Text>{p.allMessages[30]}...</Text>\n\t\t\t\t</View>\n\t\t\t);\t\n\t\t} \n\n\t\t// Vista para cuando ya se cargaron los objetos desde la base de datos\n\t\treturn (\n\t\t\t<View style = {genericStyles.lightGray_background}>\n\t\t\t\t<NavigationEvents onWillFocus = {payload => this.loadObjects()}/>\n\n\t\t\t\t{/*Modales*/}\n\t\t\t\t{this.optionsModalView()}\n\t\t\t\t{this.newObjectModalView()}\n\n\t\t\t\t{/*Vista de los afloramientos o núcleos creados*/}\n\t\t\t\t<View style = {{flex: 0.9, flexDirection: 'row'}}>\n\t\t\t\t\t<ScrollView keyboardShouldPersistTaps = 'handled'>\n\t\t\t\t\t\t{this.state.renderList}\n\t\t\t\t\t</ScrollView>      \t\n\t\t\t\t</View>\n\n\t\t\t\t{/*Vista del botón para agregar un nuevo afloramiento o núcleo*/}\n\t\t\t\t<View style = {genericStyles.down_buttons}>\n\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\traised\n\t\t\t\t\t\ticon     = {{name: 'playlist-add'}}\n\t\t\t\t\t\ttitle    = {p.allMessages[31](this.state.objectTypeMessage)} // Mensaje: \"Agregar [núcleo/afloramiento]\"\n\t\t\t\t\t\tonPress  = {this.state.modalsEnabled ? () => {this.showNewObjectModal()} : () => {}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\n// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages: ObjectGallery_Texts[state.appPreferencesReducer.language], \n\t\tuser_id:     state.userReducer.user_id,\n\t\tlocalDB:     state.userReducer.localDB,\n\t\tremoteDB:    state.userReducer.remoteDB,\n\t}\n};\n\nexport default connect(mapStateToProps)(ObjectGallery);"]},"metadata":{},"sourceType":"module"}