{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\UserForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Button as ButtonWithIcon, CheckBox, Avatar } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker';\nimport { connect } from 'react-redux';\nimport { UserForm_Texts } from \"../languages/screens/UserForm\";\nimport { changeUser, changeUserProfileImage, changeSyncHandler } from \"../redux/actions/userActions\";\nimport * as Location from 'expo-location';\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport * as ExpoImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport PickerCheckBox from \"../modifiedLibraries/PickerCheckBox\";\nimport * as Log from \"../genericFunctions/logFunctions\";\nimport * as Database from \"../genericFunctions/databaseFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR } from \"../constants/genericStyles\";\nimport * as auxiliarFunctions from \"../genericFunctions/otherFunctions\";\nimport * as D from \"../constants/Dimensions\";\nimport { DEFAULT_USER_ICON } from \"../constants/genericImages\";\nimport { REMOTE_GENERIC_LITHODEX, DEFAULT_DOCUMENT_ID, USERNAMES_DOCUMENT_ID } from \"../constants/appConstants\";\nimport PouchDB from 'pouchdb-react-native';\nPouchDB.plugin(require('pouchdb-adapter-asyncstorage').default);\n\nvar UserForm = function (_Component) {\n  _inherits(UserForm, _Component);\n\n  function UserForm(props) {\n    var _this;\n\n    _classCallCheck(this, UserForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserForm).call(this, props));\n\n    _this.setModal_1_Visible = function (isVisible) {\n      var s = _this.state;\n      var p = _this.props;\n\n      if (isVisible) {\n        if (s.firstName != null && s.firstSurname != null) {\n          if (auxiliarFunctions.isValidEmail(s.email)) {\n            _this.setState({\n              modal_1_visible: true\n            });\n          } else {\n            Alert.alert(p.allMessages[1], p.allMessages[2]);\n          }\n        } else {\n          Alert.alert(p.allMessages[1], p.allMessages[3]);\n        }\n      } else {\n        _this.setState({\n          modal_1_visible: false\n        });\n      }\n    };\n\n    _this.setModal_2_Visible = function (isVisible) {\n      if (isVisible) {\n        if (_this.state.profileImage != null) {\n          Image.getSize(_this.state.profileImage, function (width, height) {\n            _this.setState({\n              modal_2_visible: true,\n              profileImage_width: width,\n              profileImage_height: height\n            });\n          });\n        }\n      } else {\n        _this.setState({\n          modal_2_visible: false,\n          profileImage_width: null,\n          profileImage_height: null\n        });\n      }\n    };\n\n    _this.setModal_3_Visible = function (isVisible) {\n      _this.setState({\n        modal_3_visible: isVisible\n      });\n    };\n\n    _this.setModal_4_Visible = function (isVisible) {\n      var s = _this.state;\n      var p = _this.props;\n\n      if (isVisible) {\n        if (!s.userNameIsNotRepeated || s.userName.length < 5) {\n          Alert.alert(p.allMessages[1], p.allMessages[7]);\n        } else if (s.new_or_current_passwordMatches) {\n          if (s.definitivePassword != null && s.passwordForVerificationMatching != null && s.definitivePassword.length > 5) {\n            _this.setState({\n              modal_4_visible: isVisible\n            });\n          } else if (s.definitivePassword == null && s.passwordForVerificationMatching == null) {\n            _this.setState({\n              modal_4_visible: isVisible\n            });\n          } else {\n            Alert.alert(p.allMessages[1], p.allMessages[8]);\n          }\n        } else {\n          Alert.alert(p.allMessages[1], p.allMessages[8]);\n        }\n      } else {\n        _this.setState({\n          modal_4_visible: isVisible\n        });\n      }\n    };\n\n    _this.onChangePlainText = function (variableName, text) {\n      if (text == \" \" || text == \"\") {\n        text = null;\n      }\n\n      var object = {};\n      object[variableName] = text;\n\n      _this.setState(object);\n    };\n\n    _this.onChangeUserName = function _callee2(text) {\n      var s, found;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              s = _this.state;\n\n              if (text == \" \") {\n                text = null;\n              }\n\n              if (!(text != null)) {\n                _context2.next = 12;\n                break;\n              }\n\n              if (!(text.length < 5)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _this.setState({\n                userName: text,\n                userNameIsNotRepeated: false\n              });\n\n              _context2.next = 12;\n              break;\n\n            case 7:\n              found = false;\n              console.log(s.remoteGenericLithodex);\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(s.remoteGenericLithoDex.get(USERNAMES_DOCUMENT_ID).then(function _callee(document) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log(\"document =\", document);\n                        found = document.userNames.hasOwnProperty(text);\n\n                      case 2:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                });\n              }).catch(function (error) {\n                console.error(error);\n                console.log(\"error = \", error);\n              }));\n\n            case 11:\n              if (!s.isNew && text == s.previousUserName || !found) {\n                _this.setState({\n                  userName: text,\n                  userNameIsNotRepeated: true\n                });\n              } else {\n                _this.setState({\n                  userName: text,\n                  userNameIsNotRepeated: false\n                });\n              }\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.onChangeDefinitivePassword = function (text) {\n      if (text == _this.state.passwordForVerificationMatching) {\n        _this.setState({\n          definitivePassword: text,\n          new_or_current_passwordMatches: true\n        });\n      } else {\n        _this.setState({\n          definitivePassword: text,\n          new_or_current_passwordMatches: false\n        });\n      }\n    };\n\n    _this.onChangePasswordForVerificationMatching = function (text) {\n      if (text == _this.state.definitivePassword) {\n        _this.setState({\n          passwordForVerificationMatching: text,\n          new_or_current_passwordMatches: true\n        });\n      } else {\n        _this.setState({\n          passwordForVerificationMatching: text,\n          new_or_current_passwordMatches: false\n        });\n      }\n    };\n\n    _this.onChangePreviousPasswordConfirmation = function (text) {\n      if (text == _this.state.previousPassword) {\n        _this.setState({\n          previousPasswordConfirmation: text,\n          previousPasswordMatches: true\n        });\n      } else {\n        _this.setState({\n          previousPasswordConfirmation: text,\n          previousPasswordMatches: false\n        });\n      }\n    };\n\n    _this.selectPictureFromGallery = function _callee3() {\n      var _await$Permissions$as, status, _await$ExpoImagePicke, cancelled, uri;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _await$Permissions$as = _context3.sent;\n              status = _await$Permissions$as.status;\n\n              if (!(status !== 'granted')) {\n                _context3.next = 8;\n                break;\n              }\n\n              Alert.alert(_this.props.allMessages[1], _this.props.allMessages[9]);\n              _context3.next = 14;\n              break;\n\n            case 8:\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(ExpoImagePicker.launchImageLibraryAsync({\n                allowsEditing: true\n              }));\n\n            case 10:\n              _await$ExpoImagePicke = _context3.sent;\n              cancelled = _await$ExpoImagePicke.cancelled;\n              uri = _await$ExpoImagePicke.uri;\n\n              if (!cancelled) {\n                _this.setState({\n                  profileImage: uri\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.takePicture = function _callee4() {\n      var _await$Permissions$as2, status, _await$ExpoImagePicke2, cancelled, uri;\n\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as2 = _context4.sent;\n              status = _await$Permissions$as2.status;\n\n              if (!(status !== 'granted')) {\n                _context4.next = 8;\n                break;\n              }\n\n              Alert.alert(_this.props.allMessages[1], _this.props.allMessages[10]);\n              _context4.next = 14;\n              break;\n\n            case 8:\n              _context4.next = 10;\n              return _regeneratorRuntime.awrap(ExpoImagePicker.launchCameraAsync({\n                allowsEditing: true\n              }));\n\n            case 10:\n              _await$ExpoImagePicke2 = _context4.sent;\n              cancelled = _await$ExpoImagePicke2.cancelled;\n              uri = _await$ExpoImagePicke2.uri;\n\n              if (!cancelled || uri) {\n                _this.setState({\n                  profileImage: uri\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.acceptSettings = function () {\n      var s = _this.state;\n      var p = _this.props;\n      var correct = true;\n      var passwordToSave = s.definitivePassword;\n\n      if (s.isNew) {\n        if (!s.userNameIsNotRepeated || s.userName.length < 5) {\n          Alert.alert(p.allMessages[1], p.allMessages[7]);\n          correct = false;\n        } else if (s.definitivePassword == null || s.definitivePassword.length < 6 || !s.new_or_current_passwordMatches) {\n          Alert.alert(p.allMessages[1], p.allMessages[8]);\n          correct = false;\n        }\n      } else {\n        if (!s.previousPasswordMatches) {\n          Alert.alert(p.allMessages[1], p.allMessages[8]);\n          correct = false;\n        } else if (passwordToSave == null) {\n          passwordToSave = s.previousPassword;\n        }\n      }\n\n      if (correct && _this.state.saveUserEnabled) {\n        _this.setState({\n          saveUserEnabled: false\n        }, function _callee5() {\n          var _this$state, _id, userName, firstName, secondName, firstSurname, secondSurname, email, birthDate, country, city, profession, officePhoneNumber, mobilePhoneNumber, postalCode, profileImage, payload, localUserDB;\n\n          return _regeneratorRuntime.async(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _this$state = _this.state, _id = _this$state._id, userName = _this$state.userName, firstName = _this$state.firstName, secondName = _this$state.secondName, firstSurname = _this$state.firstSurname, secondSurname = _this$state.secondSurname, email = _this$state.email, birthDate = _this$state.birthDate, country = _this$state.country, city = _this$state.city, profession = _this$state.profession, officePhoneNumber = _this$state.officePhoneNumber, mobilePhoneNumber = _this$state.mobilePhoneNumber, postalCode = _this$state.postalCode, profileImage = _this$state.profileImage;\n                  payload = {\n                    _id: _id,\n                    userName: userName,\n                    password: passwordToSave,\n                    information: {\n                      firstName: firstName,\n                      secondName: secondName,\n                      firstSurname: firstSurname,\n                      secondSurname: secondSurname,\n                      email: email,\n                      birthDate: birthDate,\n                      country: country,\n                      city: city,\n                      profession: profession,\n                      officePhoneNumber: officePhoneNumber,\n                      mobilePhoneNumber: mobilePhoneNumber,\n                      postalCode: postalCode,\n                      profileImage: profileImage\n                    }\n                  };\n                  localUserDB = new PouchDB(_id);\n                  _context5.next = 5;\n                  return _regeneratorRuntime.awrap(Database.saveUserInfo(payload, localUserDB, s.isNew, s.acquireInformation));\n\n                case 5:\n                  p.dispatchNewProfileImage(profileImage);\n\n                  if (!s.isNew) {\n                    _context5.next = 11;\n                    break;\n                  }\n\n                  _context5.next = 9;\n                  return _regeneratorRuntime.awrap(p.dispatchNewUser(_id));\n\n                case 9:\n                  _context5.next = 11;\n                  return _regeneratorRuntime.awrap(p.dispatchSyncHandler(PouchDB.sync(_this.props.localDB, _this.props.remoteDB, {\n                    live: true,\n                    retry: true\n                  }).on('change', function (change) {\n                    console.log(\"La conexión cambió\");\n                  }).on('paused', function (info) {\n                    console.log(\"La replicación está en pausa\");\n                  }).on('active', function (info) {\n                    Database.exportLogEntries(_id, false);\n                  }).on('error', function (err) {\n                    console.log(\"Ocurrió un error que no debería haber pasado\");\n                  })));\n\n                case 11:\n                  console.log(\"La base remota es: \", _this.props.remoteDB);\n                  p.navigation.goBack();\n\n                case 13:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          });\n        });\n      }\n    };\n\n    _this.refuseSettings = function () {\n      var p = _this.props;\n      Alert.alert(p.allMessages[1], p.allMessages[11]);\n      p.navigation.goBack();\n    };\n\n    _this.acceptSettings = _this.acceptSettings.bind(_assertThisInitialized(_this));\n    _this.keyboardDidShow = _this.keyboardDidShow.bind(_assertThisInitialized(_this));\n    _this.keyboardDidHide = _this.keyboardDidHide.bind(_assertThisInitialized(_this));\n    var commonParameters = {\n      remoteGenericLithoDex: new PouchDB(REMOTE_GENERIC_LITHODEX),\n      modal_1_visible: false,\n      modal_2_visible: false,\n      modal_3_visible: false,\n      profileImage_width: null,\n      profileImage_height: null,\n      saveUserEnabled: true,\n      keyboardAvailable: false,\n      acquireInformation: false\n    };\n\n    var info = _this.props.navigation.getParam('information');\n\n    if (info != null) {\n      var firstName = info.firstName,\n          secondName = info.secondName,\n          firstSurname = info.firstSurname,\n          secondSurname = info.secondSurname,\n          email = info.email,\n          birthDate = info.birthDate,\n          country = info.country,\n          city = info.city,\n          profession = info.profession,\n          officePhoneNumber = info.officePhoneNumber,\n          mobilePhoneNumber = info.mobilePhoneNumber,\n          postalCode = info.postalCode,\n          profileImage = info.profileImage;\n      _this.state = _objectSpread({}, commonParameters, {\n        isNew: false,\n        _id: _this.props.navigation.getParam('_id'),\n        firstName: firstName,\n        secondName: secondName,\n        firstSurname: firstSurname,\n        secondSurname: secondSurname,\n        email: email,\n        birthDate: birthDate,\n        country: country,\n        city: city,\n        profession: profession,\n        officePhoneNumber: officePhoneNumber,\n        mobilePhoneNumber: mobilePhoneNumber,\n        postalCode: postalCode,\n        profileImage: profileImage,\n        previousUserName: _this.props.navigation.getParam('userName'),\n        userName: _this.props.navigation.getParam('userName'),\n        userNameIsNotRepeated: true,\n        previousPassword: _this.props.navigation.getParam('password'),\n        definitivePassword: null,\n        passwordForVerificationMatching: null,\n        previousPasswordConfirmation: null,\n        new_or_current_passwordMatches: true,\n        previousPasswordMatches: false\n      });\n    } else {\n      var _firstName, _secondName, _firstSurname, _secondSurname, _email, _birthDate, _country, _city, _profession, _officePhoneNumber, _mobilePhoneNumber, _postalCode, _profileImage;\n\n      _firstName = _secondName = _firstSurname = _secondSurname = _email = _birthDate = _country = _city = _profession = _officePhoneNumber = _mobilePhoneNumber = _postalCode = _profileImage = null;\n      _this.state = _objectSpread({}, commonParameters, {\n        isNew: true,\n        _id: auxiliarFunctions.generateUser_id(),\n        firstName: _firstName,\n        secondName: _secondName,\n        firstSurname: _firstSurname,\n        secondSurname: _secondSurname,\n        email: _email,\n        birthDate: _birthDate,\n        country: _country,\n        city: _city,\n        profession: _profession,\n        officePhoneNumber: _officePhoneNumber,\n        mobilePhoneNumber: _mobilePhoneNumber,\n        postalCode: _postalCode,\n        profileImage: _profileImage,\n        userName: null,\n        userNameIsNotRepeated: true,\n        definitivePassword: null,\n        passwordForVerificationMatching: null,\n        new_or_current_passwordMatches: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(UserForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n\n      if (this.props.navigation.getParam('firstName')) {\n        Log.log_action(25, this.props.user_id);\n      } else {\n        Log.log_action(24, this.props.user_id);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"keyboardDidShow\",\n    value: function keyboardDidShow() {\n      this.setState({\n        keyboardAvailable: true\n      });\n    }\n  }, {\n    key: \"keyboardDidHide\",\n    value: function keyboardDidHide() {\n      this.setState({\n        keyboardAvailable: false\n      });\n    }\n  }, {\n    key: \"deleteImage\",\n    value: function deleteImage() {\n      var _this2 = this;\n\n      if (this.state.profileImage != null) {\n        var p = this.props;\n        Alert.alert(p.allMessages[1], p.allMessages[4], [{\n          text: p.allMessages[5],\n          onPress: function onPress() {\n            return _this2.setState({\n              profileImage: null\n            });\n          }\n        }, {\n          text: p.allMessages[6]\n        }]);\n      }\n    }\n  }, {\n    key: \"plainTextField\",\n    value: function plainTextField(mainMessage, variable, variableName, cannotBeEmpty) {\n      var _this3 = this;\n\n      var autoCapitalize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'sentences';\n      var secureTextEntry = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n      var functionToApply = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n      return React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        }\n      }, cannotBeEmpty && React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        }\n      }, \"*\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        }\n      }, \" \", mainMessage, \": \"))), !cannotBeEmpty && React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        }\n      }, mainMessage, \": \")), React.createElement(TextInput, {\n        defaultValue: variable,\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        style: genericStyles.textInput,\n        placeholder: this.props.allMessages[12],\n        onChangeText: function onChangeText(text) {\n          return functionToApply != null ? functionToApply(text) : _this3.onChangePlainText(variableName, text);\n        },\n        secureTextEntry: secureTextEntry,\n        autoCapitalize: autoCapitalize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        }\n      }, this.modal_1_View(), this.modal_2_View(), this.modal_3_View(), this.modal_4_View(), React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        }\n      }, this.plainTextField(p.allMessages[13], s.firstName, 'firstName', true), this.plainTextField(p.allMessages[14], s.firstSurname, 'firstSurname', true), React.createElement(View, {\n        style: genericStyles.instructionsAboveTextInputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          paddingBottom: 3,\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        }\n      }, \"*\", React.createElement(Text, {\n        style: {\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        }\n      }, \" \", p.allMessages[15], \": \")), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, React.createElement(TextInput, {\n        defaultValue: s.email,\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        style: genericStyles.textInput,\n        placeholder: p.allMessages[12],\n        onChangeText: function onChangeText(text) {\n          return _this4.onChangePlainText('email', text);\n        },\n        autoCapitalize: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      }))), this.plainTextField(p.allMessages[16], s.secondName, 'secondName', false), this.plainTextField(p.allMessages[17], s.secondSurname, 'secondSurname', false), React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        }\n      }, p.allMessages[18], \": \"), React.createElement(DatePicker, {\n        style: {\n          flex: 1.05,\n          height: 35,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderWidth: 1,\n          borderColor: 'black'\n        },\n        date: s.birthDate,\n        mode: \"date\",\n        placeholder: p.allMessages[19],\n        format: \"DD-MM-YYYY\",\n        confirmBtnText: p.allMessages[20],\n        cancelBtnText: p.allMessages[21],\n        showIcon: false,\n        customStyles: {\n          dateInput: _objectSpread({}, genericStyles.textInput, {\n            padding: 0,\n            borderColor: 'transparent'\n          })\n        },\n        onDateChange: function onDateChange(date) {\n          _this4.setState({\n            birthDate: date\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        }\n      })), this.plainTextField(p.allMessages[22], s.country, 'country', false), this.plainTextField(p.allMessages[23], s.city, 'city', false), this.plainTextField(p.allMessages[24], s.profession, 'profession', false), this.plainTextField(p.allMessages[25], s.officePhoneNumber, 'officePhoneNumber', false), this.plainTextField(p.allMessages[26], s.mobilePhoneNumber, 'mobilePhoneNumber', false), this.plainTextField(p.allMessages[27], s.postalCode, 'postalCode', false))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[21],\n        color: DARK_GRAY_COLOR,\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.refuseSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[28],\n        icon: {\n          name: 'arrow-forward'\n        },\n        onPress: function onPress() {\n          return _this4.setModal_1_Visible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        }\n      }))));\n    }\n  }, {\n    key: \"modal_1_View\",\n    value: function modal_1_View() {\n      var _this5 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_1_visible,\n        onRequestClose: function onRequestClose() {\n          return _this5.setModal_1_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        }\n      }, React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        }\n      }, p.allMessages[29]), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 20,\n          paddingBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        }\n      }, s.profileImage != null && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this5.setModal_2_Visible(true);\n        },\n        style: localStyles.touchableHighlight_NoBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        }\n      }, React.createElement(Image, {\n        resizeMethod: \"auto\",\n        source: {\n          uri: s.profileImage\n        },\n        style: localStyles.touchableHighlight_WithBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        }\n      }))), s.profileImage == null && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        }\n      }, React.createElement(Avatar, {\n        source: DEFAULT_USER_ICON,\n        containerStyle: localStyles.touchableHighlight_WithBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        }\n      }))), React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[30],\n        onPress: this.selectPictureFromGallery,\n        icon: {\n          name: 'add-to-photos'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        }\n      })), React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[31],\n        onPress: this.takePicture,\n        icon: {\n          name: 'add-a-photo'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        }\n      })), React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[32],\n        color: \"red\",\n        onPress: function onPress() {\n          return _this5.deleteImage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[33],\n        color: DARK_GRAY_COLOR,\n        onPress: function onPress() {\n          return _this5.setModal_1_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[28],\n        icon: {\n          name: 'arrow-forward'\n        },\n        onPress: function onPress() {\n          return _this5.setModal_3_Visible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        }\n      }))))));\n    }\n  }, {\n    key: \"modal_2_View\",\n    value: function modal_2_View() {\n      var _this6 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_2_visible,\n        onRequestClose: function onRequestClose() {\n          return _this6.setModal_2_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        }\n      }, React.createElement(View, {\n        style: localStyles.imageView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        }\n      }, React.createElement(ImageZoom, {\n        cropWidth: 0.9 * D.GLOBAL_SCREEN_WIDTH,\n        cropHeight: 0.8 * D.GLOBAL_SCREEN_HEIGHT,\n        imageWidth: s.profileImage_width,\n        imageHeight: s.profileImage_height,\n        enableCenterFocus: false,\n        minScale: 1 / 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: s.profileImage\n        },\n        style: {\n          width: s.profileImage_width,\n          height: s.profileImage_height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[33],\n        onPress: function onPress() {\n          return _this6.setModal_2_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        }\n      })))));\n    }\n  }, {\n    key: \"modal_3_View\",\n    value: function modal_3_View() {\n      var _this7 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_3_visible,\n        onRequestClose: function onRequestClose() {\n          return _this7.setModal_3_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        }\n      }, s.isNew && React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        }\n      }, p.allMessages[34]), !s.isNew && React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        }\n      }, p.allMessages[35]), React.createElement(View, {\n        style: {\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        }\n      }), this.plainTextField(p.allMessages[36], s.userName, 'userName', true, \"none\", false, this.onChangeUserName), s.userNameIsNotRepeated && s.userName != null && s.userName.length > 4 && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingTop: 10,\n          textAlign: 'center',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        }\n      }, p.allMessages[37])), (!s.userNameIsNotRepeated || s.userName != null && s.userName.length < 5) && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingTop: 10,\n          textAlign: 'center',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        }\n      }, p.allMessages[7])), React.createElement(View, {\n        style: {\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        }\n      }), this.plainTextField(p.allMessages[s.isNew ? 38 : 39], s.definitivePassword, 'definitivePassword', s.isNew ? true : false, \"none\", true, this.onChangeDefinitivePassword), React.createElement(View, {\n        style: {\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        }\n      }), this.plainTextField(p.allMessages[s.isNew ? 40 : 41], s.passwordForVerificationMatching, 'passwordForVerificationMatching', s.isNew ? true : false, \"none\", true, this.onChangePasswordForVerificationMatching), s.new_or_current_passwordMatches && s.passwordForVerificationMatching != null && s.passwordForVerificationMatching.length > 5 && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingTop: 10,\n          textAlign: 'center',\n          color: 'green'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        }\n      }, p.allMessages[42])), s.definitivePassword != null && s.definitivePassword.length < 6 && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingTop: 10,\n          textAlign: 'center',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852\n        }\n      }, p.allMessages[43])), s.definitivePassword != null && s.definitivePassword.length > 5 && !s.new_or_current_passwordMatches && s.passwordForVerificationMatching != null && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingTop: 10,\n          textAlign: 'center',\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        }\n      }, p.allMessages[44])), s.isNew && React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          paddingBottom: 30,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        }\n      }, React.createElement(CheckBox, {\n        title: p.allMessages[45],\n        checked: s.acquireInformation,\n        onPress: function onPress() {\n          _this7.setState({\n            acquireInformation: !s.acquireInformation\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[33],\n        color: DARK_GRAY_COLOR,\n        onPress: function onPress() {\n          return _this7.setModal_3_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        }\n      })), s.isNew && React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[46],\n        icon: {\n          name: 'check'\n        },\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        }\n      })), !s.isNew && React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[28],\n        icon: {\n          name: 'arrow-forward'\n        },\n        onPress: function onPress() {\n          return _this7.setModal_4_Visible(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        }\n      }))))));\n    }\n  }, {\n    key: \"modal_4_View\",\n    value: function modal_4_View() {\n      var _this8 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: !s.isNew && s.modal_4_visible,\n        onRequestClose: function onRequestClose() {\n          return _this8.setModal_4_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940\n        }\n      }, s.definitivePassword != null && React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        }\n      }, p.allMessages[47]), s.definitivePassword == null && React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        }\n      }, p.allMessages[48]), React.createElement(View, {\n        style: {\n          height: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949\n        }\n      }), React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950\n        }\n      }, React.createElement(TextInput, {\n        defaultValue: s.previousPasswordConfirmation,\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        placeholder: p.allMessages[12],\n        style: genericStyles.textInput,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this8.onChangePreviousPasswordConfirmation(text);\n        },\n        autoCapitalize: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[33],\n        color: DARK_GRAY_COLOR,\n        onPress: function onPress() {\n          return _this8.setModal_4_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[46],\n        icon: {\n          name: 'check'\n        },\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        }\n      }))))));\n    }\n  }]);\n\n  return UserForm;\n}(Component);\n\nUserForm.navigationOptions = function (_ref) {\n  var screenProps = _ref.screenProps;\n  return {\n    title: UserForm_Texts[screenProps.language][0],\n    headerTintColor: screenProps.headerTintColor,\n    headerStyle: _objectSpread({\n      backgroundColor: screenProps.headerBackgroundColor\n    }, genericStyles.navigationHeader)\n  };\n};\n\nvar localStyles = StyleSheet.create({\n  imageView: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingTop: 20,\n    paddingBottom: 15,\n    paddingRight: 15,\n    paddingLeft: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonView: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 15\n  },\n  touchableHighlight_WithBorder: {\n    height: 0.7 * D.GLOBAL_SCREEN_WIDTH,\n    width: 0.7 * D.GLOBAL_SCREEN_WIDTH,\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  touchableHighlight_NoBorder: {\n    height: 0.7 * D.GLOBAL_SCREEN_WIDTH,\n    width: 0.7 * D.GLOBAL_SCREEN_WIDTH\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    language: state.appPreferencesReducer.language,\n    allMessages: UserForm_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB,\n    remoteDB: state.userReducer.remoteDB,\n    privileges: state.userReducer.privileges\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchNewUser: function dispatchNewUser(user_id) {\n      return dispatch(changeUser(user_id));\n    },\n    dispatchSyncHandler: function dispatchSyncHandler(syncFunction) {\n      return dispatch(changeSyncHandler(syncFunction));\n    },\n    dispatchNewProfileImage: function dispatchNewProfileImage(image) {\n      return dispatch(changeUserProfileImage(image));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/screens/UserForm.js"],"names":["React","Component","Button","ButtonWithIcon","CheckBox","Avatar","DatePicker","connect","UserForm_Texts","changeUser","changeUserProfileImage","changeSyncHandler","Location","ImageZoom","ExpoImagePicker","Permissions","PickerCheckBox","Log","Database","genericStyles","DARK_GRAY_COLOR","auxiliarFunctions","D","DEFAULT_USER_ICON","REMOTE_GENERIC_LITHODEX","DEFAULT_DOCUMENT_ID","USERNAMES_DOCUMENT_ID","PouchDB","plugin","require","default","UserForm","props","setModal_1_Visible","isVisible","s","state","p","firstName","firstSurname","isValidEmail","email","setState","modal_1_visible","Alert","alert","allMessages","setModal_2_Visible","profileImage","Image","getSize","width","height","modal_2_visible","profileImage_width","profileImage_height","setModal_3_Visible","modal_3_visible","setModal_4_Visible","userNameIsNotRepeated","userName","length","new_or_current_passwordMatches","definitivePassword","passwordForVerificationMatching","modal_4_visible","onChangePlainText","variableName","text","object","onChangeUserName","found","console","log","remoteGenericLithodex","remoteGenericLithoDex","get","then","document","userNames","hasOwnProperty","catch","error","isNew","previousUserName","onChangeDefinitivePassword","onChangePasswordForVerificationMatching","onChangePreviousPasswordConfirmation","previousPassword","previousPasswordConfirmation","previousPasswordMatches","selectPictureFromGallery","askAsync","CAMERA_ROLL","status","launchImageLibraryAsync","allowsEditing","cancelled","uri","takePicture","CAMERA","launchCameraAsync","acceptSettings","correct","passwordToSave","saveUserEnabled","_id","secondName","secondSurname","birthDate","country","city","profession","officePhoneNumber","mobilePhoneNumber","postalCode","payload","password","information","localUserDB","saveUserInfo","acquireInformation","dispatchNewProfileImage","dispatchNewUser","dispatchSyncHandler","sync","localDB","remoteDB","live","retry","on","change","info","exportLogEntries","err","navigation","goBack","refuseSettings","bind","keyboardDidShow","keyboardDidHide","commonParameters","keyboardAvailable","getParam","generateUser_id","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","log_action","user_id","remove","onPress","mainMessage","variable","cannotBeEmpty","autoCapitalize","secureTextEntry","functionToApply","row_instructions_textInput","flex","flexDirection","justifyContent","alignItems","color","fontWeight","textInput","lightGray_background","modal_1_View","modal_2_View","modal_3_View","modal_4_View","white_background_with_ScrollView","plainTextField","instructionsAboveTextInputs","paddingBottom","borderWidth","borderColor","dateInput","padding","date","down_buttons","paddingRight","dismiss","paddingLeft","name","subtitle","paddingTop","localStyles","touchableHighlight_NoBorder","touchableHighlight_WithBorder","buttonView","deleteImage","imageView","GLOBAL_SCREEN_WIDTH","GLOBAL_SCREEN_HEIGHT","textAlign","navigationOptions","screenProps","title","language","headerTintColor","headerStyle","backgroundColor","headerBackgroundColor","navigationHeader","StyleSheet","create","mapStateToProps","appPreferencesReducer","userReducer","privileges","mapDispatchToProps","dispatch","syncFunction","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View, StyleSheet, TextInput, ScrollView, Alert, \n\t\tDimensions,Picker, KeyboardAvoidingView, Button as ButtonNoIcon,\n\t    Image, Modal, TouchableHighlight, ActivityIndicator, Keyboard} from 'react-native'\n\nimport {Button as ButtonWithIcon, CheckBox, Avatar} from 'react-native-elements' // Usado para los botones con iconos\nimport DatePicker from 'react-native-datepicker' // Usado para la fecha\n\nimport { connect } from 'react-redux'\nimport { UserForm_Texts } from '../languages/screens/UserForm'\nimport { changeUser, changeUserProfileImage, changeSyncHandler } from '../redux/actions/userActions'\n\nimport * as Location from 'expo-location'\n\nimport ImageZoom from 'react-native-image-pan-zoom'\nimport * as ExpoImagePicker from 'expo-image-picker'\nimport * as Permissions     from 'expo-permissions'\n\nimport PickerCheckBox from '../modifiedLibraries/PickerCheckBox'\n\nimport * as Log from '../genericFunctions/logFunctions'\nimport * as Database from '../genericFunctions/databaseFunctions'\nimport { genericStyles, DARK_GRAY_COLOR } from '../constants/genericStyles'\nimport * as auxiliarFunctions from '../genericFunctions/otherFunctions'\n\nimport * as D from '../constants/Dimensions'\nimport {DEFAULT_USER_ICON} from '../constants/genericImages'\nimport { REMOTE_GENERIC_LITHODEX, DEFAULT_DOCUMENT_ID, USERNAMES_DOCUMENT_ID } from '../constants/appConstants'\n\nimport PouchDB from 'pouchdb-react-native'\nPouchDB.plugin(require('pouchdb-adapter-asyncstorage').default);\n\n\nclass UserForm extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.acceptSettings  = this.acceptSettings.bind(this)\n\t\tthis.keyboardDidShow = this.keyboardDidShow.bind(this)\n\t\tthis.keyboardDidHide = this.keyboardDidHide.bind(this)\n\n\t\t// Propiedades que se iniicializan igual independientemente de si se está modificando un usuario ya existente o se está registrando uno nuevo\n\t\tlet commonParameters = {\n\t\t\tremoteGenericLithoDex: new PouchDB(REMOTE_GENERIC_LITHODEX), // Base de datos genérica de Lithodex\n\t\t\tmodal_1_visible: false, // Aquí el usuario tiene la capacidad de colocar una imagen de perfil, o cambiar la ya existente (sólo se permite una a la vez)\n\t\t\tmodal_2_visible: false, // Aquí se permite visualizar la imagen de perfil, agrandándola o haciéndola más pequeña\n\t\t\tmodal_3_visible: false, // Aquí se decide el nombre de usuario y contraseña\n\n\t\t\tprofileImage_width:  null, // Anchura original de la imagen de perfil\n\t\t\tprofileImage_height: null, // Altura original de la imagen de perfil\n\n\t\t\t// Determina si se puede guardar el usuario, lo cual impide que se active la función correspondiente dos veces al darle \"Aceptar\" dos veces seguidas\n\t\t\tsaveUserEnabled: true,\n\n\t\t\t// Determina si el teclado está visible. Esto lo pusimos porque no queremos que los botones de \"Aceptar\" y \"Cancelar\" de la parte inferior cierren la vista cuando el teclado está visible\n\t\t\tkeyboardAvailable: false,\n\n\t\t\t// Determina si hay que adquirir la información del usuario no autenticado\n\t\t\tacquireInformation: false, \n\t\t}\n\n\t\tlet info = this.props.navigation.getParam('information');\n\n\t\t// Caso en que se quiere modificar la información de un usuario ya existente\n\t\tif (info != null){\n\n\t\t\tlet {firstName, secondName, firstSurname, secondSurname, email, birthDate, country, \n\t\t\t\tcity, profession, officePhoneNumber, mobilePhoneNumber, postalCode, profileImage} = info;\n\n\t\t\tthis.state = {\n\t\t\t\t...commonParameters,\n\t\t\t\tisNew: false,\n\n\t\t\t\t// Recuperamos el identificador de usuario, el cual es el nombre de su base de datos\n\t\t\t\t_id: this.props.navigation.getParam('_id'),\n\n\t\t\t\t// Información que recuperamos de \"info\"\n\t\t\t\tfirstName, secondName, firstSurname, secondSurname, email, birthDate, country, city, profession, officePhoneNumber, mobilePhoneNumber, postalCode, profileImage,\n\t\t\t\t\n\t\t\t\t// Nombre de usuario\n\t\t\t\tpreviousUserName:      this.props.navigation.getParam('userName'), // Esto es de sólo lectura, puesto que almacena el nombre de usuario que había sido añadido previamente\n\t\t\t\tuserName:              this.props.navigation.getParam('userName'), // Nombre de usuario ingresado actualmente\n\t\t\t\tuserNameIsNotRepeated: true, // Verifica si el nombre de usuario ingresado no existe en la base de datos\n\n\t\t\t\t// Distintas variables para manejar la contraseña\n\t\t\t\tpreviousPassword:   this.props.navigation.getParam('password'), // Contraseña que se había creado anteriormente. (Esto es de sólo lectura)\n\t\t\t\tdefinitivePassword: null, // En principio, ésta es la contraseña que se salvará en la base de datos, pero si se mantiene como null, la que se salvará es \"previousPassword\"\n\t\t\t\tpasswordForVerificationMatching: null, // Aquí se guarda la contraseña que es ingresada por segunda vez, que confirma la otra para que no haya riesgo de que se haya ingresado mal\n\t\t\t\tpreviousPasswordConfirmation:    null, // Contraseña que ingresa el usuario en el último modal, que debe coinicidir con \"previousPassword\"\n\n\t\t\t\tnew_or_current_passwordMatches:  true,  // Variable que establece si \"definitivePassword\" coincide con \"passwordForVerificationMatching\"\n\t\t\t\tpreviousPasswordMatches:         false, // Variable que establece si \"previousPasswordConfirmation\" coincide con \"previousPassword\"\n\t\t\t}\n\t\t} \n\t\telse { // Caso en que se quiere registrar un usuario nuevo\n\n\t\t\tlet firstName, secondName, firstSurname, secondSurname, email, birthDate, country, city, profession, officePhoneNumber, mobilePhoneNumber, postalCode, profileImage;\n\t\t\tfirstName = secondName = firstSurname = secondSurname = email = birthDate = country = city = profession = officePhoneNumber = mobilePhoneNumber = postalCode = profileImage = null;\n\t\t\t\n\t\t\tthis.state = {\n\t\t\t\t...commonParameters,\n\t\t\t\tisNew: true,\n\n\t\t\t\t// Identificador de usuario. Éste será el nombre de su base de datos\n\t\t\t\t_id: auxiliarFunctions.generateUser_id(),\n\n\t\t\t\tfirstName, secondName, firstSurname, secondSurname, email, birthDate, country, city, profession, \n\t\t\t\tofficePhoneNumber, mobilePhoneNumber, postalCode, profileImage,\n\n\t\t\t\t// Nombre de usuario\n\t\t\t\tuserName: null,\n\t\t\t\tuserNameIsNotRepeated: true, // Verifica si el nombre de usuario ingresado no existe en la base de datos\n\n\t\t\t\t// Distintas variables para manejar la contraseña\n\t\t\t\tdefinitivePassword: null,              // Contraseña que se salvará en la base de datos\n\t\t\t\tpasswordForVerificationMatching: null, // Aquí se guarda la contraseña que es ingresada por segunda vez, que confirma la otra para que no haya riesgo de que se haya ingresado mal\n\n\t\t\t\tnew_or_current_passwordMatches: true, // Variable que establece si \"definitivePassword\" coincide con \"passwordForVerificationMatching\"\n\t\t\t}\n\t\t}\n\t}\n\n\t// Formato de la cabecera de la vista\n\tstatic navigationOptions = ({ screenProps }) => ({\n\t\ttitle:           UserForm_Texts[screenProps.language][0],\n\t\theaderTintColor: screenProps.headerTintColor,\n\t\theaderStyle: {\n\t\t\tbackgroundColor: screenProps.headerBackgroundColor,\n\t\t\t...genericStyles.navigationHeader,\n\t\t}\n\t});\n\n\tcomponentDidMount(){\n\t\t// Aquí inicializamos los escuchas que determinan si el teclado se está mostrando o no\n\t\tthis.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n\t\tthis.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n\n\t\t// Para registrar en el \"log\" que se entró en el formulario de usuario\n\t\tif (this.props.navigation.getParam('firstName')){\n\t\t\tLog.log_action(25, this.props.user_id);\n\t\t}\n\t\telse {\n\t\t\tLog.log_action(24, this.props.user_id);\n\t\t}\n\t}\n\n\t// Quitamos los escuchas cuando salimos de esta ventana\n\tcomponentWillUnmount() {\n\t\tthis.keyboardDidShowListener.remove();\n\t\tthis.keyboardDidHideListener.remove();\n\t}\n\n\t// Caso en que el teclado se está mostrando\n\tkeyboardDidShow() {\n\t\tthis.setState({keyboardAvailable: true});\n\t}\n\n\t// Caso en que el teclado se ocultó\n\tkeyboardDidHide() {\n\t\tthis.setState({keyboardAvailable: false});\n\t}\n\n\t// Para hacer visible el modal en el que se visualiza la imagen de perfil en un cuadro, junto con los botones de agregar nueva o eliminar la ya existente\n\tsetModal_1_Visible = (isVisible) => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tif (isVisible){\n\t\t\t// Sólo permitimos avanzar a la siguiente vista si se llenaron los campos obligatorios, y si el correo electrónico es válido\n\t\t\tif ((s.firstName != null) && (s.firstSurname != null)){\n\n\t\t\t\t// Aquí verificamos si el correo electrónico es válido\n\t\t\t\tif (auxiliarFunctions.isValidEmail(s.email)){\n\t\t\t\t\tthis.setState({modal_1_visible: true});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Alerta: \"El correo electrónico no es válido\"\n\t\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[2]);\n\t\t\t\t}\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Alerta: \"El primer nombre y el primer apellido no pueden ser nulos\"\n\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[3])\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.setState({modal_1_visible: false});\n\t\t}\n\t}\n\n\t// Eliminar la imagen de perfil\n\tdeleteImage(){\n\t\tif (this.state.profileImage != null){\n\t\t\tlet p = this.props;\n\n\t\t\t// Alerta: \"¿Seguro de que desea eliminar la imagen?\"\n\t\t\tAlert.alert(p.allMessages[1], p.allMessages[4],\n\t\t\t\t[\n\t\t\t\t\t// Mensaje: \"Sí\"\n\t\t\t\t\t{text: p.allMessages[5], onPress: () => this.setState({profileImage: null})},\n\t\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t\t{text: p.allMessages[6]},\n\t\t\t\t] \n\t\t\t)\t\n\t\t}\n\t}\n\n\t// Para hacer visible el modal en el que se visualiza la imagen de perfil con sus dimensiones originales, y se permite hacerle zoom\n\tsetModal_2_Visible = (isVisible) => {\n\t\tif (isVisible){\n\t\t\tif (this.state.profileImage != null){\n\t\t\t\tImage.getSize(this.state.profileImage, (width, height) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tmodal_2_visible:     true,\n\t\t\t\t\t\tprofileImage_width:  width, \n\t\t\t\t\t\tprofileImage_height: height,\t\n\t\t\t\t\t})\n\t\t\t\t})\t\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tmodal_2_visible:     false,\n\t\t\t\tprofileImage_width:  null, \n\t\t\t\tprofileImage_height: null,\t\n\t\t\t})\n\t\t}\n\t}\n\n\t// Para hacer visible el modal en el que se ingresa el nombre de usuario y la contraseña\n\tsetModal_3_Visible = (isVisible) => {\n\t\tthis.setState({modal_3_visible: isVisible});\n\t}\n\n\t// Para hacer visible el modal en el que se ingresa la contraseña anterior, para confirmar cambios realizados en el perfil\n\t// Nótese que esto sólo se activa cuando estamos editando un perfil creado previamente\n\tsetModal_4_Visible = (isVisible) => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tif (isVisible) {\n\t\t\tif ((!s.userNameIsNotRepeated) || (s.userName.length < 5)){\n\t\t\t\t// Alerta: \"No puede usar este nombre de usuario\"\n\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[7]);\n\t\t\t} \n\t\t\telse if (s.new_or_current_passwordMatches){\n\t\t\t\tif ((s.definitivePassword != null) && (s.passwordForVerificationMatching != null) && (s.definitivePassword.length > 5)){\n\t\t\t\t\tthis.setState({modal_4_visible: isVisible});\n\t\t\t\t}\n\t\t\t\telse if ((s.definitivePassword == null) && (s.passwordForVerificationMatching == null)){\n\t\t\t\t\tthis.setState({modal_4_visible: isVisible});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Alerta: \"Contraseña incorrecta\"\n\t\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[8]);\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Alerta: \"Contraseña incorrecta\"\n\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[8]);\n\t\t\t}\t\n\t\t} else {\n\t\t\tthis.setState({modal_4_visible: isVisible});\n\t\t}\n\t}\n\n\t// ------------------------------------ Procedimientos relacionados con lo que se coloca en la información del usuario -------------------------------------------------------\n\n\t// Función genérica para todos los casos en los que el dato ingresado es un texto plano\n\tonChangePlainText = (variableName, text) => {\n\t\tif ((text == \" \") || (text == \"\")){\n\t\t\ttext = null;\n\t\t}\n\t\tlet object = {};\n\t\tobject[variableName] = text;\n\t\tthis.setState(object);\t\n\t}\n\n\t// Procedimiento para cambiar el nombre de usuario de la persona\n\tonChangeUserName = async(text) => {\n\t\tlet s = this.state;\n\t\tif (text == \" \"){\n\t\t\ttext = null;\n\t\t}\n\n\t\tif (text != null){\n\t\t\tif (text.length < 5){\n\t\t\t\tthis.setState({userName: text, userNameIsNotRepeated: false});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar found = false; // Determina si la cadena \"text\" ya es usada como nombre de usuario por parte de otro usuario. Lo inicializamos aquí para que el \"found\" que está dentro\n\t\t\t\t                   // de la función que viene a continuación se refiera a este mismo \"found\" y por ende tenga alcance externo.\n\n\t\t\t\t//var allDocs = await s.remoteGenericLithoDex.allDocs();\n\t\t\t\t//console.log(\"allDocs = \", allDocs);\n\t\t\t\tconsole.log(s.remoteGenericLithodex);\n\t\t\t\tawait s.remoteGenericLithoDex.get(USERNAMES_DOCUMENT_ID)\n\t\t\t\t\t.then(async function(document){  \n\t\t\t\t\t\tconsole.log(\"document =\", document);\n\t\t\t\t\t\tfound = document.userNames.hasOwnProperty(text);\n\t\t\t\t\t}).catch(function (error){\n\t\t\t\t\t\t//console.error(error.toString())\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\tconsole.log(\"error = \", error);\n\t\t\t\t\t})\n\n\t\t\t\t// El nombre de usuario es válido si se está editando un usuario ya existente y el nombre de usuario no ha cambiado, \n\t\t\t\t// o si no existe en la lista global de nombres de usuario \n\t\t\t\tif ( (!s.isNew && (text == s.previousUserName)) || (!found) ){\n\t\t\t\t\tthis.setState({userName: text, userNameIsNotRepeated: true});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.setState({userName: text, userNameIsNotRepeated: false});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Procedimiento para cambiar la contraseña definitiva, es decir, la que en principio se salvará en la base de datos\n\tonChangeDefinitivePassword = (text) => {\t\n\t\tif (text == this.state.passwordForVerificationMatching){\n\t\t\tthis.setState({definitivePassword: text, new_or_current_passwordMatches: true});\n\t\t}\t\t\n\t\telse {\n\t\t\tthis.setState({definitivePassword: text, new_or_current_passwordMatches: false});\n\t\t}\n\t}\n\n\t// Procedimiento para cambiar la segunda contraseña que ingresa el usuario, que es la que debe coincidir con la primera\n\tonChangePasswordForVerificationMatching = (text) => {\t\n\t\tif (text == this.state.definitivePassword){\n\t\t\tthis.setState({passwordForVerificationMatching: text, new_or_current_passwordMatches: true});\n\t\t}\t\t\n\t\telse {\n\t\t\tthis.setState({passwordForVerificationMatching: text, new_or_current_passwordMatches: false});\n\t\t}\n\t}\n\n\t/* Este procedimiento sólo se activa cuando un usuario está editando un perfil creado previamente. Aquí debe ingresar la contraseña anterior\n\t   (puesto que puede haberse cambiado la contraseña), para verificar que es la misma persona la que está cambiando los datos */\n\tonChangePreviousPasswordConfirmation = (text) => {\t\n\t\tif (text == this.state.previousPassword){\n\t\t\tthis.setState({previousPasswordConfirmation: text, previousPasswordMatches: true});\n\t\t}\n\t\telse {\n\t\t\tthis.setState({previousPasswordConfirmation: text, previousPasswordMatches: false});\n\t\t}\n\t}\n\n\t// ------------------------------------ Procedimientos relacionados con la imagen de perfil -------------------------------------------------------\n\n\t// Procedimiento para acceder a la galería de imágenes del dispositivo móvil y poder escoger de allí una imagen\n\tselectPictureFromGallery = async () => {\n\t\tconst {status} = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n\t\tif (status !== 'granted'){\n\t\t\t// Alerta: \"No tiene permiso para acceder a la galería\"\n\t\t\tAlert.alert(this.props.allMessages[1], this.props.allMessages[9]);\n\t\t}\n\t\telse {\n\t\t\tconst { cancelled, uri } = await ExpoImagePicker.launchImageLibraryAsync({allowsEditing: true});\n\n\t\t\tif(!cancelled) { // Caso en que el usuario sí seleccionó una imagen en la galería\n\t\t\t\tthis.setState({profileImage: uri});\n\t\t\t} \n\t\t}\n\t}\n\n\t// Procedimiento para poder tomar una nueva foto con la cámara del teléfono\n\ttakePicture = async () => {\n\t\tconst {status} = await Permissions.askAsync(Permissions.CAMERA);\n\n\t\tif (status !== 'granted'){\n\t\t\t// Alerta: \"No tiene permiso para acceder a la cámara\"\n\t\t\tAlert.alert(this.props.allMessages[1], this.props.allMessages[10]);\n\t\t}\n\t\telse {\n\t\t\tconst { cancelled, uri } = await ExpoImagePicker.launchCameraAsync({allowsEditing: true});\n\n\t\t\tif(!cancelled || uri) { // Caso en que el usuario sí capturó una fotografía\n\t\t\t\tthis.setState({profileImage: uri});\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------------------------------------ Procedimientos para salvar o rechazar los cambios -------------------------------------------------------\n\n\t// Procedimiento para hacer los cambios correspondientes en la base de datos (creación o actualízación)\n\t// Aquí pasamos a la siguiente pantalla y se le pasa el payload como props de Navigation\n\tacceptSettings = () => {  \t\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tvar correct = true; // Determina si se pueden salvar los datos\n\t\tvar passwordToSave = s.definitivePassword;\n\n\t\t// Caso en que estamos creando un usuario nuevo\n\t\tif (s.isNew) {\n\t\t\tif ((!s.userNameIsNotRepeated) || (s.userName.length < 5)){\n\t\t\t\t// Alerta: \"No puede usar este nombre de usuario\"\n\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[7]);\n\t\t\t\tcorrect = false;\n\t\t\t} \n\t\t\telse if ((s.definitivePassword == null) || (s.definitivePassword.length < 6) || (!s.new_or_current_passwordMatches)){\n\t\t\t\t// Alerta: \"Contraseña incorrecta\"\n\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[8]);\n\t\t\t\tcorrect = false;\n\t\t\t}\t\n\t\t} else {\n\t\t\tif (!s.previousPasswordMatches){\n\t\t\t\t// Alerta: \"Contraseña incorrecta\"\n\t\t\t\tAlert.alert(p.allMessages[1], p.allMessages[8]);\n\t\t\t\tcorrect = false;\n\t\t\t}\n\t\t\telse if (passwordToSave == null){\n\t\t\t\tpasswordToSave = s.previousPassword;\n\t\t\t}\n\t\t}\n\n\t\t// Caso en que se pueden salvar los datos\n\t\tif (correct && this.state.saveUserEnabled){\n\t\t\tthis.setState({saveUserEnabled: false},\n\t\t\t\tasync() => {\n\t\t\t\t\tlet {_id, userName, firstName, secondName, firstSurname, secondSurname, email, birthDate, country,\n\t\t\t\t\t\tcity, profession, officePhoneNumber, mobilePhoneNumber, postalCode, profileImage} = this.state;\n\t\t\t\t\tconst payload = {\n\t\t\t\t\t\t_id, userName,\n\t\t\t\t\t\tpassword: passwordToSave,\n\n\t\t\t\t\t\t// Estas otras propiedades se agrupan en una más general llamada \"information\"\n\t\t\t\t\t\tinformation: {\n\t\t\t\t\t\t\tfirstName, secondName, firstSurname, secondSurname, email, birthDate, country, \n\t\t\t\t\t\t\tcity, profession, officePhoneNumber, mobilePhoneNumber, postalCode, profileImage,\t\t\t\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\t// Creamos la base de datos local del usuario\n\t\t\t\t\tconst localUserDB = new PouchDB(_id);\n\n\t\t\t\t\tawait Database.saveUserInfo(payload, localUserDB, s.isNew, s.acquireInformation); \n\t\t\t\t\tp.dispatchNewProfileImage(profileImage);\n\n\t\t\t\t\tif (s.isNew){\n\t\t\t\t\t\tawait p.dispatchNewUser(_id);\n\t\t\t\t\t\tawait p.dispatchSyncHandler(\n\t\t\t\t\t\t\tPouchDB.sync(this.props.localDB,this.props.remoteDB, {\n\t\t\t\t\t\t\t\tlive: true,\n\t\t\t\t\t\t\t\tretry: true\n\t\t\t\t\t\t\t}).on('change', function (change) {\n\t\t\t\t\t\t\t\tconsole.log(\"La conexión cambió\");\n\t\t\t\t\t\t\t}).on('paused', function (info) {\n\t\t\t\t\t\t\t\tconsole.log(\"La replicación está en pausa\");\n\t\t\t\t\t\t\t}).on('active', function (info) {\n\t\t\t\t\t\t\t\t// Cada vez que la replicación esté activa nuevamente tenemos que transferir las entradas necesarias del log\n\t\t\t\t\t\t\t\tDatabase.exportLogEntries(_id, false);\n\t\t\t\t\t\t\t}).on('error', function (err) {\n\t\t\t\t\t\t\t\tconsole.log(\"Ocurrió un error que no debería haber pasado\");\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"La base remota es: \", this.props.remoteDB);\n\t\t\t\t\tp.navigation.goBack();\t\t\t\t\n\t\t\t\t}\n\t\t\t)\n\t\t} \n\t}\n\n\t// Procedimiento para el caso en que el usuario le da al botón de Volver\n\trefuseSettings = () => {\n\t\tlet p = this.props;\n\t\t// Alerta: \"No se salvaron los cambios\"\n\t\tAlert.alert(p.allMessages[1], p.allMessages[11]);\n\t\tp.navigation.goBack();\n\t};\n\n\t// ---------------------------------------------------------- Vistas --------------------------------------------------------------\n\n\t// Formato de los campos que consisten en texto plano, en los que el título del campo está al lado del recuadro donde el usuario escribe\n\tplainTextField(mainMessage, variable, variableName, cannotBeEmpty, autoCapitalize='sentences', secureTextEntry=false, functionToApply=null){\n\t\treturn(\n\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t{cannotBeEmpty && // Caso en que el campo es obligatorio\n\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t<Text style = {{flex: 1, color: 'red', fontWeight: 'bold'}}>*\n\t\t\t\t\t\t\t<Text style = {{color: 'black'}}> {mainMessage}: </Text> \n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\t\t\t\t{!cannotBeEmpty && /// Caso en que el campo NO es obligatorio\n\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t<Text style = {{flex:1}}>{mainMessage}: </Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\n\t\t\t\t{/*Nótese que en el caso en que hay que aplicar una función recibida como parámetro no indicamos el nombre de la variable, \n\t\t\t\t   porque en todos los casos en que ello ocurre en esta ventana dicha función sólo trabaja para una variable específica */}\n\t\t\t\t<TextInput \n\t\t\t\t\tdefaultValue      = {variable}\n\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\ttextAlign         = {'center'} \n\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\tplaceholder       = {this.props.allMessages[12]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\tonChangeText      = {text => ((functionToApply!=null) ? functionToApply(text) : this.onChangePlainText(variableName,text))}\n\t\t\t\t\tsecureTextEntry   = {secureTextEntry}\n\t\t\t\t\tautoCapitalize    = {autoCapitalize}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Función principal de renderización\n\trender() {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn (\n\t\t\t<View style = {genericStyles.lightGray_background}>\n\t\t\t\t{/*Modales*/}\n\t\t\t\t{this.modal_1_View()}\n\t\t\t\t{this.modal_2_View()}\n\t\t\t\t{this.modal_3_View()}\n\t\t\t\t{this.modal_4_View()}\n\n\n\t\t\t\t{/*Primer sector que incluye todos los campos a rellenar*/}\n\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t{/*Mensaje: \"Primer nombre\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[13], s.firstName, 'firstName', true)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Primer apellido\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[14], s.firstSurname, 'firstSurname', true)}\n\n\t\t\t\t\t\t{/*Modificar el correo electrónico de la persona*/}\n\t\t\t\t\t\t<View style = {genericStyles.instructionsAboveTextInputs}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Correo electrónico\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex: 1, paddingBottom: 3, color: 'red'}}>*\n\t\t\t\t\t\t\t\t<Text style = {{color: 'black', fontWeight: 'bold'}}> {p.allMessages[15]}: </Text>\n\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t<View style = {{flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\t\tdefaultValue      = {s.email}\n\t\t\t\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\t\t\t\ttextAlign         = {'center'} \n\t\t\t\t\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\t\t\t\t\tplaceholder       = {p.allMessages[12]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\t\t\t\t\tonChangeText      = {text => this.onChangePlainText('email',text)}\n\t\t\t\t\t\t\t\t\tautoCapitalize    = \"none\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*Mensaje: \"Segundo nombre\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[16], s.secondName, 'secondName', false)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Segundo apellido\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[17], s.secondSurname, 'secondSurname', false)}\n\n\t\t\t\t\t\t{/*Nodificar la fecha de nacimiento*/}\n\t\t\t\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Fecha de nacimiento: \"*/}\n\t\t\t\t\t\t\t<Text style = {{flex:1}}>{p.allMessages[18]}: </Text>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tstyle          = {{flex: 1.05, height: 35, alignItems: 'center', justifyContent: 'center', borderWidth: 1, borderColor: 'black'}}\n\t\t\t\t\t\t\t\tdate           = {s.birthDate}\n\t\t\t\t\t\t\t\tmode           = \"date\"\n\t\t\t\t\t\t\t\tplaceholder    = {p.allMessages[19]} /// Mensaje: \"Toque para escoger..\"\n\t\t\t\t\t\t\t\tformat         = \"DD-MM-YYYY\"\n\t\t\t\t\t\t\t\tconfirmBtnText = {p.allMessages[20]} // Mensaje: \"Ok\"\n\t\t\t\t\t\t\t\tcancelBtnText  = {p.allMessages[21]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\t\tshowIcon       = {false}\n\t\t\t\t\t\t\t\tcustomStyles   = {{\n\t\t\t\t\t\t\t\t\t///dateIcon: {postion: 'absolute'}\n\t\t\t\t\t\t\t\t\tdateInput: {...genericStyles.textInput, padding: 0, borderColor: 'transparent'},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDateChange = {(date) => {this.setState({birthDate: date})}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Mensaje: \"País\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[22], s.country, 'country', false)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Ciudad\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[23], s.city, 'city', false)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Profesión\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[24], s.profession, 'profession', false)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Teléfono de oficina\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[25], s.officePhoneNumber, 'officePhoneNumber', false)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Teléfono móvil\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[26], s.mobilePhoneNumber, 'mobilePhoneNumber', false)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Código postal\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[27], s.postalCode, 'postalCode', false)}\n\n\t\t\t\t\t</ScrollView> \n\t\t\t\t</View>\n\n\t\t\t\t{/*Vista de los botones para darle Cancelar o Siguiente*/}\n\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\ttitle   = {p.allMessages[21]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss : this.refuseSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\ttitle   = {p.allMessages[28]} /// Mensaje: \"Siguiente\"\n\t\t\t\t\t\t\ticon    = {{name: 'arrow-forward'}}\n\t\t\t\t\t\t\tonPress = {() => this.setModal_1_Visible(true)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\n\t// Ventana en donde se puede cambiar la imagen del perfil, permitiendo seleccionarla desde galería o tomando una nueva foto\n\tmodal_1_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_1_visible}\n\t\t\t\t\tonRequestClose = {() => this.setModal_1_Visible(false)}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Aquí se visualiza tanto la imagen como los botones para agregar una nueva desde galería, tomar una con la cámara o eliminar la ya existente*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Imagen de perfil\"*/}\n\t\t\t\t\t\t\t\t<Text style = {genericStyles.subtitle}>{p.allMessages[29]}</Text>\n\n\t\t\t\t\t\t\t\t<View style = {{justifyContent: 'center', alignItems: 'center', paddingTop: 20, paddingBottom: 20}}>\n\t\t\t\t\t\t\t\t\t{/*//Aquí mostramos la imagen del perfil*/}\n\t\t\t\t\t\t\t\t\t{(s.profileImage != null) &&\n\t\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t\t<TouchableHighlight \n\t\t\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.setModal_2_Visible(true)}} \n\t\t\t\t\t\t\t\t\t\t\t\tstyle   = {localStyles.touchableHighlight_NoBorder}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\t\t\t\tresizeMethod = \"auto\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsource       = {{ uri: s.profileImage }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle        = {localStyles.touchableHighlight_WithBorder}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t{(s.profileImage == null) &&\n\t\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\tsource         = {DEFAULT_USER_ICON}\n\t\t\t\t\t\t\t\t\t\t\t\tcontainerStyle = {localStyles.touchableHighlight_WithBorder}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}> \n\t\t\t\t\t\t\t\t\t<ButtonWithIcon  // Botón para añadir una imagen desde archivo\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[30]} // Mensaje: \"Elegir desde galería\"\n\t\t\t\t\t\t\t\t\t\tonPress = {this.selectPictureFromGallery}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'add-to-photos'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}> \n\t\t\t\t\t\t\t\t\t<ButtonWithIcon  ///Botón para capturar una fotografía\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[31]} // Mensaje: \"Tomar nueva foto\"\n\t\t\t\t\t\t\t\t\t\tonPress = {this.takePicture}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'add-a-photo'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}> \n\t\t\t\t\t\t\t\t\t<ButtonNoIcon  ///Botón para eliminar la fotografía\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[32]} // Mensaje: \"Eliminar imagen\"\n\t\t\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\t\t\tonPress = {() => this.deleteImage()}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/* Botón para regresar a la vista anterior */}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[33]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.setModal_1_Visible(false)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[28]} // Mensaje: \"Siguiente\"\n\t\t\t\t\t\t\t\t\ticon    = {{name: 'arrow-forward'}}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.setModal_3_Visible(true)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Ventana para visualizar la imagen del perfil, permitiendo hacerle zoom\n\tmodal_2_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_2_visible}\n\t\t\t\t\tonRequestClose = {() => this.setModal_2_Visible(false)}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Aquí se visualiza la imagen menos el botón para volver*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\n\t\t\t\t\t\t\t{/*Imagen mostrada*/}\n\t\t\t\t\t\t\t<View style = {localStyles.imageView}>\n\t\t\t\t\t\t\t\t<ImageZoom \n\t\t\t\t\t\t\t\t\tcropWidth   = {0.9 * D.GLOBAL_SCREEN_WIDTH}  // Ancho del área operativa\n\t\t\t\t\t\t\t\t\tcropHeight  = {0.8 * D.GLOBAL_SCREEN_HEIGHT} // Alto del área operativa\n\t\t\t\t\t\t\t\t\timageWidth  = {s.profileImage_width}  // Ancho de la imagen a mostrar\n\t\t\t\t\t\t\t\t\timageHeight = {s.profileImage_height} // Alto de la imagen a mostrar\n\t\t\t\t\t\t\t\t\tenableCenterFocus = {false} // Si se deja esto en \"true\", siempre se enfoca el centro de la imagen\n\t\t\t\t\t\t\t\t\tminScale    = {1/100}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\tsource = {{uri: s.profileImage}}\n\t\t\t\t\t\t\t\t\t\tstyle  = {{width: s.profileImage_width, height: s.profileImage_height}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ImageZoom> \n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*// Botón para regresar a la vista anterior */}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[33]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\tonPress = {() => this.setModal_2_Visible(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Ventana en la que el usuario puede establecer el nombre de usuario y su contraseña\n\tmodal_3_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_3_visible}\n\t\t\t\t\tonRequestClose = {() => this.setModal_3_Visible(false)}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*En esta parte el usuario ingresa el nombre de usuario y la contraseña*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Introduzca nombre de usuario y contraseña\"*/}\n\t\t\t\t\t\t\t\t{(s.isNew) && <Text style = {genericStyles.subtitle}>{p.allMessages[34]}</Text>}\n\n\t\t\t\t\t\t\t\t{/*//Mensaje: \"Modifique su nombre de usuario o contraseña (opcional)\"*/}\n\t\t\t\t\t\t\t\t{(!s.isNew) && <Text style = {genericStyles.subtitle}>{p.allMessages[35]}</Text>}\n\n\t\t\t\t\t\t\t\t{/*//Mensaje: \"Nombre de usuario (mín 5)\"*/}\n\t\t\t\t\t\t\t\t<View style = {{height: 20}}/>\n\t\t\t\t\t\t\t\t{this.plainTextField(p.allMessages[36], s.userName, 'userName', true, \"none\", false, this.onChangeUserName)}\n\n\t\t\t\t\t\t\t\t{/*Caso en que el nombre de usuario ingresado es correcto o disponible*/}\n\t\t\t\t\t\t\t\t{ (s.userNameIsNotRepeated) && (s.userName != null) && (s.userName.length > 4) &&\n\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t{/*Mensaje: \"Nombre de usuario disponible\"*/}\n\t\t\t\t\t\t\t\t\t\t<Text style = {{flex: 1, flexDirection: 'row', paddingTop: 10, textAlign: 'center', color: 'green'}}>\n\t\t\t\t\t\t\t\t\t\t\t{p.allMessages[37]}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{/*Caso en que el nombre de usuario ingresado no es correcto*/}\n\t\t\t\t\t\t\t\t{ ((!s.userNameIsNotRepeated) || ((s.userName != null) && (s.userName.length < 5))) &&\n\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t{/*Mensaje: \"No puede usar este nombre de usuario\"*/}\n\t\t\t\t\t\t\t\t\t\t<Text style = {{flex: 1, flexDirection: 'row', paddingTop: 10, textAlign: 'center', color: 'red'}}>\n\t\t\t\t\t\t\t\t\t\t\t{p.allMessages[7]}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{/*Ingresar la contraseña -> primera vez*/}\n\t\t\t\t\t\t\t\t{/*Mensajes: \"Contraseña\\n(mín 6)\"  \"Nueva contraseña\\n(opcional) (mín 6)\"*/}\n\t\t\t\t\t\t\t\t<View style = {{height: 20}}/>\n\t\t\t\t\t\t\t\t{this.plainTextField(p.allMessages[(s.isNew ? 38 : 39)], s.definitivePassword, 'definitivePassword', (s.isNew ? true : false), \"none\", true, this.onChangeDefinitivePassword)}\n\n\n\t\t\t\t\t\t\t\t{/*Ingresar la contraseña -> primera vez*/}\n\t\t\t\t\t\t\t\t{/*Mensajes: \"Confirme contraseña\"  \"Confirme nueva contraseña\"*/}\n\t\t\t\t\t\t\t\t<View style = {{height: 20}}/>\n\t\t\t\t\t\t\t\t{this.plainTextField(p.allMessages[(s.isNew ? 40 : 41)], s.passwordForVerificationMatching, 'passwordForVerificationMatching', (s.isNew ? true : false), \"none\", true, this.onChangePasswordForVerificationMatching)}\n\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Contraseña correcta\"*/}\n\t\t\t\t\t\t\t\t{ (s.new_or_current_passwordMatches) && (s.passwordForVerificationMatching != null) && (s.passwordForVerificationMatching.length > 5) &&\n\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t<Text style = {{flex: 1, flexDirection: 'row', paddingTop: 10, textAlign: 'center', color: 'green'}}>\n\t\t\t\t\t\t\t\t\t\t\t{p.allMessages[42]}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Contraseña demasiado corta\"*/}\n\t\t\t\t\t\t\t\t{ (s.definitivePassword != null) && (s.definitivePassword.length < 6) &&\n\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t<Text style = {{flex: 1, flexDirection: 'row', paddingTop: 10, textAlign: 'center', color: 'red'}}>\n\t\t\t\t\t\t\t\t\t\t\t{p.allMessages[43]}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\t\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Las contraseñas no coinciden\"*/}\n\t\t\t\t\t\t\t\t{ (s.definitivePassword != null) && (s.definitivePassword.length > 5) && (!s.new_or_current_passwordMatches) && (s.passwordForVerificationMatching != null) &&\n\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t<Text style = {{flex: 1, flexDirection: 'row', paddingTop: 10, textAlign: 'center', color: 'red'}}>\n\t\t\t\t\t\t\t\t\t\t\t{p.allMessages[44]}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\t\n\n\t\t\t\t\t\t\t\t{/* Si se está creando un usuario, está este cuadro que permite determinar si se desea adquirir la información que se había guardado como usuario no autenticado*/}\n\t\t\t\t\t\t\t\t{ (s.isNew) &&\n\t\t\t\t\t\t\t\t\t<View style = {{paddingTop: 50, paddingBottom: 30, flexDirection: 'row', alignItems: 'center', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t\t<CheckBox \n\t\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[45]} // Mensaje: \"Adquirir información del usuario no autenticado\"\n\t\t\t\t\t\t\t\t\t\t\tchecked = {s.acquireInformation}\n\t\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.setState({acquireInformation: !s.acquireInformation})}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</View>\t\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Vista de los botones para darle Volver, y Aceptar o Siguiente*/}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[33]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.setModal_3_Visible(false)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t{/*Si se está creando un usuario, aquí ya aparece el botón de aceptar*/}\n\t\t\t\t\t\t\t{ (s.isNew) &&\n\t\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[46]} // Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{/*//En cambio, si se está editando un usuario ya creado, todavía falta una vista más*/}\n\t\t\t\t\t\t\t{ (!s.isNew) &&\n\t\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[28]} // Mensaje: \"Siguiente\"\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'arrow-forward'}}\n\t\t\t\t\t\t\t\t\t\tonPress = {() => this.setModal_4_Visible(true)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Ventana en la que el usuario debe ingresar la contraseña anterior para que se pueden salvar los cambios de edición de perfil\n\tmodal_4_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\t\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {(!s.isNew) && s.modal_4_visible}\n\t\t\t\t\tonRequestClose = {() => this.setModal_4_Visible(false)}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*En esta parte el usuario ingresa el nombre de usuario y la contraseña*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Introduzca la contraseña anterior para confirmar\"*/}\n\t\t\t\t\t\t\t\t{(s.definitivePassword != null) && <Text style = {genericStyles.subtitle}>{p.allMessages[47]}</Text>}\n\n\t\t\t\t\t\t\t\t{/*//Mensaje: \"Introduzca su contraseña para confirmar\"*/}\n\t\t\t\t\t\t\t\t{(s.definitivePassword == null) && <Text style = {genericStyles.subtitle}>{p.allMessages[48]}</Text>}\n\n\t\t\t\t\t\t\t\t{/*//Ingresar la contraseña*/}\n\t\t\t\t\t\t\t\t<View style = {{height: 20}}/>\n\t\t\t\t\t\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\t\t\tdefaultValue      = {s.previousPasswordConfirmation}\n\t\t\t\t\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\t\t\t\t\ttextAlign         = {'center'} \n\t\t\t\t\t\t\t\t\t\tplaceholder       = {p.allMessages[12]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\t\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\t\t\t\t\t\tsecureTextEntry   = {true}\t\n\t\t\t\t\t\t\t\t\t\tonChangeText      = {text => this.onChangePreviousPasswordConfirmation(text)}\n\t\t\t\t\t\t\t\t\t\tautoCapitalize    = \"none\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Vista de los botones para darle Aceptar o Volver*/}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[33]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.setModal_4_Visible(false)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[46]} // Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\n/// Constante para darle formato a los diversos componentes de esta pantalla\nconst localStyles = StyleSheet.create({\n\n\t// Formato de la vista en la que se muestra una imagen con sus dimensiones originales (Modal 2)\n\timageView: {\n\t\tflex:           1,\n\t\tflexDirection:  'column',\n\t\tpaddingTop:     20, \n\t\tpaddingBottom:  15, \n\t\tpaddingRight:   15, \n\t\tpaddingLeft:    15,\n\t\talignItems:     'center',\n\t\tjustifyContent: 'center',\n\t},\n\n\t// Formato de los botones para capturar una nueva foto o para añadir desde galería\n\tbuttonView: {\n\t\tflex:           1, \n\t\talignItems:     'center', \n\t\tjustifyContent: 'center', \n\t\tpadding:         15,\n\t},\n\n\t/* Formato del cuadro en donde irá el TouchableHighlight (aunque todavía no ejercerá acción) donde luego se mostrará la foto de perfil, \n\t   encima de los botones de agregar desde galería y tomar nueva foto. También es el formato de la imagen ya creada*/\n\ttouchableHighlight_WithBorder: {\n\t\theight:         0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t\twidth:          0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t\tborderColor:    'black', \n\t\tborderWidth:    1,\n\t},\n\n\t// Formato del TouchableHighlight en donde se muestra la foto de perfil, encima de los botones de agregar desde galería y tomar nueva foto\n\ttouchableHighlight_NoBorder: {\n\t\theight:         0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t\twidth:          0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t},\n\n});\n\n// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tlanguage:    state.appPreferencesReducer.language,\n\t\tallMessages: UserForm_Texts[state.appPreferencesReducer.language], \n\t\tuser_id:     state.userReducer.user_id,\n\t\tlocalDB:     state.userReducer.localDB,\n\t\tremoteDB:    state.userReducer.remoteDB,\n\t\tprivileges:  state.userReducer.privileges,\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchNewUser: (user_id) => dispatch(changeUser(user_id)),\n\t\tdispatchSyncHandler: (syncFunction) => dispatch(changeSyncHandler(syncFunction)),\n\t\tdispatchNewProfileImage: (image) => dispatch(changeUserProfileImage(image)),\n\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);"]},"metadata":{},"sourceType":"module"}