{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\components\\\\LithologyPicker.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { Avatar, ListItem, CheckBox, Button as ButtonWithIcon, SearchBar } from \"react-native-elements\";\nimport { TriangleColorPicker, toHsv, fromHsv } from 'react-native-color-picker';\nimport { connect } from 'react-redux';\nimport { changeStratumComponentPermission } from \"../redux/actions/popUpActions\";\nimport { LithologyPicker_Texts } from \"../languages/components/LithologyPicker\";\nimport { LITHOLOGIES_NAMES } from \"../constants/lithologies\";\nimport { CARBONATES_GRAIN_DIAMETERS, NO_CARBONATES_GRAIN_DIAMETERS } from \"../constants/grains\";\nimport * as Log from \"../genericFunctions/logFunctions\";\nimport * as Database from \"../genericFunctions/databaseFunctions\";\nimport * as auxiliarFunctions from \"../genericFunctions/otherFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR, WHITE_COLOR } from \"../constants/genericStyles\";\nimport * as D from \"../constants/Dimensions\";\n\nvar LithologyPicker = function (_React$Component) {\n  _inherits(LithologyPicker, _React$Component);\n\n  function LithologyPicker(props) {\n    var _this;\n\n    _classCallCheck(this, LithologyPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LithologyPicker).call(this, props));\n\n    _this.showModal_1 = function () {\n      var p = _this.props;\n\n      if (_this.props.enteringEnabled) {\n        p.dispatchEnteringPermission(false);\n\n        _this.setState({\n          modal_1_visible: true\n        });\n\n        if (p.data.savedC != null) {\n          Log.log_action(17, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n        } else {\n          Log.log_action(16, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n        }\n      }\n    };\n\n    _this.hideModal_1 = function () {\n      _this.props.dispatchEnteringPermission(true);\n\n      _this.setState({\n        modal_1_visible: false\n      });\n    };\n\n    _this.showModal_2 = function () {\n      _this.setState({\n        modal_2_visible: true\n      });\n    };\n\n    _this.hideModal_2 = function () {\n      _this.setState({\n        modal_2_visible: false,\n        filter_name: null\n      });\n    };\n\n    _this.setFilter = function (text) {\n      _this.setState({\n        filter_name: text\n      });\n    };\n\n    _this.cancelLithologySelection = function () {\n      var s = _this.state;\n      var p = _this.props;\n\n      if (s.provLithology != s.savedLithology) {\n        _this.showCancelAlert();\n\n        _this.setState({\n          provLithology: s.savedLithology\n        });\n      }\n\n      _this.hideModal_2();\n    };\n\n    _this.acceptLithologySelection = function _callee() {\n      var p, s, _this$state, savedHexadecimalColor, savedC, savedM, savedY, savedK, savedGrainDiameter, savedIsCarbonate, payload;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              p = _this.props;\n              s = _this.state;\n\n              _this.setState({\n                savedLithology: s.provLithology\n              });\n\n              _this$state = _this.state, savedHexadecimalColor = _this$state.savedHexadecimalColor, savedC = _this$state.savedC, savedM = _this$state.savedM, savedY = _this$state.savedY, savedK = _this$state.savedK, savedGrainDiameter = _this$state.savedGrainDiameter, savedIsCarbonate = _this$state.savedIsCarbonate;\n              payload = {\n                savedLithology: s.provLithology,\n                savedHexadecimalColor: savedHexadecimalColor,\n                savedC: savedC,\n                savedM: savedM,\n                savedY: savedY,\n                savedK: savedK,\n                savedGrainDiameter: savedGrainDiameter,\n                savedIsCarbonate: savedIsCarbonate\n              };\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(_this.saveInDatabase(payload));\n\n            case 7:\n              _this.hideModal_2();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.showModal_3 = function () {\n      _this.setState({\n        modal_3_visible: true\n      });\n    };\n\n    _this.hideModal_3 = function () {\n      _this.setState({\n        modal_3_visible: false\n      });\n    };\n\n    _this.onColorChangeByTriangle = function _callee2(newColor) {\n      var s, currentTime, dif, v;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              s = _this.state;\n              currentTime = new Date().getTime();\n              dif = currentTime - s.lastTimeTriangleWasSelected;\n\n              if (!(dif > 2000)) {\n                _context2.next = 11;\n                break;\n              }\n\n              _this.setState({\n                lastTimeTriangleWasSelected: currentTime\n              });\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fromHsv(newColor));\n\n            case 7:\n              v = _context2.sent;\n              v = v.charAt(0) == \"#\" ? v.substring(1, 7) : v;\n\n              _this.setState({\n                provHexadecimalColor: v\n              });\n\n              _this.hexToCMYK(v);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.on_CMYK_valueChange = function _callee3(variableName, text) {\n      var p, _this$state2, provC, provM, provY, provK, object, value, object2;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              p = _this.props;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(_this.fix_null_CMYK_codes(variableName));\n\n            case 3:\n              _this$state2 = _this.state, provC = _this$state2.provC, provM = _this$state2.provM, provY = _this$state2.provY, provK = _this$state2.provK;\n              object = {\n                provC: provC,\n                provM: provM,\n                provY: provY,\n                provK: provK\n              };\n\n              if (auxiliarFunctions.isValidPositiveDecimalNumber(text)) {\n                value = parseFloat(text);\n\n                if (0.00 <= value && value < 100) {\n                  object[variableName][0] = value;\n\n                  _this.cmykToHex(object, variableName, [value, text]);\n                } else {\n                  Alert.alert(p.allMessages[25], p.allMessages[2]);\n                }\n              } else {\n                object[variableName][0] = 0;\n\n                _this.cmykToHex(object);\n\n                if (text == \"\" || text == \" \") {\n                  object2 = {};\n                  object2[variableName] = [0, \"\"];\n\n                  _this.setState(object2);\n                } else {\n                  Alert.alert(p.allMessages[25], p.allMessages[3]);\n                }\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.cancelColorSelection = function () {\n      var s = _this.state;\n      var p = _this.props;\n\n      if (s.provHexadecimalColor != s.savedHexadecimalColor) {\n        _this.showCancelAlert();\n      }\n\n      _this.setState({\n        provHexadecimalColor: s.savedHexadecimalColor,\n        provC: s.savedC,\n        provM: s.savedM,\n        provY: s.savedY,\n        provK: s.savedK\n      });\n\n      _this.hideModal_3();\n    };\n\n    _this.acceptColorSelection = function _callee4() {\n      var p, s, payload;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              p = _this.props;\n              s = _this.state;\n\n              if (!(s.provHexadecimalColor != null && s.provHexadecimalColor.length == 6 && !isNaN(s.provC[0]) && !isNaN(s.provM[0]) && !isNaN(s.provY[0]) && !isNaN(s.provK[0]))) {\n                _context4.next = 10;\n                break;\n              }\n\n              payload = {\n                savedLithology: s.savedLithology,\n                savedHexadecimalColor: s.provHexadecimalColor,\n                savedC: s.provC,\n                savedM: s.provM,\n                savedY: s.provY,\n                savedK: s.provK,\n                savedGrainDiameter: s.savedGrainDiameter,\n                savedIsCarbonate: s.savedIsCarbonate\n              };\n\n              _this.setState(payload);\n\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(_this.saveInDatabase(payload));\n\n            case 7:\n              _this.hideModal_3();\n\n              _context4.next = 11;\n              break;\n\n            case 10:\n              Alert.alert(p.allMessages[25], p.allMessages[5]);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.showModal_4 = function () {\n      var s = _this.state;\n\n      _this.setState({\n        modal_4_visible: true\n      });\n    };\n\n    _this.hideModal_4 = function () {\n      _this.setState({\n        modal_4_visible: false\n      });\n    };\n\n    _this.changeIsCarbonate = function () {\n      var s = _this.state;\n\n      _this.setState({\n        provIsCarbonate: !s.provIsCarbonate,\n        provGrainDiameter: 0\n      });\n    };\n\n    _this.cancelGrainDiameterSelection = function () {\n      var s = _this.state;\n      var p = _this.props;\n\n      if (s.provGrainDiameter != s.savedGrainDiameter || s.provIsCarbonate != s.savedIsCarbonate) {\n        _this.showCancelAlert();\n      }\n\n      _this.setState({\n        provGrainDiameter: s.savedGrainDiameter,\n        provIsCarbonate: s.savedIsCarbonate\n      });\n\n      _this.hideModal_4();\n    };\n\n    _this.acceptGrainDiameterSelection = function _callee5() {\n      var p, s, payload;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              p = _this.props;\n              s = _this.state;\n\n              _this.setState({\n                savedIsCarbonate: s.provIsCarbonate,\n                savedGrainDiameter: s.provGrainDiameter\n              });\n\n              payload = {\n                savedLithology: s.savedLithology,\n                savedHexadecimalColor: s.provHexadecimalColor,\n                savedC: s.provC,\n                savedM: s.provM,\n                savedY: s.provY,\n                savedK: s.provK,\n                savedGrainDiameter: s.provGrainDiameter,\n                savedIsCarbonate: s.provIsCarbonate\n              };\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(_this.saveInDatabase(payload));\n\n            case 6:\n              _this.hideModal_4();\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.deleteLithology = _this.deleteLithology.bind(_assertThisInitialized(_this));\n    _this.state = {\n      componentKey: _this.props.stratum_key + '_lithology',\n      modal_1_visible: false,\n      modal_2_visible: false,\n      filter_name: null,\n      savedLithology: _this.props.data.savedLithology,\n      provLithology: _this.props.data.savedLithology,\n      modal_3_visible: false,\n      savedHexadecimalColor: _this.props.data.savedHexadecimalColor,\n      savedC: _this.props.data.savedC == null ? [null, null] : _this.props.data.savedC,\n      savedM: _this.props.data.savedM == null ? [null, null] : _this.props.data.savedM,\n      savedY: _this.props.data.savedY == null ? [null, null] : _this.props.data.savedY,\n      savedK: _this.props.data.savedK == null ? [null, null] : _this.props.data.savedK,\n      provHexadecimalColor: _this.props.data.savedHexadecimalColor,\n      provC: _this.props.data.savedC == null ? [null, null] : _this.props.data.savedC,\n      provM: _this.props.data.savedM == null ? [null, null] : _this.props.data.savedM,\n      provY: _this.props.data.savedY == null ? [null, null] : _this.props.data.savedY,\n      provK: _this.props.data.savedK == null ? [null, null] : _this.props.data.savedK,\n      lastTimeTriangleWasSelected: 0,\n      modal_4_visible: false,\n      savedGrainDiameter: _this.props.data.savedGrainDiameter,\n      provGrainDiameter: _this.props.data.savedGrainDiameter,\n      savedIsCarbonate: _this.props.data.savedIsCarbonate,\n      provIsCarbonate: _this.props.data.savedIsCarbonate\n    };\n    return _this;\n  }\n\n  _createClass(LithologyPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatchEnteringPermission(true);\n      var s = this.state;\n      var color = s.savedHexadecimalColor;\n      var diameter = s.savedGrainDiameter;\n      var isCarbonate = s.savedIsCarbonate;\n\n      if (color == null) {\n        color = \"afd45f\";\n        this.hexToCMYK(color, true);\n      }\n\n      if (diameter == null) {\n        diameter = 0;\n        isCarbonate = false;\n      }\n\n      this.setState({\n        provHexadecimalColor: color,\n        savedHexadecimalColor: color,\n        savedGrainDiameter: diameter,\n        provGrainDiameter: diameter,\n        savedIsCarbonate: isCarbonate,\n        provIsCarbonate: isCarbonate\n      });\n    }\n  }, {\n    key: \"saveInDatabase\",\n    value: function saveInDatabase(payload) {\n      return _regeneratorRuntime.async(function saveInDatabase$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(Database.saveStratumModule(this.props.user_id, this.props.Object_id, this.props.index, this.state.componentKey, payload, this.props.isCore, this.props.localDB));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"showCancelAlert\",\n    value: function showCancelAlert() {\n      Alert.alert(p.allMessages[25], p.allMessages[0]);\n    }\n  }, {\n    key: \"touchableLithologyToPick\",\n    value: function touchableLithologyToPick(item, i) {\n      var _this2 = this;\n\n      return React.createElement(ListItem, {\n        title: item.name,\n        key: i,\n        leftAvatar: React.createElement(Avatar, {\n          size: \"medium\",\n          source: item.uri,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          }\n        }),\n        onPress: function onPress() {\n          _this2.lithologySelection(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      });\n    }\n  }, {\n    key: \"renderLithologies\",\n    value: function renderLithologies(filter_name) {\n      var _this3 = this;\n\n      var p = this.props;\n\n      if (filter_name == null) {\n        return p.sortedLithologies.map(function (item, i) {\n          return _this3.touchableLithologyToPick(item, i);\n        });\n      }\n\n      return p.sortedLithologies.filter(function (item) {\n        return auxiliarFunctions.stringIncludesSubstring_NoStrict(item.name, filter_name);\n      }).map(function (item, i) {\n        return _this3.touchableLithologyToPick(item, i);\n      });\n    }\n  }, {\n    key: \"lithologySelection\",\n    value: function lithologySelection(item) {\n      var newElement = {\n        key: item.key,\n        uri: item.uri\n      };\n      this.setState({\n        provLithology: newElement\n      });\n    }\n  }, {\n    key: \"deleteLithology\",\n    value: function deleteLithology() {\n      this.setState({\n        provLithology: null\n      });\n    }\n  }, {\n    key: \"onChangeHexadecimalColor\",\n    value: function onChangeHexadecimalColor(text) {\n      var s = this.state;\n      var p = this.props;\n\n      if (auxiliarFunctions.onlyLettersAndNumbers(text)) {\n        if (text.length == 6) {\n          this.setState({\n            provHexadecimalColor: text\n          });\n          this.hexToCMYK(text);\n        } else {\n          this.setState({\n            provHexadecimalColor: text,\n            provC: [null, \"\"],\n            provM: [null, \"\"],\n            provY: [null, \"\"],\n            provK: [null, \"\"]\n          });\n        }\n      } else {\n        this.setState({\n          provHexadecimalColor: null,\n          provC: [null, \"\"],\n          provM: [null, \"\"],\n          provY: [null, \"\"],\n          provK: [null, \"\"]\n        });\n\n        if (text == '' || text == ' ') {} else {\n          Alert.alert(p.allMessages[25], p.allMessages[1]);\n        }\n      }\n    }\n  }, {\n    key: \"fix_null_CMYK_codes\",\n    value: function fix_null_CMYK_codes(colorNotToChange) {\n      var s = this.state;\n\n      if (colorNotToChange !== 'provC' && s.provC[1] == \"\") {\n        this.setState({\n          provC: [0, \"0.0000\"]\n        });\n      }\n\n      if (colorNotToChange !== 'provM' && s.provM[1] == \"\") {\n        this.setState({\n          provM: [0, \"0.0000\"]\n        });\n      }\n\n      if (colorNotToChange !== 'provY' && s.provY[1] == \"\") {\n        this.setState({\n          provY: [0, \"0.0000\"]\n        });\n      }\n\n      if (colorNotToChange !== 'provK' && s.provK[1] == \"\") {\n        this.setState({\n          provK: [0, \"0.0000\"]\n        });\n      }\n    }\n  }, {\n    key: \"hexToCMYK\",\n    value: function hexToCMYK(hex) {\n      var storeInSaved = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var computedC, computedM, computedY, computedK;\n      computedC = computedM = computedY = computedK = 0;\n      var r = parseInt(hex.substring(0, 2), 16);\n      var g = parseInt(hex.substring(2, 4), 16);\n      var b = parseInt(hex.substring(4, 6), 16);\n\n      if (r == 0 && g == 0 && b == 0) {\n        if (storeInSaved) {\n          this.setState({\n            provC: [0, \"0.0000\"],\n            provM: [0, \"0.0000\"],\n            provY: [0, \"0.0000\"],\n            provK: [1, \"1\"],\n            savedC: [0, \"0.0000\"],\n            savedM: [0, \"0.0000\"],\n            savedY: [0, \"0.0000\"],\n            savedK: [1, \"1\"]\n          });\n        } else {\n          this.setState({\n            provC: [0, \"0.0000\"],\n            provM: [0, \"0.0000\"],\n            provY: [0, \"0.0000\"],\n            provK: [1, \"1\"]\n          });\n        }\n      } else {\n        computedC = 1 - r / 255;\n        computedM = 1 - g / 255;\n        computedY = 1 - b / 255;\n        var minCMY = Math.min(computedC, Math.min(computedM, computedY));\n        var invariant = 1 - minCMY;\n        computedC = (computedC - minCMY) / invariant * 100;\n        computedM = (computedM - minCMY) / invariant * 100;\n        computedY = (computedY - minCMY) / invariant * 100;\n        computedK = minCMY * 100;\n        var strC = computedC == 0 ? \"0.0000\" : computedC.toString().slice(0, 6);\n        var strM = computedM == 0 ? \"0.0000\" : computedM.toString().slice(0, 6);\n        var strY = computedY == 0 ? \"0.0000\" : computedY.toString().slice(0, 6);\n        var strK = computedK == 0 ? \"0.0000\" : computedK.toString().slice(0, 6);\n        var C = parseFloat(strC);\n        var M = parseFloat(strM);\n        var Y = parseFloat(strY);\n        var K = parseFloat(strK);\n\n        if (isNaN(C) || isNaN(M) || isNaN(Y) || isNaN(K)) {\n          Alert.alert(this.props.allMessages[25], this.props.allMessages[24]);\n\n          if (storeInSaved) {\n            this.setState({\n              provC: [0, \"0.0000\"],\n              provM: [0, \"0.0000\"],\n              provY: [0, \"0.0000\"],\n              provK: [0, \"0.0000\"],\n              provHexadecimalColor: \"ffffff\",\n              savedC: [0, \"0.0000\"],\n              savedM: [0, \"0.0000\"],\n              savedY: [0, \"0.0000\"],\n              savedK: [0, \"0.0000\"]\n            });\n          } else {\n            this.setState({\n              provC: [0, \"0.0000\"],\n              provM: [0, \"0.0000\"],\n              provY: [0, \"0.0000\"],\n              provK: [0, \"0.0000\"],\n              provHexadecimalColor: \"ffffff\"\n            });\n          }\n        } else {\n          if (storeInSaved) {\n            this.setState({\n              provC: [C, strC],\n              provM: [M, strM],\n              provY: [Y, strY],\n              provK: [K, strK],\n              savedC: [C, strC],\n              savedM: [M, strM],\n              savedY: [Y, strY],\n              savedK: [K, strK]\n            });\n          } else {\n            this.setState({\n              provC: [C, strC],\n              provM: [M, strM],\n              provY: [Y, strY],\n              provK: [K, strK]\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"cmykToHex\",\n    value: function cmykToHex(valuesObject) {\n      var variableName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var arrayToAssign = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var p = this.props;\n      var computedC = valuesObject.provC[0] / 100;\n      var computedM = valuesObject.provM[0] / 100;\n      var computedY = valuesObject.provY[0] / 100;\n      var computedK = valuesObject.provK[0] / 100;\n      var invariant = parseFloat(1 - computedK).toFixed(6);\n      var prov1 = parseFloat((computedC * invariant).toString().slice(0, 6));\n      var prov2 = parseFloat((computedM * invariant).toString().slice(0, 6));\n      var prov3 = parseFloat((computedY * invariant).toString().slice(0, 6));\n      computedK = parseFloat(computedK);\n      computedC = parseFloat((prov1 + computedK).toString().slice(0, 6));\n      computedM = parseFloat((prov2 + computedK).toString().slice(0, 6));\n      computedY = parseFloat((prov3 + computedK).toString().slice(0, 6));\n      var b = parseInt((1 - computedY) * 255);\n      var g = parseInt((1 - computedM) * 255);\n      var r = parseInt((1 - computedC) * 255);\n\n      if (!isNaN(b) && !isNaN(g) && !isNaN(r)) {\n        r = r.toString(16);\n        g = g.toString(16);\n        b = b.toString(16);\n        var hex = r + g + b;\n        this.setState({\n          provHexadecimalColor: hex\n        });\n\n        if (variableName != null) {\n          var object = {};\n          object[variableName] = arrayToAssign;\n          this.setState(object);\n        }\n      } else {\n        Alert.alert(p.allMessages[25], p.allMessages[4]);\n      }\n    }\n  }, {\n    key: \"Modal_1_View\",\n    value: function Modal_1_View() {\n      var _this4 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: s.modal_1_visible,\n        onRequestClose: function onRequestClose() {\n          return _this4.hideModal_1();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        }\n      }, React.createElement(View, {\n        style: genericStyles.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        }\n      }, React.createElement(Text, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 17,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        }\n      }, p.allMessages[6], \": \", p.stratumName)), React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 23\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[7],\n        onPress: function onPress() {\n          _this4.showModal_2();\n        },\n        icon: {\n          name: 'playlist-add'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 23\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[8],\n        onPress: function onPress() {\n          _this4.showModal_3();\n        },\n        icon: {\n          name: 'color-lens'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 23\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[9],\n        onPress: function onPress() {\n          _this4.showModal_4();\n        },\n        icon: {\n          name: 'fiber-manual-record'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 23\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[10],\n        color: DARK_GRAY_COLOR,\n        onPress: this.hideModal_1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        }\n      })))), React.createElement(View, {\n        style: {\n          flex: 0.15,\n          flexDirection: 'column',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        }\n      }, \"* \", p.allMessages[7], \":\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        }\n      }, \" \", s.savedLithology == null ? null : p.allLithologyNames.find(function (element) {\n        return element.key === s.savedLithology.key;\n      }).name)), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        }\n      }, \"* \", p.allMessages[8], \":\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        }\n      }, \" \", s.savedHexadecimalColor == null ? null : s.savedHexadecimalColor)), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        }\n      }, \"* \", p.allMessages[9], \":\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        }\n      }, \" \", s.savedIsCarbonate ? p.allCarbonateGrainDiameterNames[s.savedGrainDiameter] : p.allNoCarbonateGrainDiameterNames[s.savedGrainDiameter]))))));\n    }\n  }, {\n    key: \"Modal_2_View\",\n    value: function Modal_2_View() {\n      var _this5 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: s.modal_2_visible,\n        onRequestClose: function onRequestClose() {\n          return _this5.hideModal_2();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_without_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        }\n      }, React.createElement(SearchBar, {\n        value: s.filter_name,\n        selectTextOnFocus: true,\n        lightTheme: true,\n        textAlign: 'center',\n        inputStyle: {\n          color: 'black',\n          backgroundColor: '#ffffff'\n        },\n        placeholder: p.allMessages[11],\n        placeholderTextColor: 'gray',\n        onChangeText: function onChangeText(text) {\n          return _this5.setFilter(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        }\n      }), React.createElement(View, {\n        style: localStyles.lithologyPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        }\n      }, this.renderLithologies(s.filter_name)))), React.createElement(View, {\n        style: localStyles.smallColumn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          flex: 0.7,\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        }\n      }, p.allMessages[12], \":\", \"\\n\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        }\n      }, s.provLithology == null ? null : p.allLithologyNames.find(function (element) {\n        return element.key === s.provLithology.key;\n      }).name))), React.createElement(View, {\n        style: {\n          flex: 0.4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[13],\n        color: \"red\",\n        onPress: this.deleteLithology,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        }\n      }))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[14],\n        onPress: function onPress() {\n          return _this5.cancelLithologySelection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[15],\n        icon: {\n          name: 'check'\n        },\n        onPress: function onPress() {\n          return _this5.acceptLithologySelection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        }\n      }))))));\n    }\n  }, {\n    key: \"CMYK_Input_View\",\n    value: function CMYK_Input_View(variable, variableRealName, variableNameForUser) {\n      var _this6 = this;\n\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        }\n      }, React.createElement(TextInput, {\n        value: variable[1],\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        style: localStyles.colorValueInput,\n        maxLength: 6,\n        onChangeText: function onChangeText(text) {\n          return _this6.on_CMYK_valueChange(variableRealName, text);\n        },\n        keyboardType: \"phone-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        }\n      }), React.createElement(Text, {\n        style: {\n          flex: 0.5,\n          paddingTop: 3,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        }\n      }, variableNameForUser));\n    }\n  }, {\n    key: \"Modal_3_View\",\n    value: function Modal_3_View() {\n      var _this7 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: s.modal_3_visible,\n        onRequestClose: function onRequestClose() {\n          return _this7.hideModal_3();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        }\n      }, React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        }\n      }, p.allMessages[16]), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        }\n      }), React.createElement(TextInput, {\n        defaultValue: s.provHexadecimalColor,\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        autoCapitalize: \"none\",\n        style: localStyles.colorValueInput,\n        maxLength: 6,\n        onChangeText: function onChangeText(text) {\n          return _this7.onChangeHexadecimalColor(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0.4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        }\n      })), React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        }\n      }, p.allMessages[17], \"\\n\", p.allMessages[18], \" (%)\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          paddingBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        }\n      }, this.CMYK_Input_View(s.provC, 'provC', 'C'), this.CMYK_Input_View(s.provM, 'provM', 'M')), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832\n        }\n      }, this.CMYK_Input_View(s.provY, 'provY', 'Y'), this.CMYK_Input_View(s.provK, 'provK', 'K')))), React.createElement(View, {\n        style: genericStyles.white_background_without_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        }\n      }, React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        }\n      }, p.allMessages[19]), React.createElement(View, {\n        style: localStyles.colorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        }\n      }, React.createElement(TriangleColorPicker, {\n        color: s.provHexadecimalColor,\n        onColorChange: this.onColorChangeByTriangle,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        }\n      }))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[14],\n        onPress: function onPress() {\n          return _this7.cancelColorSelection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[15],\n        icon: {\n          name: 'check'\n        },\n        onPress: function onPress() {\n          return _this7.acceptColorSelection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        }\n      }))))));\n    }\n  }, {\n    key: \"Modal_4_View\",\n    value: function Modal_4_View() {\n      var _this8 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: s.modal_4_visible,\n        onRequestClose: function onRequestClose() {\n          return _this8.hideModal_4();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 50,\n          paddingBottom: 30,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        }\n      }, React.createElement(CheckBox, {\n        title: p.allMessages[20],\n        checked: s.provIsCarbonate,\n        onPress: function onPress() {\n          _this8.changeIsCarbonate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        }\n      })), s.provIsCarbonate && React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911\n        }\n      }, React.createElement(Picker, {\n        selectedValue: s.provGrainDiameter,\n        style: {\n          height: 130,\n          width: 200\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this8.setState({\n            provGrainDiameter: itemValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[0],\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[1],\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[2],\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 920\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[3],\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[4],\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[5],\n        value: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allCarbonateGrainDiameterNames[6],\n        value: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        }\n      }))), !s.provIsCarbonate && React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        }\n      }, React.createElement(Picker, {\n        selectedValue: s.provGrainDiameter,\n        style: {\n          height: 130,\n          width: 200\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this8.setState({\n            provGrainDiameter: itemValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[0],\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[1],\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[2],\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[3],\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[4],\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[5],\n        value: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[6],\n        value: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"          \" + p.allNoCarbonateGrainDiameterNames[7],\n        value: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945\n        }\n      }))))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[14],\n        onPress: function onPress() {\n          return _this8.cancelGrainDiameterSelection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[15],\n        icon: {\n          name: 'check'\n        },\n        onPress: function onPress() {\n          return _this8.acceptGrainDiameterSelection();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968\n        }\n      }))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989\n        }\n      }, this.Modal_1_View(), this.Modal_2_View(), this.Modal_3_View(), this.Modal_4_View(), !s.savedLithology && p.takingShot && React.createElement(View, {\n        style: {\n          width: D.LITHOLOGY_PICKER_WIDTH,\n          height: p.height,\n          borderWidth: 1,\n          borderColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        }\n      }), !s.savedLithology && p.height < 18 && !p.takingShot && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this9.showModal_1(true);\n        },\n        style: {\n          width: D.LITHOLOGY_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006\n        }\n      }, React.createElement(View, {\n        style: localStyles.showInstructionsObjectScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007\n        }\n      })), !s.savedLithology && p.height >= 18 && !p.takingShot && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this9.showModal_1(true);\n        },\n        style: {\n          width: D.LITHOLOGY_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013\n        }\n      }, React.createElement(View, {\n        style: localStyles.showInstructionsObjectScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016\n        }\n      }, p.allMessages[21]))), s.savedLithology && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this9.showModal_1(true);\n        },\n        style: {\n          width: D.LITHOLOGY_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          backgroundColor: \"#\" + s.savedHexadecimalColor,\n          width: s.savedIsCarbonate ? 80 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM : 50 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        }\n      }, React.createElement(Image, {\n        source: s.savedLithology.uri,\n        resizeMethod: \"auto\",\n        style: {\n          width: s.savedIsCarbonate ? 80 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM : 50 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM,\n          height: p.height,\n          opacity: 0.5,\n          borderColor: 'black',\n          borderWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        }\n      }))));\n    }\n  }]);\n\n  return LithologyPicker;\n}(React.Component);\n\nvar localStyles = StyleSheet.create({\n  showInstructionsObjectScreen: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  lithologyPicker: {\n    flex: 8,\n    flexDirection: 'column',\n    padding: 10\n  },\n  colorPicker: {\n    flex: 10,\n    flexDirection: 'column',\n    paddingTop: 1\n  },\n  colorValueInput: {\n    height: 28,\n    borderWidth: 1,\n    flex: 1,\n    padding: 5,\n    borderColor: 'black',\n    width: 90\n  },\n  smallColumn: {\n    flex: 0.2,\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    padding: 10\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: LithologyPicker_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB,\n    sortedLithologies: state.libraryReducer.sortedLithologies,\n    enteringEnabled: state.popUpReducer.stratumComponentEnabled,\n    allLithologyNames: LITHOLOGIES_NAMES[state.appPreferencesReducer.language],\n    allCarbonateGrainDiameterNames: CARBONATES_GRAIN_DIAMETERS[state.appPreferencesReducer.language],\n    allNoCarbonateGrainDiameterNames: NO_CARBONATES_GRAIN_DIAMETERS[state.appPreferencesReducer.language]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchEnteringPermission: function dispatchEnteringPermission(bool) {\n      return dispatch(changeStratumComponentPermission(bool));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LithologyPicker);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/components/LithologyPicker.js"],"names":["React","Avatar","ListItem","CheckBox","Button","ButtonWithIcon","SearchBar","TriangleColorPicker","toHsv","fromHsv","connect","changeStratumComponentPermission","LithologyPicker_Texts","LITHOLOGIES_NAMES","CARBONATES_GRAIN_DIAMETERS","NO_CARBONATES_GRAIN_DIAMETERS","Log","Database","auxiliarFunctions","genericStyles","DARK_GRAY_COLOR","WHITE_COLOR","D","LithologyPicker","props","showModal_1","p","enteringEnabled","dispatchEnteringPermission","setState","modal_1_visible","data","savedC","log_action","user_id","isCore","Object_id","stratum_key","hideModal_1","showModal_2","modal_2_visible","hideModal_2","filter_name","setFilter","text","cancelLithologySelection","s","state","provLithology","savedLithology","showCancelAlert","acceptLithologySelection","savedHexadecimalColor","savedM","savedY","savedK","savedGrainDiameter","savedIsCarbonate","payload","saveInDatabase","showModal_3","modal_3_visible","hideModal_3","onColorChangeByTriangle","newColor","currentTime","Date","getTime","dif","lastTimeTriangleWasSelected","v","charAt","substring","provHexadecimalColor","hexToCMYK","on_CMYK_valueChange","variableName","fix_null_CMYK_codes","provC","provM","provY","provK","object","isValidPositiveDecimalNumber","value","parseFloat","cmykToHex","Alert","alert","allMessages","object2","cancelColorSelection","acceptColorSelection","length","isNaN","showModal_4","modal_4_visible","hideModal_4","changeIsCarbonate","provIsCarbonate","provGrainDiameter","cancelGrainDiameterSelection","acceptGrainDiameterSelection","deleteLithology","bind","componentKey","color","diameter","isCarbonate","saveStratumModule","index","localDB","item","i","name","uri","lithologySelection","sortedLithologies","map","touchableLithologyToPick","filter","stringIncludesSubstring_NoStrict","newElement","key","onlyLettersAndNumbers","colorNotToChange","hex","storeInSaved","computedC","computedM","computedY","computedK","r","parseInt","g","b","minCMY","Math","min","invariant","strC","toString","slice","strM","strY","strK","C","M","Y","K","valuesObject","arrayToAssign","toFixed","prov1","prov2","prov3","lightGray_background","modalHeader","justifyContent","alignItems","fontSize","fontWeight","stratumName","white_background_with_ScrollView","flex","padding","flexDirection","textAlign","allLithologyNames","find","element","allCarbonateGrainDiameterNames","allNoCarbonateGrainDiameterNames","white_background_without_ScrollView","backgroundColor","localStyles","lithologyPicker","renderLithologies","smallColumn","down_buttons","paddingRight","paddingLeft","variable","variableRealName","variableNameForUser","colorValueInput","paddingTop","subtitle","onChangeHexadecimalColor","paddingBottom","CMYK_Input_View","colorPicker","height","width","itemValue","itemIndex","Modal_1_View","Modal_2_View","Modal_3_View","Modal_4_View","takingShot","LITHOLOGY_PICKER_WIDTH","borderWidth","borderColor","showInstructionsObjectScreen","LITHOLOGY_ADDING_TERM","opacity","Component","StyleSheet","create","mapStateToProps","appPreferencesReducer","language","userReducer","libraryReducer","popUpReducer","stratumComponentEnabled","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, Button as ButtonNoIcon, Image, View,\n\t\tTouchableHighlight, StyleSheet, Modal, ScrollView, Alert,\n\t\tTextInput, Dimensions, Picker } from 'react-native';\n\nimport { Avatar, ListItem, CheckBox, Button as ButtonWithIcon, SearchBar} from \"react-native-elements\";\nimport { TriangleColorPicker, toHsv, fromHsv} from 'react-native-color-picker'\n\nimport { connect } from 'react-redux'\nimport { changeStratumComponentPermission } from '../redux/actions/popUpActions'\nimport { LithologyPicker_Texts } from '../languages/components/LithologyPicker'\n\nimport { LITHOLOGIES_NAMES } from '../constants/lithologies'\nimport { CARBONATES_GRAIN_DIAMETERS, NO_CARBONATES_GRAIN_DIAMETERS } from '../constants/grains'\n\nimport * as Log      from '../genericFunctions/logFunctions'\nimport * as Database from '../genericFunctions/databaseFunctions'\nimport * as auxiliarFunctions from '../genericFunctions/otherFunctions'\nimport { genericStyles, DARK_GRAY_COLOR, WHITE_COLOR } from '../constants/genericStyles'\nimport * as D from '../constants/Dimensions'\n\n\nclass LithologyPicker extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.deleteLithology = this.deleteLithology.bind(this);\n\n\t\tthis.state = {\n\t\t\tcomponentKey: this.props.stratum_key + '_lithology', // Para que se sepa qué parte del estrato se va a salvar\n\n\t\t\t/******** Variables del modal 1, que es el más externo, que se abre por defecto cuando el usuario presiona desde la ventana\n\t\t\t   externa para seleccionar la litología */\n\t\t\tmodal_1_visible: false,\n\n\n\t\t\t//******* Variables del modal 2, que es en donde se despliega la lista de litologías que el usuario puede seleccionar */\n\t\t\tmodal_2_visible: false,\n\t\t\tfilter_name:     null,  // Almacenará el nombre que ingrese el usuario para filtrar la búsqueda de litologías\n\n\t\t\tsavedLithology: this.props.data.savedLithology, // Litología ya almacenada en la base de datos\n\t\t\tprovLithology:  this.props.data.savedLithology, // Litología seleccionada por el usuario, pero que todavía no ha sido almacenada en la base de datos\n\n\n\t\t\t//******* Variables del modal 3, que es en donde el usuario selecciona el color de la litología */\n\t\t\tmodal_3_visible: false,\n\n\t\t\t// Valores ya almacenados en la base de datos\n\t\t\tsavedHexadecimalColor: (this.props.data.savedHexadecimalColor), // Color de la litología en formato hexadecimal (cadena de caracteres)\n\t\t\tsavedC:  (this.props.data.savedC == null) ? [null,null] : this.props.data.savedC,\n\t\t\tsavedM:  (this.props.data.savedM == null) ? [null,null] : this.props.data.savedM,\n\t\t\tsavedY:  (this.props.data.savedY == null) ? [null,null] : this.props.data.savedY,\n\t\t\tsavedK:  (this.props.data.savedK == null) ? [null,null] : this.props.data.savedK,\n\n\t\t\t// Valores que el usuario selecciona o ingresa, pero que no se salvarán hasta que le dé al botón de \"Aceptar\"\n\t\t\tprovHexadecimalColor:  this.props.data.savedHexadecimalColor, // Color de la litología en formato hexadecimal (cadena de caracteres)\n\t\t\tprovC:  (this.props.data.savedC == null) ? [null,null] : this.props.data.savedC,\n\t\t\tprovM:  (this.props.data.savedM == null) ? [null,null] : this.props.data.savedM,\n\t\t\tprovY:  (this.props.data.savedY == null) ? [null,null] : this.props.data.savedY,\n\t\t\tprovK:  (this.props.data.savedK == null) ? [null,null] : this.props.data.savedK,\n\n\t\t\t// Esta variable sirve para registrar cuándo fue la última vez que se pulsó sobre el triángulo de selección de color.\n\t\t\t// Es necesaria porque a veces al pulsar sobre él, se detecta como si se hubiesen hecho dos pulsaciones seguidas, y por eso no permitimos\n\t\t\t// que se lleve a cabo ninguna acción al volver a pulsar sobre él hasta que haya transcurrido cierto tiempo\n\t\t\tlastTimeTriangleWasSelected: 0,\n\n\t\t\t//******* Variables del modal 4, que es en donde el usuario selecciona el diámetro del grano */\n\t\t\tmodal_4_visible:    false,\n\t\t\tsavedGrainDiameter: this.props.data.savedGrainDiameter, // Diámetro del grano, ya almacenado en la base de datos\t\n\t\t\tprovGrainDiameter:  this.props.data.savedGrainDiameter, /* Diámetro del grano, pero que no será salvado en la base de datos hasta que el usuario\n\t\t\t                                                           le dé al botón de \"Aceptar\" */ \n\t\t\tsavedIsCarbonate:   this.props.data.savedIsCarbonate,   // Determina si este estrato es un carbonato, importante porque ello determina el tipo de diámetro del grano\n\t\t\tprovIsCarbonate:    this.props.data.savedIsCarbonate,   // Igual que savedIsCarbonate, pero el valor que todavía no ha sido salvado en la base de datos.\n\t\t}\n\t}\n\n\t// Procedimientos que deben hacerse cuando se monta este componente\n\tcomponentDidMount(){\n\t\t/* Si no colocáramos esto, si el programador refresca esta página estando dentro de ella en la aplicación, se regresará a la \n\t\t   ventana externa sin haber vuelto a habilitar el permiso de poder ingresar a los componentes. Antes lo habilitábamos una sola vez\n\t\t   en la ventana externa, pero ahora en todos los componentes */\n\t\tthis.props.dispatchEnteringPermission(true);\n\n\t\tlet s = this.state;\n\t\t// Aquí llamamos al procedimiento \"hexToCMYK\" para que los valores de C,M,Y y K se sincronicen con el valor hexadecimal del color\n\t\t// Además, si no hay diámetro del grano al iniciar, suponemos que es el más pequeño\n\t\tvar color       = s.savedHexadecimalColor;\n\t\tvar diameter    = s.savedGrainDiameter;\n\t\tvar isCarbonate = s.savedIsCarbonate;\n\n\t\tif (color == null){\n\t\t\tcolor = \"afd45f\"; // Color aleatorio que se deja por defecto\n\t\t\tthis.hexToCMYK(color, true);\n\t\t}\t\n\n\t\tif (diameter == null){\n\t\t\tdiameter = 0;\n\t\t\tisCarbonate = false;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tprovHexadecimalColor:  color, \n\t\t\tsavedHexadecimalColor: color, \n\t\t\tsavedGrainDiameter:    diameter,\n\t\t\tprovGrainDiameter:     diameter,\n\t\t\tsavedIsCarbonate:      isCarbonate,\n\t\t\tprovIsCarbonate:       isCarbonate,\n\t\t});\t\n\t}\n\n\t// Procedimiento para salvar los cambios realizados en la base de datos del usuario\n\tasync saveInDatabase(payload){\n\t\tawait Database.saveStratumModule(this.props.user_id, this.props.Object_id, this.props.index, this.state.componentKey, payload, this.props.isCore, this.props.localDB);\n\t}\n\n\t// Procedimiento para mostrar la alerta de que no se salvaron los cambios al presionar un botón de Cancelar\n\tshowCancelAlert(){\n\t\t// Alerta: \"No se salvaron los cambios\"\n\t\tAlert.alert(p.allMessages[25], p.allMessages[0]);\n\t}\n\n\t//******************* Métodos para el modal 1, que es el principal, el que permite ir a los otros tres **********************/\n\n\t// Activa el modal \n\tshowModal_1 = () => {\n\t\tlet p = this.props;\n\t\tif (this.props.enteringEnabled){\n\t\t\tp.dispatchEnteringPermission(false);\n\t\t\tthis.setState({modal_1_visible: true})\n\n\t\t\tif (p.data.savedC != null) {\n\t\t\t\tLog.log_action(17, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n\t\t\t}\n\t\t\telse {\t\n\t\t\t\tLog.log_action(16, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Oculta el modal\n\thideModal_1 = () => {\n\t\tthis.props.dispatchEnteringPermission(true);\n\t\tthis.setState({modal_1_visible: false});\n\t}\n\n\t//******************* Métodos para el modal 2, que es en el que se despliega la lista de litologías a seleccionar **********************/\n\n\t// Activa el modal \n\tshowModal_2 = () => {\n\t\tthis.setState({modal_2_visible: true});\n\t}\n\n\t// Oculta el modal\n\thideModal_2 = () => {\n\t\tthis.setState({modal_2_visible: false, filter_name: null})\t\n\t}\n\n\t// Cada botón que representa una litología a seleccionar \n\ttouchableLithologyToPick(item,i){\n\t\treturn(\n\t\t\t<ListItem\n\t\t\t\ttitle      = {item.name}\n\t\t\t\tkey        = {i}\n\t\t\t\tleftAvatar = {<Avatar  size=\"medium\"  source={item.uri}/>}\t\n\t\t\t\tonPress = {() =>{this.lithologySelection(item)}}\t\t\n\t\t\t/>\n\t\t)\n\t}\n\n\t// Una vez que se cambia el texto en el que se filtran las litologías, se invoca este procedimiento\n\tsetFilter = (text) => {\n\t\tthis.setState({filter_name: text})\n\t}\n\n\t// Función para mostrar los patrones litológicos como botones\n\trenderLithologies(filter_name){\n\t\tlet p = this.props;\n\n\t\t// Caso en que el usuario no ha puesto ningún nombre para filtrar\n\t\tif (filter_name == null){\n\t\t\treturn p.sortedLithologies.map((item, i) => (\n\t\t\t\tthis.touchableLithologyToPick(item,i)\n\t\t\t))\n\t\t} \n\t\t// Caso en que el usuario ya ha ingresado un nombre para comenzar a filtrar\n\t\treturn (\n\t\t\tp.sortedLithologies.filter(item => auxiliarFunctions.stringIncludesSubstring_NoStrict(item.name,filter_name))\n\t\t\t\t.map((item, i) => (\n\t\t\t\t\tthis.touchableLithologyToPick(item,i)\n\t\t\t\t))\n\t\t)\n\t}\n\n\t// Usado cuando el usuario presiona sobre un TouchableHighlight para seleccionar una litología\n\tlithologySelection (item) {\n\t\tconst newElement = {\n\t\t\tkey: item.key,\n\t\t\turi: item.uri,\n\t\t}\n\t\tthis.setState({provLithology: newElement})\t\n\t}\n\n\t// Usado para eliminar la estructura que había sido seleccionada\n\tdeleteLithology (){\n\t\tthis.setState({provLithology: null});\n\t}\n\n\t// Se activa cuando el usuario presiona el botón \"Cancelar\", estando en la selección de litologías\n\tcancelLithologySelection = () => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tif (s.provLithology != s.savedLithology){\n\t\t\tthis.showCancelAlert();\t\n\t\t\tthis.setState({provLithology: s.savedLithology});\n\t\t}\n\t\tthis.hideModal_2();\n\t}\n\n\t// Se activa cuando el usuario le da al botón de \"Aceptar\", estando en la selección de litologías\n\tacceptLithologySelection = async() => {\n\t\tlet p = this.props;\n\t\tlet s = this.state;\n\n\t\tthis.setState({savedLithology: s.provLithology})\n\n\t\tlet {savedHexadecimalColor, savedC, savedM, savedY, savedK, savedGrainDiameter, savedIsCarbonate} = this.state;\n\n\t\tconst payload = {\n\t\t\tsavedLithology: s.provLithology,\n\t\t\tsavedHexadecimalColor, savedC, savedM, savedY, savedK, savedGrainDiameter, savedIsCarbonate,\n\t\t}\n\n\t\tawait this.saveInDatabase(payload);\n\t\tthis.hideModal_2();\n\t}\n\n\t//******************* Métodos para el modal 3, que es en el que se selecciona el color **********************/\n\n\t// Activa el modal \n\tshowModal_3 = () => {\n\t\tthis.setState({modal_3_visible: true});\n\t}\n\n\t// Oculta el modal\n\thideModal_3 = () => {\n\t\tthis.setState({modal_3_visible: false});\n\t}\n\n\t// Se activa cuando el usuario cambia el valor hexadecimal del color\n\tonChangeHexadecimalColor(text){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\tif (auxiliarFunctions.onlyLettersAndNumbers(text)){\n\t\t\tif (text.length == 6) {\n\t\t\t\tthis.setState({provHexadecimalColor: text});\n\t\t\t\tthis.hexToCMYK(text);\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({provHexadecimalColor: text, provC: [null,\"\"], provM: [null,\"\"], provY: [null,\"\"], provK: [null,\"\"]});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.setState({provHexadecimalColor: null, provC: [null,\"\"], provM: [null,\"\"], provY: [null,\"\"], provK: [null,\"\"]});\n\t\t\tif ( (text == '') || (text == ' ') ) {}\n\t\t\telse {\n\t\t\t\t// Alerta: \"El hexadecimal ingresado no es válido\"\n\t\t\t\tAlert.alert(p.allMessages[25], p.allMessages[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Se activa cuando el usuario selecciona un color del triángulo de selección de color\n\tonColorChangeByTriangle = async(newColor) => {\n\t\tlet s = this.state;\n\t\tconst currentTime = new Date().getTime();\n\t\tconst dif = currentTime - s.lastTimeTriangleWasSelected;\n\n\t\tif (dif > 2000){\n\t\t\tthis.setState({lastTimeTriangleWasSelected: currentTime})\n\t\t\tvar v = await fromHsv(newColor);\n\t\t\tv = (v.charAt(0) == \"#\") ? v.substring(1,7) : v;\n\t\t\tthis.setState({provHexadecimalColor: v});\n\t\t\tthis.hexToCMYK(v);\n\t\t}\n\t}\n\n\t// Para hacer que cuando el usuario edite uno de los campos CMKY, si algún otro era nulo, ese nulo se haga automáticamente cero.\n\tfix_null_CMYK_codes(colorNotToChange){\n\t\tlet s = this.state;\n\n\t\tif ((colorNotToChange !== 'provC') && (s.provC[1] == \"\")){\n\t\t\tthis.setState({provC: [0, \"0.0000\"]});\n\t\t}\n\t\tif ((colorNotToChange !== 'provM') && (s.provM[1] == \"\")){\n\t\t\tthis.setState({provM: [0, \"0.0000\"]});\n\t\t}\n\t\tif ((colorNotToChange !== 'provY') && (s.provY[1] == \"\")){\n\t\t\tthis.setState({provY: [0, \"0.0000\"]});\n\t\t}\n\t\tif ((colorNotToChange !== 'provK') && (s.provK[1] == \"\")){\n\t\t\tthis.setState({provK: [0, \"0.0000\"]});\n\t\t}\n\t}\n\n\t// Se activa cuando el usuario cambia manualmente el valor de C, de M, de Y o de K\n\ton_CMYK_valueChange = async(variableName, text) => {\n\t\tlet p = this.props;\n\t\tawait this.fix_null_CMYK_codes(variableName);\n\n\t\tlet {provC, provM, provY, provK} = this.state;\n\t\tlet object = {provC, provM, provY, provK};\n\n\t\tif (auxiliarFunctions.isValidPositiveDecimalNumber(text)){\n\t\t\tvar value = parseFloat(text);\n\n\t\t\t// Caso en que el porcentaje ingresado es correcto\n\t\t\tif ((0.00 <= value) && (value < 100)) {\n\t\t\t\tobject[variableName][0] = value;\n\t\t\t\tthis.cmykToHex(object, variableName, [value,text]);\n\t\t\t} \n\t\t\telse { // Caso en que se ingresó un porcentaje incorrecto\n\n\t\t\t\t// Alerta: \"El número debe ser no negativo y menor que 100\"\n\t\t\t\tAlert.alert(p.allMessages[25], p.allMessages[2]);\n\t\t\t}\n\t\t} else {\n\t\t\tobject[variableName][0] = 0;\n\t\t\tthis.cmykToHex(object);\n\n\t\t\tif ((text == \"\") || (text == \" \")){\n\t\t\t\tlet object2 = {};\n\t\t\t\tobject2[variableName] = [0, \"\"];\n\t\t\t\tthis.setState(object2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\"\n\t\t\t\tAlert.alert(p.allMessages[25], p.allMessages[3]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Función para convertir un hexadecimal que representa un color, en formato CMYK.\n\t// El valor \"hex\" que recibe es una cadena de caracteres.\n\t// Consultada en: \"http://www.javascripter.net/faq/hex2cmyk.htm\"\n\thexToCMYK(hex, storeInSaved = false){\n\t\tlet computedC, computedM, computedY, computedK;\n\t\tcomputedC = computedM = computedY = computedK = 0;\n\n\t\tvar r = parseInt(hex.substring(0,2),16); \n\t\tvar g = parseInt(hex.substring(2,4),16); \n\t\tvar b = parseInt(hex.substring(4,6),16); \n\n\t\t// BLACK\n\t\tif (r==0 && g==0 && b==0) {\n\t\t\tif (storeInSaved){\n\t\t\t\tthis.setState({provC: [0, \"0.0000\"], provM: [0, \"0.0000\"], provY: [0, \"0.0000\"], provK: [1,\"1\"],\n\t\t\t\t\t\t\t\tsavedC: [0, \"0.0000\"], savedM: [0, \"0.0000\"], savedY: [0, \"0.0000\"], savedK: [1,\"1\"]\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.setState({provC: [0, \"0.0000\"], provM: [0, \"0.0000\"], provY: [0, \"0.0000\"], provK: [1,\"1\"]})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcomputedC = 1 - (r/255);\n\t\t\tcomputedM = 1 - (g/255);\n\t\t\tcomputedY = 1 - (b/255);\n\n\t\t\tvar minCMY = Math.min(computedC,Math.min(computedM,computedY));\n\t\t\tvar invariant = 1 - minCMY;\n\n\t\t\tcomputedC = ((computedC - minCMY) / invariant) * 100;\n\t\t\tcomputedM = ((computedM - minCMY) / invariant) * 100;\n\t\t\tcomputedY = ((computedY - minCMY) / invariant) * 100;\n\t\t\tcomputedK = minCMY * 100;\n\n\t\t\t// Valores en cadenas de caracteres\n\t\t\tconst strC = (computedC == 0) ? \"0.0000\" : computedC.toString().slice(0,6);\n\t\t\tconst strM = (computedM == 0) ? \"0.0000\" : computedM.toString().slice(0,6);\n\t\t\tconst strY = (computedY == 0) ? \"0.0000\" : computedY.toString().slice(0,6);\n\t\t\tconst strK = (computedK == 0) ? \"0.0000\" : computedK.toString().slice(0,6);\n\n\t\t\t// Valores numéricos\n\t\t\tconst C = parseFloat(strC);\n\t\t\tconst M = parseFloat(strM);\n\t\t\tconst Y = parseFloat(strY);\n\t\t\tconst K = parseFloat(strK);\n\n\t\t\tif (isNaN(C) || isNaN(M) || isNaN(Y) || isNaN(K)){\n\t\t\t\t// Alerta: \"El hexadecimal ingresado no corresponde con ningún color\"\n\t\t\t\tAlert.alert(this.props.allMessages[25], this.props.allMessages[24]);\n\n\t\t\t\tif (storeInSaved){\n\t\t\t\t\tthis.setState({provC: [0, \"0.0000\"], provM: [0, \"0.0000\"], provY: [0, \"0.0000\"], provK: [0, \"0.0000\"], provHexadecimalColor: \"ffffff\",\n\t\t\t\t\t\t\t\t   savedC: [0, \"0.0000\"], savedM: [0, \"0.0000\"], savedY: [0, \"0.0000\"], savedK: [0, \"0.0000\"]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.setState({provC: [0, \"0.0000\"], provM: [0, \"0.0000\"], provY: [0, \"0.0000\"], provK: [0, \"0.0000\"], provHexadecimalColor: \"ffffff\"});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (storeInSaved){\n\t\t\t\t\tthis.setState({provC: [C,strC], provM: [M,strM], provY: [Y,strY], provK: [K,strK],\n\t\t\t\t\t\t\t\t   savedC: [C,strC], savedM: [M,strM], savedY: [Y,strY], savedK: [K,strK],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.setState({provC: [C,strC], provM: [M,strM], provY: [Y,strY], provK: [K,strK]});\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t}\n\n\t// Función para convertir un número en formato CMYK en hexadecimal\n\t// Es básicamente aplicar los pasos inversos de la anterior\n\tcmykToHex(valuesObject, variableName=null, arrayToAssign=null){\n\t\tlet p = this.props;\n\n\t\tvar computedC = valuesObject.provC[0] / 100;\n\t\tvar computedM = valuesObject.provM[0] / 100;\n\t\tvar computedY = valuesObject.provY[0] / 100;\n\t\tvar computedK = valuesObject.provK[0] / 100;\n\n\t\tvar invariant = parseFloat(1 - computedK).toFixed(6);\n\n\t\tconst prov1 = parseFloat((computedC * invariant).toString().slice(0,6));\n\t\tconst prov2 = parseFloat((computedM * invariant).toString().slice(0,6));\n\t\tconst prov3 = parseFloat((computedY * invariant).toString().slice(0,6));\n\t\t\n\t\tcomputedK = parseFloat(computedK);\n\t\tcomputedC = parseFloat((prov1 + computedK).toString().slice(0,6));\t  \n\t\tcomputedM = parseFloat((prov2 + computedK).toString().slice(0,6));\n\t\tcomputedY = parseFloat((prov3 + computedK).toString().slice(0,6));\n\n\t\tvar b = parseInt((1 - computedY) * 255);\n\t\tvar g = parseInt((1 - computedM) * 255);\n\t\tvar r = parseInt((1 - computedC) * 255);\n\n\t\tif (!(isNaN(b)) && !(isNaN(g)) && !(isNaN(r))) {\n\n\t\t\tr = r.toString(16);\n\t\t\tg = g.toString(16);\n\t\t\tb = b.toString(16);\n\t\t\tvar hex = r+g+b;\n\n\t\t\tthis.setState({provHexadecimalColor: hex});\n\t\t\t\n\t\t\tif (variableName != null){\n\t\t\t\tlet object = {};\n\t\t\t\tobject[variableName] = arrayToAssign;\n\t\t\t\tthis.setState(object);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// Alerta: \"No es posible convertir este código a hexadecimal\"\n\t\t\tAlert.alert(p.allMessages[25], p.allMessages[4]);\n\t\t}\n\t}\n\n\t// Se activa cuando el usuario presiona el botón \"Cancelar\", estando en la selección de color\n\tcancelColorSelection = () => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tif (s.provHexadecimalColor != s.savedHexadecimalColor){\n\t\t\tthis.showCancelAlert();\n\t\t}\n\n\t\tthis.setState({\n\t\t\tprovHexadecimalColor: s.savedHexadecimalColor,\n\t\t\tprovC:                s.savedC,\n\t\t\tprovM:                s.savedM,\n\t\t\tprovY:                s.savedY,\n\t\t\tprovK:                s.savedK,\n\t\t});\n\n\t\tthis.hideModal_3();\n\t}\n\n\t// Se activa cuando el usuario le da al botón de \"Aceptar\", estando en la selección de color\n\tacceptColorSelection = async() => {\n\t\tlet p = this.props;\n\t\tlet s = this.state;\n\n\t\tif ((s.provHexadecimalColor != null) && (s.provHexadecimalColor.length == 6) \n\t\t\t&& (!isNaN(s.provC[0])) && (!isNaN(s.provM[0])) && (!isNaN(s.provY[0])) && (!isNaN(s.provK[0]))){\n\n\t\t\tconst payload = {\n\t\t\t\tsavedLithology:        s.savedLithology,\n\t\t\t\tsavedHexadecimalColor: s.provHexadecimalColor,\n\t\t\t\tsavedC:                s.provC,\n\t\t\t\tsavedM:                s.provM,\n\t\t\t\tsavedY:                s.provY,\n\t\t\t\tsavedK:                s.provK,\n\t\t\t\tsavedGrainDiameter:    s.savedGrainDiameter,\n\t\t\t\tsavedIsCarbonate:      s.savedIsCarbonate,\n\t\t\t}\n\t\t\tthis.setState(payload);\n\n\t\t\tawait this.saveInDatabase(payload);\n\t\t\tthis.hideModal_3();\n\t\t}\n\t\telse {\n\t\t\t// Alerta: \"No se puede salvar por valor inválido para el color\"\n\t\t\tAlert.alert(p.allMessages[25], p.allMessages[5]);\n\t\t}\n\t}\n\n\t//******************* Métodos para el modal 4, que es en el que se selecciona el diámetro del grano **********************/\n\n\t// Activa el modal \n\tshowModal_4 = () => {\n\t\tlet s = this.state;\n\t\tthis.setState({\n\t\t\tmodal_4_visible: true, \t\t\t\n\t\t})\n\t}\n\n\t// Oculta el modal\n\thideModal_4 = () => {\n\t\tthis.setState({\n\t\t\tmodal_4_visible: false, \t\t\n\t\t})\t\n\t}\n\n\t// Caso en que cambiamos si el estrato es un carbonato o no\n\tchangeIsCarbonate = () => {\n\t\tlet s = this.state;\n\t\tthis.setState({\n\t\t\tprovIsCarbonate:   !s.provIsCarbonate,\n\t\t\tprovGrainDiameter: 0,  // El diámetro del grano lo restauramos a cero\n\t\t});\n\t}\n\n\tcancelGrainDiameterSelection = () => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tif ((s.provGrainDiameter != s.savedGrainDiameter) || (s.provIsCarbonate != s.savedIsCarbonate)){\n\t\t\tthis.showCancelAlert();\n\t\t}\n\n\t\tthis.setState({\n\t\t\tprovGrainDiameter: s.savedGrainDiameter,\n\t\t\tprovIsCarbonate:   s.savedIsCarbonate,\n\t\t});\n\n\t\tthis.hideModal_4();\n\t}\n\n\tacceptGrainDiameterSelection = async() => {\n\t\tlet p = this.props;\n\t\tlet s = this.state;\n\n\t\tthis.setState({\n\t\t\tsavedIsCarbonate:   s.provIsCarbonate,\n\t\t\tsavedGrainDiameter: s.provGrainDiameter,\n\t\t})\n\n\t\tconst payload = {\n\t\t\tsavedLithology:        s.savedLithology,\n\t\t\tsavedHexadecimalColor: s.provHexadecimalColor,\n\t\t\tsavedC:                s.provC,\n\t\t\tsavedM:                s.provM,\n\t\t\tsavedY:                s.provY,\n\t\t\tsavedK:                s.provK,\n\t\t\tsavedGrainDiameter:    s.provGrainDiameter,\n\t\t\tsavedIsCarbonate:      s.provIsCarbonate,\n\t\t}\n\t\tawait this.saveInDatabase(payload);\n\t\tthis.hideModal_4();\n\t}\n\n\t// ************************************** Distintas vistas para el usuario **********************************************\n\n\t// Esto es lo que se muestra cuando el usuario entra en la ventana para litología desde la vista externa (ObjectScreen)\n\tModal_1_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {true}\n\t\t\t\t\tvisible        = {s.modal_1_visible}\n\t\t\t\t\tonRequestClose = {() => this.hideModal_1()}\n\t\t\t\t>\n\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Cabecera de la pantalla que dice el nombre del estrato que se está modificando*/}\n\t\t\t\t\t\t<View style = {genericStyles.modalHeader}>\n\t\t\t\t\t\t\t{/* Mensaje: \"Litología del estrato\"*/}\n\t\t\t\t\t\t\t<Text style = {{justifyContent: 'center', alignItems: 'center', fontSize: 17, fontWeight: 'bold'}}>\n\t\t\t\t\t\t\t\t{p.allMessages[6]}: {p.stratumName}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*Botones para ir a las otras vistas*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\n\t\t\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t\t\t<View style = {{flex: 1, alignItems: 'center', justifyContent: 'center', padding: 23}}> \n\t\t\t\t\t\t\t\t\t<ButtonWithIcon // Botón para cambiar la litología\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[7]} // Mensaje: \"Litología\"\n\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.showModal_2()}}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'playlist-add'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {{flex: 1, alignItems: 'center', justifyContent: 'center', padding: 23}}> \n\t\t\t\t\t\t\t\t\t<ButtonWithIcon /// Botón para cambiar el color de la litología\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[8]} // Mensaje: \"Color\"\n\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.showModal_3()}}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'color-lens'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {{flex: 1, alignItems: 'center', justifyContent: 'center', padding: 23}}>\n\t\t\t\t\t\t\t\t\t<ButtonWithIcon /// Botón para cambiar el diámetro del grano\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[9]} // Mensaje: \"Diámetro del grano\"\n\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.showModal_4()}}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'fiber-manual-record'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {{flex: 1, alignItems: 'center', justifyContent: 'center', padding: 23}}>\n\t\t\t\t\t\t\t\t\t<ButtonNoIcon /// Botón para cerrar esta vista\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[10]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\t\tonPress = {this.hideModal_1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Parte en la que se muestran los componentes ya salvados*/}\n\t\t\t\t\t\t<View style = {{flex: 0.15, flexDirection: 'column', justifyContent: 'space-around', alignItems: 'center', padding: 10}}>\n\n\t\t\t\t\t\t\t{/*Mensaje: \"Litología\"*/}\n\t\t\t\t\t\t\t<Text style = {{textAlign: 'center', justifyContent: 'center', alignItems: 'center', color: 'blue'}}>* {p.allMessages[7]}: \n\t\t\t\t\t\t\t\t<Text style = {{color: 'black'}}> {(s.savedLithology == null) ? null : p.allLithologyNames.find(element => element.key === s.savedLithology.key).name}</Text>\n\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t{/*Mensaje: \"Color\"*/}\n\t\t\t\t\t\t\t<Text style = {{textAlign: 'center', justifyContent: 'center', alignItems: 'center', color: 'blue'}}>* {p.allMessages[8]}: \n\t\t\t\t\t\t\t\t<Text style = {{color: 'black'}}> {(s.savedHexadecimalColor == null) ? null : s.savedHexadecimalColor}</Text>\t\n\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t{/*Mensaje: \"Diámetro del grano\"*/}\n\t\t\t\t\t\t\t<Text style = {{textAlign: 'center', justifyContent: 'center', alignItems: 'center', color: 'blue'}}>* {p.allMessages[9]}: \n\t\t\t\t\t\t\t\t<Text style = {{color: 'black'}}> {(s.savedIsCarbonate) ? p.allCarbonateGrainDiameterNames[s.savedGrainDiameter]: p.allNoCarbonateGrainDiameterNames[s.savedGrainDiameter]}</Text>\t\n\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Esto es lo que se muestra cuando el usuario entra en la ventana para seleccionar la litología \n\tModal_2_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {true}\n\t\t\t\t\tvisible        = {s.modal_2_visible}\n\t\t\t\t\tonRequestClose = {() => this.hideModal_2()}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Primer sector que incluye el filtro de búsqueda y la lista desplegada de litologías*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_without_ScrollView}>\n\n\t\t\t\t\t\t\t{/*Aquí el usuario puede filtrar la búsqueda de la litología*/}\n\t\t\t\t\t\t\t<SearchBar\n\t\t\t\t\t\t\t\tvalue                 = {s.filter_name}\n\t\t\t\t\t\t\t\tselectTextOnFocus     = {true}\n\t\t\t\t\t\t\t\tlightTheme            = {true}\n\t\t\t\t\t\t\t\ttextAlign             = {'center'} \n\t\t\t\t\t\t\t\tinputStyle            = {{color: 'black', backgroundColor: '#ffffff'}}\n\t\t\t\t\t\t\t\tplaceholder           = {p.allMessages[11]} // Mensaje: \"Buscar...\"\n\t\t\t\t\t\t\t\tplaceholderTextColor  = {'gray'}\n\t\t\t\t\t\t\t\tonChangeText          = {text => this.setFilter(text)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/*En esta parte deben mostrarse las litologías*/}\n\t\t\t\t\t\t\t<View style = {localStyles.lithologyPicker}>\n\t\t\t\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t\t\t\t{this.renderLithologies(s.filter_name)}\n\t\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Parte en la que se muestra el nombre de la litología seleccionada, lista para agregarla*/}\n\t\t\t\t\t\t<View style = {localStyles.smallColumn}>\n\n\t\t\t\t\t\t\t<View style = {{flex: 0.6}}>\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Litología seleccionada\"*/}\n\t\t\t\t\t\t\t\t<Text style = {{textAlign: 'center', flex: 0.7, justifyContent: 'center', alignItems: 'center', color: 'blue'}}>{p.allMessages[12]}:{\"\\n\"}\t\n\t\t\t\t\t\t\t\t\t<Text style = {{color: 'black'}}>{(s.provLithology == null) ? null : \n\t\t\t\t\t\t\t\t\t\tp.allLithologyNames.find(element => element.key === s.provLithology.key).name}\n\t\t\t\t\t\t\t\t\t</Text>\t\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{flex: 0.4}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[13]} /// Mensaje: \"Eliminar\"\n\t\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\t\tonPress = {this.deleteLithology}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Segundo sector, que es la vista de los botones para darle Aceptar o Cancelar*/}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[14]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\t\t\tonPress = {() => this.cancelLithologySelection()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[15]} // Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.acceptLithologySelection()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Esta función es utilizada varias veces por Modal_3_View para mostrar y solicitarle al usuario los valores de C, M, Y y K del color\n\tCMYK_Input_View(variable, variableRealName, variableNameForUser){\n\t\treturn(\n\t\t\t<View style = {{flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t<TextInput \n\t\t\t\t\tvalue             = {variable[1]}\n\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\ttextAlign         = {'center'}    \n\t\t\t\t\tstyle             = {localStyles.colorValueInput}\n\t\t\t\t\tmaxLength         = {6}\n\t\t\t\t\tonChangeText      = {text => this.on_CMYK_valueChange(variableRealName, text)}\n\t\t\t\t\tkeyboardType      = 'phone-pad'\n\t\t\t\t/>\n\t\t\t\t<Text style = {{flex: 0.5, paddingTop: 3, fontWeight: 'bold'}}>{variableNameForUser}</Text>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Esto es lo que se muestra cuando el usuario entra en la ventana para seleccionar el color\n\tModal_3_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {true}\n\t\t\t\t\tvisible        = {s.modal_3_visible}\n\t\t\t\t\tonRequestClose = {() => this.hideModal_3()}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Primer sector que incluye todos los campos referentes al color*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Valor hexadecimal*/}\n\t\t\t\t\t\t\t\t<Text style = {genericStyles.subtitle}>{p.allMessages[16]}</Text>\n\n\t\t\t\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}> \n\n\t\t\t\t\t\t\t\t\t{/*//Esto es sólo para ajustar el espacio*/}\n\t\t\t\t\t\t\t\t\t<View style = {{flex: 0.4}}/>\n\n\t\t\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\t\t\tdefaultValue      = {s.provHexadecimalColor}\n\t\t\t\t\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\t\t\t\t\ttextAlign         = {'center'} \n\t\t\t\t\t\t\t\t\t\tautoCapitalize    = \"none\"\n\t\t\t\t\t\t\t\t\t\tstyle             = {localStyles.colorValueInput}\n\t\t\t\t\t\t\t\t\t\tmaxLength         = {6} \n\t\t\t\t\t\t\t\t\t\tonChangeText      = {text => this.onChangeHexadecimalColor(text)}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t{/*//Esto es sólo para ajustar el espacio*/}\n\t\t\t\t\t\t\t\t\t<View style = {{flex: 0.4}}/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t{/*//Mensaje: \"Código CMYK{\"\\n\"}Se indican porcentajes\"*/}\n\t\t\t\t\t\t\t\t<Text style = {genericStyles.subtitle}>\n\t\t\t\t\t\t\t\t\t{p.allMessages[17]}{\"\\n\"}{p.allMessages[18]} (%)\n\t\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t\t{/*//Aquí se ingresan los valores C y M del color*/}\n\t\t\t\t\t\t\t\t<View style = {{flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center', paddingBottom: 5}}>\n\t\t\t\t\t\t\t\t\t{this.CMYK_Input_View(s.provC, 'provC', 'C')}\n\t\t\t\t\t\t\t\t\t{this.CMYK_Input_View(s.provM, 'provM', 'M')}\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t{/*//Aquí se ingresan los valores Y y K del color*/}\n\t\t\t\t\t\t\t\t<View style = {{flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center', paddingTop: 5}}>\n\t\t\t\t\t\t\t\t\t{this.CMYK_Input_View(s.provY, 'provY', 'Y')}\n\t\t\t\t\t\t\t\t\t{this.CMYK_Input_View(s.provK, 'provK', 'K')}\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Segundo sector que incluye el triángulo donde se selecciona el color*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_without_ScrollView}>\n\n\t\t\t\t\t\t\t{/*Mensaje: \"Paleta de colores\"*/}\n\t\t\t\t\t\t\t<Text style = {genericStyles.subtitle}>{p.allMessages[19]}</Text>\n\n\t\t\t\t\t\t\t<View style = {localStyles.colorPicker}>\n\t\t\t\t\t\t\t\t<TriangleColorPicker\n\t\t\t\t\t\t\t\t\tcolor         = {s.provHexadecimalColor}\n\t\t\t\t\t\t\t\t\tonColorChange = {this.onColorChangeByTriangle}\n\t\t\t\t\t\t\t\t\tstyle         = {{flex: 1}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Tercer sector, que es la vista de los botones para darle Aceptar o Cancelar*/}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[14]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\t\t\tonPress = {() => this.cancelColorSelection()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[15]} // Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.acceptColorSelection()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Esto es lo que se muestra cuando el usuario entra en la ventana para seleccionar el diámetro del grano\n\tModal_4_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {true}\n\t\t\t\t\tvisible        = {s.modal_4_visible}\n\t\t\t\t\tonRequestClose = {() => this.hideModal_4()}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Primer sector que incluye todos los campos referentes al color*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t\t\t<View style = {{paddingTop: 50, paddingBottom: 30, flexDirection: 'row', alignItems: 'center', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t<CheckBox // Cuadro que determina si es un carbonato o no\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[20]} // Mensaje: \"Es un carbonato\"\n\t\t\t\t\t\t\t\t\t\tchecked = {s.provIsCarbonate}\n\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.changeIsCarbonate()}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t{s.provIsCarbonate && \n\t\t\t\t\t\t\t\t\t<View style = {{flexDirection: 'row', alignItems: 'center', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t\t< /// Aquí el usuario selecciona el diámetro en caso de que estemos ante un carbonato\n\t\t\t\t\t\t\t\t\t\tPicker\n\t\t\t\t\t\t\t\t\t\t\tselectedValue = {s.provGrainDiameter}\n\t\t\t\t\t\t\t\t\t\t\tstyle         = {{height: 130, width: 200}}\n\t\t\t\t\t\t\t\t\t\t\tonValueChange = {(itemValue, itemIndex) => this.setState({provGrainDiameter: itemValue})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[0]} value = {0}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[1]} value = {1}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[2]} value = {2}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[3]} value = {3}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[4]} value = {4}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[5]} value = {5}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allCarbonateGrainDiameterNames[6]} value = {6}/>\n\n\t\t\t\t\t\t\t\t\t\t</Picker>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{!s.provIsCarbonate && \n\t\t\t\t\t\t\t\t\t<View style = {{flexDirection: 'row', alignItems: 'center', justifyContent: 'center'}}>\n\t\t\t\t\t\t\t\t\t\t< // Aquí el usuario selecciona el diámetro en caso de que estemos ante un carbonato\n\t\t\t\t\t\t\t\t\t\tPicker\n\t\t\t\t\t\t\t\t\t\t\tselectedValue = {s.provGrainDiameter}\n\t\t\t\t\t\t\t\t\t\t\tstyle         = {{height: 130, width: 200}}\n\t\t\t\t\t\t\t\t\t\t\tonValueChange = {(itemValue, itemIndex) => this.setState({provGrainDiameter: itemValue})}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[0]} value = {0}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[1]} value = {1}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[2]} value = {2}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[3]} value = {3}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[4]} value = {4}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[5]} value = {5}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[6]} value = {6}/>\n\t\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {\"          \" + p.allNoCarbonateGrainDiameterNames[7]} value = {7}/>\n\n\t\t\t\t\t\t\t\t\t\t</Picker>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\n\t\t\t\t\t\t{/*//Tercer sector, que es la vista de los botones para darle Aceptar o Cancelar*/}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[14]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\t\t\tonPress = {() => this.cancelGrainDiameterSelection()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[15]} // Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\t\t\tonPress = {() => this.acceptGrainDiameterSelection()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Ventana principal\n\trender() {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn (\n\t\t\t<View>\n\n\t\t\t\t{/*Modales*/}\n\t\t\t\t{this.Modal_1_View()} \n\t\t\t\t{this.Modal_2_View()}\n\t\t\t\t{this.Modal_3_View()}\n\t\t\t\t{this.Modal_4_View()}\n\n\t\t\t\t{/*Ésta es la parte que ve el usuario cuando está en la ventana externa*/}\n\n\t\t\t\t{ // Caso en que no se ha seleccionado ninguna litología y se está haciendo una captura del afloramiento\n\t\t\t\t!s.savedLithology && p.takingShot &&\n\t\t\t\t\t<View style = {{width: D.LITHOLOGY_PICKER_WIDTH, height: p.height, borderWidth: 1, borderColor: 'black'}}/>\n\t\t\t\t}\n\n\t\t\t\t{ // Caso en que no se ha seleccionado ninguna litología, la altura es menor que 18 y no se está haciendo captura del afloramiento\n\t\t\t\t!s.savedLithology && (p.height < 18) && (!p.takingShot) &&\n\t\t\t\t\t<TouchableHighlight onPress={()=>{this.showModal_1(true)}}  style={{width: D.LITHOLOGY_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {localStyles.showInstructionsObjectScreen}/>\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t}\n\n\t\t\t\t{ /// Caso en que no se ha seleccionado ninguna litología, la altura mayor o igual que 18 y no se está haciendo captura del afloramiento\n\t\t\t\t!s.savedLithology && (p.height >= 18) && (!p.takingShot) &&\n\t\t\t\t\t<TouchableHighlight onPress={()=>{this.showModal_1(true)}}  style={{width: D.LITHOLOGY_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {localStyles.showInstructionsObjectScreen}>\n\t\t\t\t\t\t\t{/*Mensaje: \"(Toque para cambiar la litología)\"*/}\n\t\t\t\t\t\t\t<Text>{p.allMessages[21]}</Text>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t}\n\n\t\t\t\t{ /// Caso en que ya se seleccionó una litología\n\t\t\t\ts.savedLithology && \n\t\t\t\t\t<TouchableHighlight onPress={()=>{this.showModal_1(true)}}  style={{width: D.LITHOLOGY_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {{ \n\t\t\t\t\t\t\tflex:            1, \n\t\t\t\t\t\t\tflexDirection:   'row', \n\t\t\t\t\t\t\tjustifyContent:  'flex-start', \n\t\t\t\t\t\t\talignItems:      'center',  \n\t\t\t\t\t\t\tbackgroundColor: \"#\"+s.savedHexadecimalColor,\n\t\t\t\t\t\t\twidth:           (s.savedIsCarbonate) ? (80 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM) : (50 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM),     \n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\tsource       = {s.savedLithology.uri} \n\t\t\t\t\t\t\t\tresizeMethod = \"auto\"\n\t\t\t\t\t\t\t\tstyle        = {{\n\t\t\t\t\t\t\t\t\twidth:       (s.savedIsCarbonate) ? (80 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM) : (50 + s.savedGrainDiameter * D.LITHOLOGY_ADDING_TERM),\n\t\t\t\t\t\t\t\t\theight:      p.height, \n\t\t\t\t\t\t\t\t\topacity:     0.5, \n\t\t\t\t\t\t\t\t\tborderColor: 'black', \n\t\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t} \n\t\t\t</View>\n\t\t);\n\t}\n}\n\n/// Constante para darle formato a los diversos componentes de esta pantalla\nconst localStyles = StyleSheet.create({\n\n\t// Empleado para mostrar en la ventana \"ObjectScreen\" el texto que indica que se debe tocar allí para cambiar la litología\n\tshowInstructionsObjectScreen: {\n\t\tflex:           1,\n\t\tflexDirection:  'column',\n\t\tjustifyContent: 'center',\n\t\talignItems:     'center',\n\t\tborderColor:    'black',\n\t\tborderWidth:    1,\n\t},\n\n\t// Formato para mostrar la lista completa de litologías a seleccionar\n\tlithologyPicker: {\n\t\tflex:           8,\n\t\tflexDirection:  'column',\n\t\tpadding:        10\n\t},\n\n\t// Para darle formato al triángulo de selección de color\n\tcolorPicker: {\n\t\tflex:          10,\n\t\tflexDirection: 'column',\n\t\tpaddingTop:    1,\n\t},\n\n\t// Es para el formato de los TextInput, pero utilizado sólo en los campos relacionados al color de la litología\n\tcolorValueInput: {\n\t\theight:      28,\n\t\tborderWidth: 1,\n\t\tflex:        1,\n\t\tpadding:     5, // Esto es lo que hace que el texto no salga pegado al borde\n\t\tborderColor: 'black',\n\t\twidth:       90,\n\t},\n\n\t// Usado cuando se quiere mostrar la litología seleccionada junto al botón de eliminarla\n\tsmallColumn: {\n\t\tflex:           0.2,\n\t\tflexDirection:  'column',\n\t\tjustifyContent: 'space-around',\n\t\talignItems:     'center',\n\t\tpadding:        10,\n\t},\n\n});\n\n// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages:       LithologyPicker_Texts[state.appPreferencesReducer.language], \n\t\tuser_id:           state.userReducer.user_id,\n\t\tlocalDB:           state.userReducer.localDB,\n\t\tsortedLithologies: state.libraryReducer.sortedLithologies,\n\t\tenteringEnabled:   state.popUpReducer.stratumComponentEnabled,\n\n\t\t// Aquí almacenamos los nombres de las litologías que se le mostrarán al usuario\n\t\tallLithologyNames: LITHOLOGIES_NAMES[state.appPreferencesReducer.language],\n\n\t\t// Aquí almacenamos los nombres de los tamaños de grano para carbonatos\n\t\tallCarbonateGrainDiameterNames: CARBONATES_GRAIN_DIAMETERS[state.appPreferencesReducer.language],\n\n\t\t// Aquí almacenamos los nombres de los tamaños de grano para no carbonatos\n\t\tallNoCarbonateGrainDiameterNames: NO_CARBONATES_GRAIN_DIAMETERS[state.appPreferencesReducer.language],\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchEnteringPermission: (bool) => dispatch(changeStratumComponentPermission(bool)),\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LithologyPicker);"]},"metadata":{},"sourceType":"module"}