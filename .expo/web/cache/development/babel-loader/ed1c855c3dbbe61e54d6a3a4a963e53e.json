{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\modifiedLibraries\\\\react-native-chart-kit\\\\src\\\\line-chart\\\\legend-item.js\";\nimport React from \"react\";\nimport { Rect, Text } from \"react-native-svg\";\nimport PropTypes from \"prop-types\";\nvar CIRCLE_WIDTH = 16;\nvar PADDING_LEFT = 4;\nvar CHARACTER_WIDTH = 6;\nexport var LegendItem = function LegendItem(props) {\n  var baseLegendItemX = props.baseLegendItemX,\n      index = props.index;\n  var centerAlignedCircle = props.legendOffset / 2 - CIRCLE_WIDTH / 2;\n  var centerAlignedText = props.legendOffset * 0.65;\n  var textLengthOffset = props.legendText.length * CHARACTER_WIDTH / 2;\n  var legendItemNumber = index + 1;\n  return React.createElement(React.Fragment, null, React.createElement(Rect, {\n    width: CIRCLE_WIDTH,\n    height: CIRCLE_WIDTH,\n    fill: props.iconColor,\n    rx: 8,\n    ry: 8,\n    x: baseLegendItemX * legendItemNumber - (CIRCLE_WIDTH + textLengthOffset),\n    y: centerAlignedCircle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    }\n  }), React.createElement(Text, _extends({\n    x: baseLegendItemX * legendItemNumber + (PADDING_LEFT - textLengthOffset),\n    y: centerAlignedText\n  }, props.labelProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    }\n  }), props.legendText));\n};\nLegendItem.propTypes = {\n  index: PropTypes.number,\n  iconColor: PropTypes.string,\n  baseLegendItemX: PropTypes.number,\n  legendText: PropTypes.string,\n  legendOffset: PropTypes.number\n};","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/modifiedLibraries/react-native-chart-kit/src/line-chart/legend-item.js"],"names":["React","Rect","Text","PropTypes","CIRCLE_WIDTH","PADDING_LEFT","CHARACTER_WIDTH","LegendItem","props","baseLegendItemX","index","centerAlignedCircle","legendOffset","centerAlignedText","textLengthOffset","legendText","length","legendItemNumber","iconColor","labelProps","propTypes","number","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,YAAY,GAAG,CAArB;AACA,IAAMC,eAAe,GAAG,CAAxB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,MAC1BC,eAD0B,GACCD,KADD,CAC1BC,eAD0B;AAAA,MACTC,KADS,GACCF,KADD,CACTE,KADS;AAIlC,MAAMC,mBAAmB,GAAGH,KAAK,CAACI,YAAN,GAAqB,CAArB,GAAyBR,YAAY,GAAG,CAApE;AAEA,MAAMS,iBAAiB,GAAGL,KAAK,CAACI,YAAN,GAAqB,IAA/C;AAEA,MAAME,gBAAgB,GAAIN,KAAK,CAACO,UAAN,CAAiBC,MAAjB,GAA0BV,eAA3B,GAA8C,CAAvE;AACA,MAAMW,gBAAgB,GAAGP,KAAK,GAAG,CAAjC;AAEA,SACC,0CACC,oBAAC,IAAD;AACC,IAAA,KAAK,EAAKN,YADX;AAEC,IAAA,MAAM,EAAIA,YAFX;AAGC,IAAA,IAAI,EAAMI,KAAK,CAACU,SAHjB;AAIC,IAAA,EAAE,EAAQ,CAJX;AAKC,IAAA,EAAE,EAAQ,CALX;AAMC,IAAA,CAAC,EAAST,eAAe,GAAGQ,gBAAlB,IAAsCb,YAAY,GAAGU,gBAArD,CANX;AAOC,IAAA,CAAC,EAASH,mBAPX;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAUC,oBAAC,IAAD;AACC,IAAA,CAAC,EAAIF,eAAe,GAAGQ,gBAAlB,IAAsCZ,YAAY,GAAGS,gBAArD,CADN;AAEC,IAAA,CAAC,EAAID;AAFN,KAGKL,KAAK,CAACW,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA,MAKCX,KAAK,CAACO,UALP,CAVD,CADD;AAoBA,CA/BM;AAiCPR,UAAU,CAACa,SAAX,GAAuB;AACtBV,EAAAA,KAAK,EAAEP,SAAS,CAACkB,MADK;AAEtBH,EAAAA,SAAS,EAAEf,SAAS,CAACmB,MAFC;AAGtBb,EAAAA,eAAe,EAAEN,SAAS,CAACkB,MAHL;AAItBN,EAAAA,UAAU,EAAEZ,SAAS,CAACmB,MAJA;AAKtBV,EAAAA,YAAY,EAAET,SAAS,CAACkB;AALF,CAAvB","sourcesContent":["import React from \"react\";\nimport { Rect, Text } from \"react-native-svg\";\nimport PropTypes from \"prop-types\";\n\nconst CIRCLE_WIDTH = 16;\nconst PADDING_LEFT = 4;\nconst CHARACTER_WIDTH = 6;\n\nexport const LegendItem = props => {\n\tconst { baseLegendItemX, index } = props;\n\t/* half the height of the legend Rect, minus half the height of the circle to align the\n\t circle from its center, rather than its top. */\n\tconst centerAlignedCircle = props.legendOffset / 2 - CIRCLE_WIDTH / 2;\n\t// 65% of the legend container height centers the text in relation to the circles\n\tconst centerAlignedText = props.legendOffset * 0.65;\n\t// to center the legendItem on the baseLegendItemX\n\tconst textLengthOffset = (props.legendText.length * CHARACTER_WIDTH) / 2;\n\tconst legendItemNumber = index + 1;\n\n\treturn (\n\t\t<>\n\t\t\t<Rect\n\t\t\t\twidth  = {CIRCLE_WIDTH}\n\t\t\t\theight = {CIRCLE_WIDTH}\n\t\t\t\tfill   = {props.iconColor}\n\t\t\t\trx     = {8}\n\t\t\t\try     = {8}\n\t\t\t\tx      = {baseLegendItemX * legendItemNumber - (CIRCLE_WIDTH + textLengthOffset)}\n\t\t\t\ty      = {centerAlignedCircle}\n\t\t\t/>\n\t\t\t<Text\n\t\t\t\tx = {baseLegendItemX * legendItemNumber + (PADDING_LEFT - textLengthOffset)}\n\t\t\t\ty = {centerAlignedText}\n\t\t\t\t{...props.labelProps}\n\t\t\t>\n\t\t\t{props.legendText}\n\t\t\t</Text>\n\t\t</>\n\t);\n};\n\nLegendItem.propTypes = {\n\tindex: PropTypes.number,\n\ticonColor: PropTypes.string,\n\tbaseLegendItemX: PropTypes.number,\n\tlegendText: PropTypes.string,\n\tlegendOffset: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}