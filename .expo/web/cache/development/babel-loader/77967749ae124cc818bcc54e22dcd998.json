{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\components\\\\NoteWriter.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { connect } from 'react-redux';\nimport * as Database from \"../genericFunctions/databaseFunctions\";\n\nvar NoteWriter = function (_React$Component) {\n  _inherits(NoteWriter, _React$Component);\n\n  function NoteWriter(props) {\n    var _this;\n\n    _classCallCheck(this, NoteWriter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteWriter).call(this, props));\n    _this.state = {\n      writtenText: _this.props.data.writtenText == null ? null : _this.props.data.writtenText,\n      componentKey: _this.props.stratum_key + '_note',\n      heightLines: _this.props.data.heightLines == null ? 0 : _this.props.data.heightLines\n    };\n    return _this;\n  }\n\n  _createClass(NoteWriter, [{\n    key: \"acceptText\",\n    value: function acceptText(newText) {\n      this.setState({\n        writtenText: newText\n      });\n      var payload = {\n        writtenText: newText,\n        heightLines: this.state.heightLines\n      };\n      Database.saveStratumModule(this.props.user_id, this.props.Object_id, this.props.index, this.state.componentKey, payload, this.props.isCore, this.props.localDB);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var p = this.props;\n\n      if (p.takingShot && this.state.heightLines > p.height + 6) {\n        return React.createElement(View, {\n          style: {\n            borderColor: 'black',\n            borderWidth: 1,\n            height: p.height,\n            width: p.width\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, this.props.height >= 18 && React.createElement(TextInput, {\n        style: {\n          height: p.height,\n          width: p.width,\n          borderColor: 'black',\n          borderWidth: 1,\n          padding: 5,\n          textAlign: 'center'\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.acceptText(text);\n        },\n        multiline: true,\n        selectTextOnFocus: false,\n        defaultValue: this.state.writtenText,\n        onContentSizeChange: function onContentSizeChange(event) {\n          _this2.setState({\n            heightLines: event.nativeEvent.contentSize.height\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      }), this.props.height < 18 && React.createElement(View, {\n        style: {\n          borderColor: 'black',\n          borderWidth: 1,\n          height: p.height,\n          width: p.width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }));\n    }\n  }]);\n\n  return NoteWriter;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB\n  };\n};\n\nexport default connect(mapStateToProps)(NoteWriter);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/components/NoteWriter.js"],"names":["React","connect","Database","NoteWriter","props","state","writtenText","data","componentKey","stratum_key","heightLines","newText","setState","payload","saveStratumModule","user_id","Object_id","index","isCore","localDB","p","takingShot","height","borderColor","borderWidth","width","padding","textAlign","text","acceptText","event","nativeEvent","contentSize","Component","mapStateToProps","userReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, Button, TextInput, View,\n\t\tTouchableHighlight, StyleSheet, Modal } from 'react-native';\n\nimport { connect } from 'react-redux'\n\nimport * as Database from '../genericFunctions/databaseFunctions'\n\n\nclass NoteWriter extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\twrittenText: (this.props.data.writtenText == null) ? null : this.props.data.writtenText,\n\t\t\tcomponentKey: this.props.stratum_key + '_note', // Para que se sepa qué parte del estrato se va a salvar\n\n\t\t\t// Esta variable no se refiere a la altura de la vista, sino a la altura que ocupan las líneas de texto       \n\t\t\theightLines: (this.props.data.heightLines == null) ? 0 : this.props.data.heightLines,\n\t\t}\n\t}\n\n\t// Usado para cambiar el texto almacenado\n\tacceptText (newText) {\n\t\tthis.setState({writtenText: newText});\n\t\tvar payload = {\n\t\t\twrittenText: newText,\n\t\t\theightLines: this.state.heightLines,\n\t\t}\n\t\tDatabase.saveStratumModule(this.props.user_id, this.props.Object_id, this.props.index, this.state.componentKey, payload, this.props.isCore, this.props.localDB);\n  \t}\n\n  \t// Lo que se le mostrará al usuario\n\trender() {\n\t\tlet p = this.props;\n\n\t\t// No queremos que se muestre texto al hacer una captura si éste no va a salir completo\n\t\tif (p.takingShot && (this.state.heightLines > p.height+6)){\n\t\t\treturn (\n\t\t\t\t<View style = {{borderColor: 'black', borderWidth: 1, height: p.height, width: p.width}}/>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{(this.props.height) >= 18 &&\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\theight:         p.height, \n\t\t\t\t\t\t\twidth:          p.width, \n\t\t\t\t\t\t\tborderColor:    'black', \n\t\t\t\t\t\t\tborderWidth:    1, \n\t\t\t\t\t\t\tpadding:        5,\n\t\t\t\t\t\t\ttextAlign:      'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonChangeText        = {text => this.acceptText(text)}\n\t\t\t\t\t\tmultiline           = {true}\n\t\t\t\t\t\tselectTextOnFocus   = {false}\n\t\t\t\t\t\tdefaultValue        = {this.state.writtenText}\n\t\t\t\t\t\tonContentSizeChange = {(event) => {\n\t\t\t\t\t\t\tthis.setState({heightLines: event.nativeEvent.contentSize.height})\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t{(this.props.height) < 18 &&\n\t\t\t\t\t<View style = {{borderColor: 'black', borderWidth: 1, height: p.height, width: p.width}}/>\n\t\t\t\t}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\n/// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuser_id: state.userReducer.user_id,\n\t\tlocalDB: state.userReducer.localDB,\n\t}\n};\n\nexport default connect(mapStateToProps)(NoteWriter);\n"]},"metadata":{},"sourceType":"module"}