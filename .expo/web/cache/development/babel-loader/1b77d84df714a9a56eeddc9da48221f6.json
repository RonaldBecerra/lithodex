{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\objectsOfStudy\\\\ObjectStratumForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Button as ButtonWithIcon } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { changeLoadView, changeStratumComponentPermission } from \"../../redux/actions/popUpActions\";\nimport { ObjectStratumForm_Texts } from \"../../languages/screens/objectsOfStudy/ObjectStratumForm\";\nimport * as Log from \"../../genericFunctions/logFunctions\";\nimport * as Database from \"../../genericFunctions/databaseFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR } from \"../../constants/genericStyles\";\nimport { OUTCROPS_DOCUMENT_ID, CORES_DOCUMENT_ID } from \"../../constants/appConstants\";\nimport * as D from \"../../constants/Dimensions\";\nimport * as auxiliarFunctions from \"../../genericFunctions/otherFunctions\";\nimport _ from \"lodash\";\n\nvar ObjectStratumForm = function (_Component) {\n  _inherits(ObjectStratumForm, _Component);\n\n  function ObjectStratumForm(props) {\n    var _this;\n\n    _classCallCheck(this, ObjectStratumForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ObjectStratumForm).call(this, props));\n\n    _this.acceptSettings = function () {\n      if (_this.state.saveStratumEnabled) {\n        if (_this.state.stratumName == null) {\n          Alert.alert(_this.props.allMessages[1], _this.props.allMessages[3]);\n        } else if (_this.state.thickness[0][0] == null) {\n          Alert.alert(_this.props.allMessages[1], _this.props.allMessages[4]);\n        } else if (_this.props.navigation.getParam('index') != null) {\n          _this.editLayer();\n        } else {\n          _this.addLayer();\n        }\n      }\n    };\n\n    _this.refuseSettings = function () {\n      if (_this.props.navigation.getParam('index') != null) {\n        Alert.alert(_this.props.allMessages[1], _this.props.allMessages[2]);\n      }\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.addLayer = function () {\n      _this.setState({\n        saveStratumEnabled: false\n      }, function _callee() {\n        var numberOfLayers, thickness, baseHeight, factor, upperLimitMeters, upperLimitFeet, previousElement, lowerLimitMeters, lowerLimitFeet, shownHeight, objectToAdd;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                numberOfLayers = _this.state.layerList.length;\n                thickness = _this.state.thickness;\n                baseHeight = _this.state.baseHeight;\n                factor = _this.state.factor;\n\n                if (_this.state.isCore) {\n                  if (numberOfLayers == 0) {\n                    upperLimitMeters = baseHeight[0];\n                    upperLimitFeet = baseHeight[1];\n                  } else {\n                    previousElement = _this.state.layerList[numberOfLayers - 1];\n                    upperLimitMeters = previousElement.lowerLimit[0];\n                    upperLimitFeet = previousElement.lowerLimit[1];\n                  }\n\n                  lowerLimitMeters = auxiliarFunctions.repairNumber(upperLimitMeters[0] - thickness[0][0], 15);\n                  lowerLimitFeet = auxiliarFunctions.repairNumber(upperLimitFeet[0] - thickness[1][0], 15);\n                } else {\n                  if (numberOfLayers == 0) {\n                    lowerLimitMeters = baseHeight[0];\n                    lowerLimitFeet = baseHeight[1];\n                  } else {\n                    previousElement = _this.state.layerList[0];\n                    lowerLimitMeters = previousElement.upperLimit[0];\n                    lowerLimitFeet = previousElement.upperLimit[1];\n                  }\n\n                  upperLimitMeters = auxiliarFunctions.repairNumber(lowerLimitMeters[0] + thickness[0][0], 15);\n                  upperLimitFeet = auxiliarFunctions.repairNumber(lowerLimitFeet[0] + thickness[1][0], 15);\n                }\n\n                shownHeight = [factor * thickness[0][0], factor * thickness[1][0]];\n                objectToAdd = {\n                  shownHeight: shownHeight,\n                  thickness: thickness,\n                  lowerLimit: [lowerLimitMeters, lowerLimitFeet],\n                  upperLimit: [upperLimitMeters, upperLimitFeet],\n                  key: _this.state.key,\n                  name: _this.state.stratumName,\n                  lithology_data: {},\n                  structure_data: {},\n                  fossil_data: {},\n                  image_data: {},\n                  note_data: {}\n                };\n\n                if (!_this.state.isCore) {\n                  _context.next = 12;\n                  break;\n                }\n\n                _context.next = 10;\n                return _regeneratorRuntime.awrap(_this.state.layerList.push(objectToAdd));\n\n              case 10:\n                _context.next = 14;\n                break;\n\n              case 12:\n                _context.next = 14;\n                return _regeneratorRuntime.awrap(_this.state.layerList.unshift(objectToAdd));\n\n              case 14:\n                _context.prev = 14;\n                _context.next = 17;\n                return _regeneratorRuntime.awrap(Database.saveLayerList(_this.props.user_id, _this.state._id, _this.state.layerList, _this.state.isCore, _this.props.localDB, _this.state.key, 0));\n\n              case 17:\n                _this.props.dispatchChangeLoadView(true);\n\n                _this.props.navigation.goBack();\n\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](14);\n                console.error(_context.t0.toString());\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[14, 21]]);\n      });\n    };\n\n    _this.editLayer = function () {\n      _this.setState({\n        saveStratumEnabled: false\n      }, function _callee2() {\n        var s, currentLayer, elem;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                s = _this.state;\n                currentLayer = s.layerList[s.index];\n                currentLayer.name = s.stratumName;\n\n                if (s.previousthickness[0][0] != s.thickness[0][0]) {\n                  currentLayer.thickness = s.thickness;\n                  currentLayer.shownHeight = [s.factor * s.thickness[0][0], s.factor * s.thickness[1][0]];\n\n                  if (s.isCore) {\n                    currentLayer.lowerLimit[0] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[0][0] - s.thickness[0][0], 15);\n                    currentLayer.lowerLimit[1] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[1][0] - s.thickness[1][0], 15);\n\n                    for (i = s.index + 1; i < s.layerList.length; i++) {\n                      elem = s.layerList[i];\n                      elem.upperLimit = _.cloneDeep(s.layerList[i - 1].lowerLimit);\n                      elem.lowerLimit[0] = auxiliarFunctions.repairNumber(elem.upperLimit[0][0] - elem.thickness[0][0], 15);\n                      elem.lowerLimit[1] = auxiliarFunctions.repairNumber(elem.upperLimit[1][0] - elem.thickness[1][0], 15);\n                    }\n                  } else {\n                    currentLayer.upperLimit[0] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[0][0] + s.thickness[0][0], 15);\n                    currentLayer.upperLimit[1] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[1][0] + s.thickness[1][0], 15);\n\n                    for (i = _this.state.index - 1; i >= 0; i--) {\n                      elem = s.layerList[i];\n                      elem.lowerLimit = _.cloneDeep(s.layerList[i + 1].upperLimit);\n                      elem.upperLimit[0] = auxiliarFunctions.repairNumber(elem.lowerLimit[0][0] + elem.thickness[0][0], 15);\n                      elem.upperLimit[1] = auxiliarFunctions.repairNumber(elem.lowerLimit[1][0] + elem.thickness[1][0], 15);\n                    }\n                  }\n                }\n\n                _context2.prev = 4;\n                _context2.next = 7;\n                return _regeneratorRuntime.awrap(Database.saveLayerList(_this.props.user_id, s._id, s.layerList, true, _this.props.localDB, _this.state.key, 1));\n\n              case 7:\n                _this.props.dispatchChangeLoadView(true);\n\n                _this.props.navigation.goBack();\n\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.error(_context2.t0.toString());\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[4, 11]]);\n      });\n    };\n\n    _this.onChangeName = function (text) {\n      if (text == \" \" || text == \"\") {\n        _this.setState({\n          stratumName: null\n        });\n      } else {\n        _this.setState({\n          stratumName: text\n        });\n      }\n    };\n\n    _this.onChangeThickness = function _callee3(text, unit) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!auxiliarFunctions.isValidPositiveDecimalNumber(text)) {\n                _context3.next = 4;\n                break;\n              }\n\n              if (unit == 0) {\n                _this.setState({\n                  thickness: [[parseFloat(text), text], auxiliarFunctions.metersToFeet(text)]\n                });\n              } else {\n                _this.setState({\n                  thickness: [auxiliarFunctions.feetToMeters(text), [parseFloat(text), text]]\n                });\n              }\n\n              _context3.next = 8;\n              break;\n\n            case 4:\n              if (text == \" \" || text == \"\") {} else {\n                Alert.alert(_this.props.allMessages[1], _this.props.allMessages[5]);\n              }\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(_this.setState({\n                thickness: [[0, \"0\"], [0, \"0\"]]\n              }));\n\n            case 7:\n              _this.setState({\n                thickness: [[null, null], [null, null]]\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.deleteStratum = function () {\n      var p = _this.props;\n\n      var auxiliar = function auxiliar(p) {\n        var s, array;\n        return _regeneratorRuntime.async(function auxiliar$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                s = _this.state;\n                _context4.next = 3;\n                return _regeneratorRuntime.awrap(_this.updateStratumLimits_whenDelete());\n\n              case 3:\n                array = _context4.sent;\n                _context4.next = 6;\n                return _regeneratorRuntime.awrap(Database.saveLayerList(p.user_id, s._id, array, s.isCore, p.localDB, s.key, 2));\n\n              case 6:\n                _this.props.dispatchChangeLoadView(true);\n\n                Alert.alert(p.allMessages[1], p.allMessages[6]);\n\n                _this.props.navigation.goBack();\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        });\n      };\n\n      Alert.alert(p.allMessages[1], p.allMessages[7], [{\n        text: p.allMessages[8],\n        onPress: function onPress() {\n          return auxiliar(p);\n        }\n      }, {\n        text: p.allMessages[9]\n      }]);\n    };\n\n    _this.keyboardDidShow = _this.keyboardDidShow.bind(_assertThisInitialized(_this));\n    _this.keyboardDidHide = _this.keyboardDidHide.bind(_assertThisInitialized(_this));\n\n    var commonProperties = _objectSpread({}, _this.props.navigation.state.params, {\n      factor: D.SIZE_OF_UNIT / _this.props.navigation.getParam('scale')[0],\n      keyboardAvailable: false,\n      loading: false,\n      saveStratumEnabled: true\n    });\n\n    if (_this.props.navigation.getParam('index') != null) {\n      _this.state = _objectSpread({}, commonProperties, {\n        previousthickness: _this.props.navigation.getParam('thickness')\n      });\n    } else {\n      _this.state = _objectSpread({}, commonProperties, {\n        key: auxiliarFunctions.generate_key(),\n        thickness: [[null, null], [null, null]],\n        stratumName: null\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(ObjectStratumForm, [{\n    key: \"loadLayerList\",\n    value: function loadLayerList() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function loadLayerList$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(this.props.localDB.get(this.state.isCore ? CORES_DOCUMENT_ID : OUTCROPS_DOCUMENT_ID).then(function (document) {\n                _this2.setState({\n                  layerList: document.objects[_this2.state._id].layerList,\n                  loading: false\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n\n      if (this.props.navigation.getParam('index')) {\n        Log.log_action(13, this.props.user_id, this.state.isCore, this.state._id, this.state.key);\n      } else {\n        Log.log_action(11, this.props.user_id, this.state.isCore, this.state._id);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.dispatchEnteringPermission(true);\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"keyboardDidShow\",\n    value: function keyboardDidShow() {\n      this.setState({\n        keyboardAvailable: true\n      });\n    }\n  }, {\n    key: \"keyboardDidHide\",\n    value: function keyboardDidHide() {\n      this.setState({\n        keyboardAvailable: false\n      });\n    }\n  }, {\n    key: \"updateStratumLimits_whenDelete\",\n    value: function updateStratumLimits_whenDelete() {\n      var s = this.state;\n      var array = s.layerList;\n\n      function auxiliar(s, elem) {\n        elem.lowerLimit[0] = auxiliarFunctions.repairNumber(elem.lowerLimit[0][0] + s.previousthickness[0][0], 15);\n        elem.lowerLimit[1] = auxiliarFunctions.repairNumber(elem.lowerLimit[1][0] + s.previousthickness[1][0], 15);\n        elem.upperLimit[0] = auxiliarFunctions.repairNumber(elem.upperLimit[0][0] + s.previousthickness[0][0], 15);\n        elem.upperLimit[1] = auxiliarFunctions.repairNumber(elem.upperLimit[1][0] + s.previousthickness[1][0], 15);\n      }\n\n      if (s.isCore) {\n        for (i = this.state.index + 1; i < s.layerList.length; i++) {\n          auxiliar(s, array[i]);\n        }\n      } else {\n        for (i = this.state.index - 1; i >= 0; i--) {\n          auxiliar(s, array[i]);\n        }\n      }\n\n      array.splice(s.index, 1);\n      return array;\n    }\n  }, {\n    key: \"doubleNumericField\",\n    value: function doubleNumericField(variable, variableName, functionToApply) {\n      var p = this.props;\n\n      function auxiliar(variable, variableName, functionToApply, unit) {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingRight: unit == 0 ? 10 : 0,\n            paddingLeft: unit == 0 ? 0 : 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          }\n        }, React.createElement(TextInput, {\n          value: variable[unit][1],\n          selectTextOnFocus: true,\n          textAlign: 'center',\n          style: genericStyles.textInput,\n          maxLength: 9 + unit,\n          placeholder: p.allMessages[12],\n          onChangeText: function onChangeText(text) {\n            return variableName != null ? functionToApply(variableName, text, unit) : functionToApply(text, unit);\n          },\n          keyboardType: \"phone-pad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          }\n        }), React.createElement(Text, {\n          style: {\n            flex: 0.5,\n            paddingTop: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          }\n        }, p.allMessages[15 + unit]));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        }\n      }, auxiliar(variable, variableName, functionToApply, 0), auxiliar(variable, variableName, functionToApply, 1));\n    }\n  }, {\n    key: \"activateLoadLayerList\",\n    value: function activateLoadLayerList() {\n      this.loadLayerList();\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var s = this.state;\n      var p = this.props;\n\n      if (s.loading) {\n        return React.createElement(View, {\n          style: genericStyles.simple_center,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          }\n        }, this.activateLoadLayerList(), React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          }\n        }, p.allMessages[10], \"...\"));\n      }\n\n      return React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        }\n      }, React.createElement(View, {\n        style: _objectSpread({}, genericStyles.row_instructions_textInput, {\n          paddingTop: 30\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        }\n      }, \"*\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        }\n      }, \" \", p.allMessages[11], \": \")), React.createElement(TextInput, {\n        defaultValue: this.state.stratumName,\n        selectTextOnFocus: true,\n        style: genericStyles.textInput,\n        placeholder: p.allMessages[12],\n        textAlign: 'center',\n        maxLength: 35,\n        onChangeText: function onChangeText(text) {\n          return _this3.onChangeName(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        }\n      })), React.createElement(View, {\n        style: genericStyles.instructionsAboveTextInputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        }\n      }, \"*\", React.createElement(Text, {\n        style: {\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        }\n      }, \" \", p.allMessages[13])), React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        }\n      }, \"(\", p.allMessages[14], \")\"), this.doubleNumericField(s.thickness, null, this.onChangeThickness)), this.props.navigation.getParam('index') != null && React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 80\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[17],\n        color: \"red\",\n        onPress: this.deleteStratum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[18],\n        color: DARK_GRAY_COLOR,\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.refuseSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[19],\n        icon: {\n          name: 'check'\n        },\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        }\n      }))));\n    }\n  }]);\n\n  return ObjectStratumForm;\n}(Component);\n\nObjectStratumForm.navigationOptions = function (_ref) {\n  var screenProps = _ref.screenProps;\n  return {\n    title: ObjectStratumForm_Texts[screenProps.language][0],\n    headerTintColor: screenProps.headerTintColor,\n    headerStyle: _objectSpread({\n      backgroundColor: screenProps.headerBackgroundColor\n    }, genericStyles.navigationHeader)\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: ObjectStratumForm_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchChangeLoadView: function dispatchChangeLoadView(bool) {\n      return dispatch(changeLoadView(bool));\n    },\n    dispatchEnteringPermission: function dispatchEnteringPermission(bool) {\n      return dispatch(changeStratumComponentPermission(bool));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ObjectStratumForm);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/screens/objectsOfStudy/ObjectStratumForm.js"],"names":["React","Component","Button","ButtonWithIcon","connect","changeLoadView","changeStratumComponentPermission","ObjectStratumForm_Texts","Log","Database","genericStyles","DARK_GRAY_COLOR","OUTCROPS_DOCUMENT_ID","CORES_DOCUMENT_ID","D","auxiliarFunctions","_","ObjectStratumForm","props","acceptSettings","state","saveStratumEnabled","stratumName","Alert","alert","allMessages","thickness","navigation","getParam","editLayer","addLayer","refuseSettings","goBack","setState","numberOfLayers","layerList","length","baseHeight","factor","isCore","upperLimitMeters","upperLimitFeet","previousElement","lowerLimit","lowerLimitMeters","repairNumber","lowerLimitFeet","upperLimit","shownHeight","objectToAdd","key","name","lithology_data","structure_data","fossil_data","image_data","note_data","push","unshift","saveLayerList","user_id","_id","localDB","dispatchChangeLoadView","console","error","toString","s","currentLayer","index","previousthickness","i","elem","cloneDeep","onChangeName","text","onChangeThickness","unit","isValidPositiveDecimalNumber","parseFloat","metersToFeet","feetToMeters","deleteStratum","p","auxiliar","updateStratumLimits_whenDelete","array","onPress","keyboardDidShow","bind","keyboardDidHide","commonProperties","params","SIZE_OF_UNIT","keyboardAvailable","loading","generate_key","get","then","document","objects","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","log_action","dispatchEnteringPermission","remove","splice","variable","variableName","functionToApply","flexDirection","justifyContent","alignItems","paddingRight","paddingLeft","textInput","flex","paddingTop","loadLayerList","simple_center","activateLoadLayerList","lightGray_background","white_background_with_ScrollView","row_instructions_textInput","color","fontWeight","instructionsAboveTextInputs","doubleNumericField","down_buttons","dismiss","navigationOptions","screenProps","title","language","headerTintColor","headerStyle","backgroundColor","headerBackgroundColor","navigationHeader","mapStateToProps","appPreferencesReducer","userReducer","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TextInput, Button as ButtonNoIcon, \n\t\tScrollView, Alert, Keyboard, ActivityIndicator} from 'react-native';\n\nimport {Button as ButtonWithIcon} from 'react-native-elements'\n\nimport { connect } from 'react-redux'\nimport { changeLoadView, changeStratumComponentPermission } from '../../redux/actions/popUpActions'\nimport { ObjectStratumForm_Texts } from '../../languages/screens/objectsOfStudy/ObjectStratumForm'\n\nimport * as Log      from '../../genericFunctions/logFunctions'\nimport * as Database from '../../genericFunctions/databaseFunctions'\n\nimport { genericStyles, DARK_GRAY_COLOR } from '../../constants/genericStyles'\nimport { OUTCROPS_DOCUMENT_ID, CORES_DOCUMENT_ID } from '../../constants/appConstants'\nimport * as D from '../../constants/Dimensions'\nimport * as auxiliarFunctions from '../../genericFunctions/otherFunctions'\nimport _ from \"lodash\"\n\n\nclass ObjectStratumForm extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.keyboardDidShow = this.keyboardDidShow.bind(this)\n\t\tthis.keyboardDidHide = this.keyboardDidHide.bind(this)\n\n\t\t// Propiedades que tenemos que inicializar para manejar esta vista, independientemente de si el estrato se está creando o actualizando\n\t\tconst commonProperties = {\n\t\t\t...this.props.navigation.state.params, // Recuperamos la información que se le pasa a esta vista\n\n\t\t\tfactor: D.SIZE_OF_UNIT / this.props.navigation.getParam('scale')[0], // Convierte una medida expresada en metros o pies en el equivalente que ocupa en la pantalla\n\t\t\t\n\t\t\t// Determina si el teclado está visible. Esto lo pusimos porque no queremos que los botones de \"Aceptar\" y \"Cancelar\" de la parte inferior cierren la vista cuando el teclado está visible\n\t\t\tkeyboardAvailable: false,\n\t\t\t\n\t\t\tloading: false, // Variable que determina si todavía se está cargando información desde la base de datos\n\t\t\tsaveStratumEnabled: true, // Esta variable determina si se puede guardar el estrato, lo cual impide que se active la función correspondiente dos veces al darle \"Aceptar\" dos veces seguidas\n\t\t}\n\n\t\t// Caso en que estamos editando un estrato ya creado\n\t\tif (this.props.navigation.getParam('index') != null){\n\t\t\tthis.state = {\n\t\t\t\t...commonProperties,\n\t\t\t\t// Si se modifica el espesor, de todos modos necesitamos saber su valor anterior. Por eso lo conservamos.\n\t\t\t\tpreviousthickness: this.props.navigation.getParam('thickness'),  \n\t\t\t}\n\t\t} \n\t\telse { // Caso en que estamos añadiendo un nuevo estrato\n\t\t\tthis.state = {\n\t\t\t\t...commonProperties,\n\t\t\t\t// Información nueva\n\t\t\t\tkey:        auxiliarFunctions.generate_key(), // Generamos un identificador del estrato\n\t\t\t\tthickness:  [[null,null],[null,null]],  // El primer elemento representará el espesor del estrato en metros, y el segundo, en pies\n\t\t\t\tstratumName: null,  // Nombre del estrato que se añadirá\n\t\t\t}\n\t\t}\n\t}\n\n\t// Formato de la cabecera de la vista\n\tstatic navigationOptions = ({ screenProps }) => ({\n\t\ttitle:           ObjectStratumForm_Texts[screenProps.language][0],\n\t\theaderTintColor: screenProps.headerTintColor,\n\t\theaderStyle: {\n\t\t\tbackgroundColor: screenProps.headerBackgroundColor,\n\t\t\t...genericStyles.navigationHeader,\n\t\t}\n\t});\n\n\t/* Para cargar la lista de estratos. Esto se utiliza cuando vamos a editar un estrato existente, porque en ese caso, si recibiéramos dicha\n\tlista a través de props, no habría garantía de que se estuviese empleando la versión más actualizada */\n\tasync loadLayerList () {\n\t\tawait this.props.localDB.get((this.state.isCore ? CORES_DOCUMENT_ID : OUTCROPS_DOCUMENT_ID))\n\t\t\t.then(document => {\n\t\t\t\tthis.setState({layerList: document.objects[this.state._id].layerList, loading: false}); \n\t\t\t})\n\t}\n\n\t// Para registrar en el \"log\" que se entró en el formulario de estrato de núcleo\n\tcomponentDidMount(){\n\t\t// Aquí inicializamos los escuchas que determinan si el teclado se está mostrando o no\n\t\tthis.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n\t\tthis.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n\n\t\tif (this.props.navigation.getParam('index')){\n\t\t\tLog.log_action(13, this.props.user_id, this.state.isCore, this.state._id, this.state.key);\n\t\t}\n\t\telse {\n\t\t\tLog.log_action(11, this.props.user_id, this.state.isCore, this.state._id);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Habilitamos nuevamente el poder ingresar a los otros componentes de los estratos\n\t\tthis.props.dispatchEnteringPermission(true);\n\n\t\t// Quitamos los escuchas cuando salimos de esta ventana\n\t\tthis.keyboardDidShowListener.remove();\n\t\tthis.keyboardDidHideListener.remove();\n\t}\n\n\t// Caso en que el teclado se está mostrando\n\tkeyboardDidShow() {\n\t\tthis.setState({keyboardAvailable: true});\n\t}\n\n\t// Caso en que el teclado se ocultó\n\tkeyboardDidHide() {\n\t\tthis.setState({keyboardAvailable: false});\n\t}\n\n\t// Se activa cuando el usuario le da al botón de \"Aceptar\", y determina si hay que añadir un nuevo estrato, o se modifica uno ya existente\n\tacceptSettings = () => {\n\t\tif (this.state.saveStratumEnabled){\n\t\t\tif (this.state.stratumName == null){\n\t\t\t\t// Alerta: \"El nombre del estrato no puede ser nulo\"\n\t\t\t\tAlert.alert(this.props.allMessages[1], this.props.allMessages[3]);\n\t\t\t}\n\t\t\telse if (this.state.thickness[0][0] == null){\n\t\t\t\t// Alerta: \"El espesor no puede ser nulo\"\n\t\t\t\tAlert.alert(this.props.allMessages[1], this.props.allMessages[4]);\n\t\t\t}\n\t\t\telse if (this.props.navigation.getParam('index') != null){\n\t\t\t\tthis.editLayer();\t\t\n\t\t\t} \n\t\t\telse {\n\t\t\t\tthis.addLayer();\n\t\t\t}\n\t\t}\n\t}\n\n\t// Procedimiento para el caso en que el usuario le da al botón de Cancelar\n\trefuseSettings = () => {\n\t\tif (this.props.navigation.getParam('index') != null){\n\t\t\t// Alerta: \"No se salvaron los cambios\"\n\t\t\tAlert.alert(this.props.allMessages[1], this.props.allMessages[2]);\t\t\t\n\t\t}\n\t\tthis.props.navigation.goBack();\n\t}\n\n\t// Añadir un nuevo estrato\n\taddLayer = () => {\n\t\tthis.setState({saveStratumEnabled: false},\n\t\t\tasync() => {\n\t\t\t\tconst numberOfLayers = this.state.layerList.length;\n\t\t\t\tconst thickness      = this.state.thickness;\n\t\t\t\tconst baseHeight     = this.state.baseHeight;\n\t\t\t\tconst factor         = this.state.factor;\n\n\t\t\t\t// Primero decidimos qué alturas va a tener este estrato\n\t\t\t\tif (this.state.isCore){\n\t\t\t\t\tif (numberOfLayers == 0){\n\t\t\t\t\t\tvar upperLimitMeters = baseHeight[0];\n\t\t\t\t\t\tvar upperLimitFeet   = baseHeight[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar previousElement  = this.state.layerList[numberOfLayers-1];\n\t\t\t\t\t\tvar upperLimitMeters = previousElement.lowerLimit[0];\n\t\t\t\t\t\tvar upperLimitFeet   = previousElement.lowerLimit[1];\n\t\t\t\t\t} \n\n\t\t\t\t\tvar lowerLimitMeters = auxiliarFunctions.repairNumber(upperLimitMeters[0] - thickness[0][0], 15);\n\t\t\t\t\tvar lowerLimitFeet   = auxiliarFunctions.repairNumber(upperLimitFeet[0]   - thickness[1][0], 15);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (numberOfLayers == 0){\n\t\t\t\t\t\tvar lowerLimitMeters = baseHeight[0];\n\t\t\t\t\t\tvar lowerLimitFeet   = baseHeight[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar previousElement  = this.state.layerList[0];\n\t\t\t\t\t\tvar lowerLimitMeters = previousElement.upperLimit[0];\n\t\t\t\t\t\tvar lowerLimitFeet   = previousElement.upperLimit[1];\n\t\t\t\t\t} \n\n\t\t\t\t\tvar upperLimitMeters = auxiliarFunctions.repairNumber(lowerLimitMeters[0] + thickness[0][0], 15);\n\t\t\t\t\tvar upperLimitFeet   = auxiliarFunctions.repairNumber(lowerLimitFeet[0]   + thickness[1][0], 15);\n\t\t\t\t}\n\n\t\t\t\tvar shownHeight = [factor * thickness[0][0], factor * thickness[1][0]];\n\n\t\t\t\t// Estructura del estrato que añadiremos\n\t\t\t\tconst objectToAdd = {\n\t\t\t\t\tshownHeight, // Altura con la que se muestra el estrato en la pantalla\n\t\t\t\t\tthickness,   // Espesor real del estrato.\n\n\t\t\t\t\t// Guardar los límites de altura\n\t\t\t\t\tlowerLimit: [lowerLimitMeters, lowerLimitFeet], // Altura a la que comienza el estrato\n\t\t\t\t\tupperLimit: [upperLimitMeters, upperLimitFeet], // Altura a la que termina el estrato\n\n\t\t\t\t\tkey:  this.state.key,         // Identificador del estrato\n\t\t\t\t\tname: this.state.stratumName, // Nombre del estrato\n\n\t\t\t\t\t// Campos principales del estrato, que se inician como son vacíos\n\t\t\t\t\tlithology_data: {},\n\t\t\t\t\tstructure_data: {},\n\t\t\t\t\tfossil_data:    {},\n\t\t\t\t\timage_data:     {},\n\t\t\t\t\tnote_data:      {},\n\t\t\t\t}\n\n\t\t\t\tif (this.state.isCore){\n\t\t\t\t\tawait this.state.layerList.push(objectToAdd);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tawait this.state.layerList.unshift(objectToAdd);\n\t\t\t\t}\n\n\t\t\t\ttry{\n\t\t\t\t\t// Los argumentos son: 1) user_id, 2) objectOfStudy_id, 3) layerList, 4) isCore, 5) localDB, 6) stratum_key, 7) kind = 0\n\t\t\t\t\tawait Database.saveLayerList(this.props.user_id, this.state._id, this.state.layerList, this.state.isCore, this.props.localDB, this.state.key, 0);\n\t\t\t\t\tthis.props.dispatchChangeLoadView(true);\n\t\t\t\t\tthis.props.navigation.goBack();\n\t\t\t\t}\n\t\t\t\tcatch(error){\n\t\t\t\t\tconsole.error(error.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\t// Modificar un estrato ya existente\n\teditLayer = () => {\n\t\tthis.setState({saveStratumEnabled: false},\n\t\t\tasync() => {\n\t\t\t\tlet s = this.state;\n\n\t\t\t\tvar currentLayer  = s.layerList[s.index];\n\t\t\t\tcurrentLayer.name = s.stratumName;\n\n\t\t\t\tif (s.previousthickness[0][0] != s.thickness[0][0]){\n\t\t\t\t\tlet elem;\n\t\t\t\t\tcurrentLayer.thickness = s.thickness;\n\t\t\t\t\tcurrentLayer.shownHeight = [s.factor * s.thickness[0][0], s.factor * s.thickness[1][0]];\n\n\t\t\t\t\t// La actualización necesaria es distinta para núcleos que para afloramientos\n\t\t\t\t\tif (s.isCore){\n\t\t\t\t\t\t// Actualizar el límite inferior del estrato actual\n\t\t\t\t\t\tcurrentLayer.lowerLimit[0] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[0][0] - s.thickness[0][0], 15);\n\t\t\t\t\t\tcurrentLayer.lowerLimit[1] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[1][0] - s.thickness[1][0], 15);\n\n\t\t\t\t\t\t// Actualizar los límites de los estratos inferiores al actual (que tienen un índice más alto)\n\t\t\t\t\t\tfor (i = s.index + 1; i < s.layerList.length; i++){\n\t\t\t\t\t\t\telem = s.layerList[i];\n\t\t\t\t\t\t\telem.upperLimit    = _.cloneDeep(s.layerList[i-1].lowerLimit);\n\t\t\t\t\t\t\telem.lowerLimit[0] = auxiliarFunctions.repairNumber(elem.upperLimit[0][0] - elem.thickness[0][0], 15);\n\t\t\t\t\t\t\telem.lowerLimit[1] = auxiliarFunctions.repairNumber(elem.upperLimit[1][0] - elem.thickness[1][0], 15);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Actualizar el límite superior del estrato actual\n\t\t\t\t\t\tcurrentLayer.upperLimit[0] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[0][0] + s.thickness[0][0], 15);\n\t\t\t\t\t\tcurrentLayer.upperLimit[1] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[1][0] + s.thickness[1][0], 15);\n\n\t\t\t\t\t\t// Actualizar los límites de los estratos superiores al actual (que tienen un índice más bajo)\n\t\t\t\t\t\tfor (i = this.state.index - 1; i >= 0; i--){\n\t\t\t\t\t\t\telem = s.layerList[i];\n\t\t\t\t\t\t\telem.lowerLimit    = _.cloneDeep(s.layerList[i+1].upperLimit);\n\t\t\t\t\t\t\telem.upperLimit[0] = auxiliarFunctions.repairNumber(elem.lowerLimit[0][0] + elem.thickness[0][0], 15);\n\t\t\t\t\t\t\telem.upperLimit[1] = auxiliarFunctions.repairNumber(elem.lowerLimit[1][0] + elem.thickness[1][0], 15);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttry{\n\t\t\t\t\t// Los argumentos son: 1) user_id, 2) objectOfStudy_id, 3) layerList, 4) isCore, 5) localDB, 6) stratum_key, 7) kind = 1\n\t\t\t\t\tawait Database.saveLayerList(this.props.user_id, s._id, s.layerList, true, this.props.localDB, this.state.key, 1);\n\t\t\t\t\tthis.props.dispatchChangeLoadView(true);\n\t\t\t\t\tthis.props.navigation.goBack();\n\t\t\t\t}\n\t\t\t\tcatch(error){\n\t\t\t\t\tconsole.error(error.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\t// Procedimiento para cambiarle el nombre al nuevo estrato\n\tonChangeName = (text) => {\n\t\tif ((text == \" \") || (text == \"\")){\n\t\t\tthis.setState({stratumName: null});  \n\t\t}\n\t\telse {\n\t\t\tthis.setState({stratumName: text}); \n\t\t}   \n\t}\n\n\t// Procedimiento para actualizar el espesor real del estrato -> \"thickness\"\n\tonChangeThickness = async(text, unit) => {\n\t\tif (auxiliarFunctions.isValidPositiveDecimalNumber(text)){\n\t\t\tif (unit == 0){ // Caso en que el valor provisto fue el de metros\n\t\t\t\tthis.setState({\n\t\t\t\t\tthickness: [[parseFloat(text),text], auxiliarFunctions.metersToFeet(text)]\n\t\t\t\t});\n\t\t\t}\n\t\t\telse { // Caso en que el valor provisto fue el de pies\n\t\t\t\tthis.setState({\n\t\t\t\t\tthickness: [auxiliarFunctions.feetToMeters(text), [parseFloat(text),text]],\n\t\t\t\t});\t\t\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tif ((text == \" \") || (text == \"\")){} \n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\")\n\t\t\t\tAlert.alert(this.props.allMessages[1], this.props.allMessages[5]);\n\t\t\t}\n\t\t\t/* Este this.setState con el await se coloca porque si el primer carácter del texto es inválido, como si por ejemplo comienza con \")\", entonces\n\t\t\t   el this.setState de abajo no es capaz de limpiar el cuadro de texto */\n\t\t\tawait this.setState({thickness: [[0, \"0\"],[0, \"0\"]]}); \n\t\t\t\n\t\t\tthis.setState({thickness: [[null, null],[null, null]] });\n\t\t}\n\t}\n\n\t// Función para actualizar los límites del resto de estratos cuando se elimina el estrato actual\n\tupdateStratumLimits_whenDelete(){\n\t\tlet s = this.state;\n\t\tlet array = s.layerList;\n\n\t\tfunction auxiliar(s,elem){\n\t\t\telem.lowerLimit[0] = auxiliarFunctions.repairNumber(elem.lowerLimit[0][0] + s.previousthickness[0][0], 15);\n\t\t\telem.lowerLimit[1] = auxiliarFunctions.repairNumber(elem.lowerLimit[1][0] + s.previousthickness[1][0], 15);\n\t\t\telem.upperLimit[0] = auxiliarFunctions.repairNumber(elem.upperLimit[0][0] + s.previousthickness[0][0], 15);\n\t\t\telem.upperLimit[1] = auxiliarFunctions.repairNumber(elem.upperLimit[1][0] + s.previousthickness[1][0], 15);\t\t\n\t\t}\n\n\t\tif (s.isCore){\n\t\t\tfor (i = this.state.index + 1; i < s.layerList.length; i++){\n\t\t\t\tauxiliar(s,array[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = this.state.index - 1; i >= 0; i--){\n\t\t\t\tauxiliar(s,array[i]);\n\t\t\t}\t\t\n\t\t}\n\t\tarray.splice(s.index, 1);\n\t\treturn array;\n\t}\n\n\t// Procedimiento para eliminar el estrato actual\n\tdeleteStratum = () => {\t\n\t\tlet p = this.props;\t\n\n\t\t// Procedimiento para eliminar el estrato actual\n\t\tlet auxiliar = async(p) => {\t\n\t\t\tlet s = this.state;\n\t\t\tlet array = await this.updateStratumLimits_whenDelete();\t\n\n\t\t\t// Los argumentos son: 1) user_id, 2) objectOfStudy_id, 3) layerList, 4) isCore, 5) localDB, 6) stratum_key, 7) kind = 0\n\t\t\tawait Database.saveLayerList(p.user_id, s._id, array, s.isCore, p.localDB, s.key, 2);\n\t\t\tthis.props.dispatchChangeLoadView(true);\n\t\t\t// Alerta: \"El estrato fue eliminado\"\n\t\t\tAlert.alert(p.allMessages[1], p.allMessages[6]);\n\t\t\tthis.props.navigation.goBack();\n\t\t}\n\n\t\t// Alerta: \"¿Seguro de que desea eliminar el estrato?\"\n\t\tAlert.alert(p.allMessages[1], p.allMessages[7],\n\t\t\t[\n\t\t\t\t// Mensaje: \"Sí\"\n\t\t\t\t{text: p.allMessages[8], onPress: () => auxiliar(p)},\n\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t{text: p.allMessages[9]},\n\t\t\t] \n\t\t)\n\t}\n\n\t// Formato de los campos numéricos que tienen dos espacios para rellenar: uno para metros y otro para pies\n\t// Por ahora sólo es el espesor\n\tdoubleNumericField(variable, variableName, functionToApply){\n\t\tlet p = this.props;\n\n\t\tfunction auxiliar(variable, variableName, functionToApply, unit){\n\t\t\treturn (\n\t\t\t\t<View style = {{flexDirection: 'column', justifyContent: 'center', alignItems: 'center', paddingRight: ((unit == 0) ? 10 : 0), paddingLeft: ((unit == 0) ? 0 : 10)}}>\n\t\t\t\t\t<TextInput \n\t\t\t\t\t\tvalue             = {variable[unit][1]}\n\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\ttextAlign         = {'center'}\n\t\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\t\tmaxLength         = {9+unit}\n\t\t\t\t\t\tplaceholder       = {p.allMessages[12]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\t\tonChangeText      = {text => ((variableName != null) ? functionToApply(variableName,text,unit) : functionToApply(text,unit))}\n\t\t\t\t\t\tkeyboardType      = 'phone-pad'\n\t\t\t\t\t/>\n\t\t\t\t\t{/*Mensajes: \"metros\" \"pies\"*/}\n\t\t\t\t\t<Text style = {{flex: 0.5, paddingTop: 3}}>{p.allMessages[15+unit]}</Text>\n\t\t\t\t</View>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<View style = {{flexDirection: 'row', justifyContent: 'center', alignItems: 'center', paddingTop: 3}}>\n\t\t\t\t{auxiliar(variable, variableName, functionToApply, 0)}\n\t\t\t\t{auxiliar(variable, variableName, functionToApply, 1)}\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Sirve para activar la función que lee desde la base de datos. Esto es útil cuando estamos emulando la aplicación y refrescamos la página\n\t// en caliente, ya que hacer eso volverá a colocar this.state.loading en su valor inicial (true) pero este componente ya estará montado, por lo que \n\t// no se activará el NavigationEvents onWillFocus, y en consecuencia la vista se quedará pegada en \"Cargando\"\n\tactivateLoadLayerList(){\n\t\tthis.loadLayerList();\n\t\treturn(<View/>)\n\t}\n\n\t// Lo que se muestra al usuario en total en esta ventana\n\trender (){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\t// Vista para cuando se están cargando datos desde la base de datos PouchDB\n\t\tif (s.loading){\n\t\t\treturn (\n\t\t\t\t<View style = {genericStyles.simple_center}>\n\t\t\t\t\t{this.activateLoadLayerList()}\n\t\t\t\t\t<ActivityIndicator size = \"large\" color = \"#0000ff\" />\n\t\t\t\t\t{/*Mensaje: \"Cargando\"*/}\n\t\t\t\t\t<Text>{p.allMessages[10]}...</Text>\n\t\t\t\t</View>\n\t\t\t);\t\n\t\t} \n\n\t\t// Vista para cuando ya se actualizaron los datos que se quieren mostrar\n\t\treturn (\n\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t{/*En esta parte el usuario ingresa el nombre y el espesor del estrato*/}\n\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\n\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t{/*Modificar el nombre del estrato*/}\n\t\t\t\t\t\t<View style = {{...genericStyles.row_instructions_textInput, paddingTop: 30}}>\n\t\t\t\t\t\t\t{/*Mensage: \"Nombre del estrato\\n(máx 35)\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex: 1, color: 'red', fontWeight: 'bold'}}>*\n\t\t\t\t\t\t\t\t<Text style = {{color: 'black'}}> {p.allMessages[11]}: </Text>\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<TextInput \n\t\t\t\t\t\t\t\tdefaultValue      = {this.state.stratumName} \n\t\t\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\t\t\t\tplaceholder       = {p.allMessages[12]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\t\t\t\ttextAlign         = {'center'} \n\t\t\t\t\t\t\t\tmaxLength         = {35} \n\t\t\t\t\t\t\t\tonChangeText      = {text => this.onChangeName(text)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*Modificar el espesor del estrato*/}\n\t\t\t\t\t\t<View style = {genericStyles.instructionsAboveTextInputs}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Inserte el espesor del estrato\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex: 1, color: 'red'}}>*\n\t\t\t\t\t\t\t\t<Text style = {{color: 'black', fontWeight: 'bold'}}> {p.allMessages[13]}</Text>\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t{/*Mensaje: \"Sólo valores positivos\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex: 1}}>({p.allMessages[14]})</Text>\n\n\t\t\t\t\t\t\t{this.doubleNumericField(s.thickness, null, this.onChangeThickness)}\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{(this.props.navigation.getParam('index') != null) &&\n\t\t\t\t\t\t\t<View style = {{justifyContent: 'center', alignItems: 'center', paddingTop: 80}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[17]} // Mensaje: \"Eliminar estrato\"\n\t\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\t\tonPress = {this.deleteStratum}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\n\t\t\t\t{/*//Vista de los botones para darle Aceptar o Volver*/}\n\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\ttitle   = {p.allMessages[18]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss : this.refuseSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\ttitle   = {p.allMessages[19]} /// Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t)\t\n\t}\n}\n\n/// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages: ObjectStratumForm_Texts[state.appPreferencesReducer.language], \n\t\tuser_id:     state.userReducer.user_id,\n\t\tlocalDB:     state.userReducer.localDB,\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchChangeLoadView: (bool) => dispatch(changeLoadView(bool)),\n\t\tdispatchEnteringPermission: (bool) => dispatch(changeStratumComponentPermission(bool)),\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ObjectStratumForm); "]},"metadata":{},"sourceType":"module"}