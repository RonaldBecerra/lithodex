{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\node_modules\\\\react-native-color-picker\\\\dist\\\\HoloColorPicker.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport React from \"react\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Slider from \"react-native-web/dist/exports/Slider\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tinycolor from \"tinycolor2\";\nimport { createPanResponder } from \"./utils\";\n\nvar HoloColorPicker = function (_super) {\n  __extends(HoloColorPicker, _super);\n\n  function HoloColorPicker(props, ctx) {\n    var _this = _super.call(this, props, ctx) || this;\n\n    _this._handleColorChange = function (_a) {\n      var x = _a.x,\n          y = _a.y;\n\n      var _b = _this._getColor(),\n          s = _b.s,\n          v = _b.v;\n\n      var marginLeft = (_this._layout.width - _this.state.pickerSize) / 2;\n      var marginTop = (_this._layout.height - _this.state.pickerSize) / 2;\n      var relativeX = x - _this._pageX - marginLeft;\n      var relativeY = y - _this._pageY - marginTop;\n\n      var h = _this._computeHValue(relativeX, relativeY);\n\n      _this._onColorChange({\n        h: h,\n        s: s,\n        v: v\n      });\n\n      return true;\n    };\n\n    var state = {\n      color: {\n        h: 0,\n        s: 1,\n        v: 1\n      },\n      pickerSize: null\n    };\n\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv();\n    }\n\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv();\n    }\n\n    _this.state = state;\n    _this._layout = {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    };\n    _this._pageX = 0;\n    _this._pageY = 0;\n    _this._onLayout = _this._onLayout.bind(_this);\n    _this._onSValueChange = _this._onSValueChange.bind(_this);\n    _this._onVValueChange = _this._onVValueChange.bind(_this);\n    _this._onColorSelected = _this._onColorSelected.bind(_this);\n    _this._onOldColorSelected = _this._onOldColorSelected.bind(_this);\n    _this._isRTL = I18nManager.isRTL;\n    _this._pickerResponder = createPanResponder({\n      onStart: _this._handleColorChange,\n      onMove: _this._handleColorChange\n    });\n    return _this;\n  }\n\n  HoloColorPicker.prototype._getColor = function () {\n    var passedColor = typeof this.props.color === \"string\" ? tinycolor(this.props.color).toHsv() : this.props.color;\n    return passedColor || this.state.color;\n  };\n\n  HoloColorPicker.prototype._onColorSelected = function () {\n    var onColorSelected = this.props.onColorSelected;\n    var color = tinycolor(this._getColor()).toHexString();\n    onColorSelected && onColorSelected(color);\n  };\n\n  HoloColorPicker.prototype._onOldColorSelected = function () {\n    var _a = this.props,\n        oldColor = _a.oldColor,\n        onOldColorSelected = _a.onOldColorSelected;\n    var color = tinycolor(oldColor);\n    this.setState({\n      color: color.toHsv()\n    });\n    onOldColorSelected && onOldColorSelected(color.toHexString());\n  };\n\n  HoloColorPicker.prototype._onSValueChange = function (s) {\n    var _a = this._getColor(),\n        h = _a.h,\n        v = _a.v;\n\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n\n  HoloColorPicker.prototype._onVValueChange = function (v) {\n    var _a = this._getColor(),\n        h = _a.h,\n        s = _a.s;\n\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n\n  HoloColorPicker.prototype._onColorChange = function (color) {\n    this.setState({\n      color: color\n    });\n\n    if (this.props.onColorChange) {\n      this.props.onColorChange(color);\n    }\n  };\n\n  HoloColorPicker.prototype._onLayout = function (l) {\n    var _this = this;\n\n    this._layout = l.nativeEvent.layout;\n    var _a = this._layout,\n        width = _a.width,\n        height = _a.height;\n    var pickerSize = Math.min(width, height);\n\n    if (this.state.pickerSize !== pickerSize) {\n      this.setState({\n        pickerSize: pickerSize\n      });\n    }\n\n    InteractionManager.runAfterInteractions(function () {\n      _this.refs.pickerContainer && _this.refs.pickerContainer.measure(function (x, y, width, height, pageX, pageY) {\n        _this._pageX = pageX;\n        _this._pageY = pageY;\n      });\n    });\n  };\n\n  HoloColorPicker.prototype._computeHValue = function (x, y) {\n    var mx = this.state.pickerSize / 2;\n    var my = this.state.pickerSize / 2;\n    var dx = x - mx;\n    var dy = y - my;\n    var rad = Math.atan2(dx, dy) + Math.PI + Math.PI / 2;\n    return rad * 180 / Math.PI % 360;\n  };\n\n  HoloColorPicker.prototype._hValueToRad = function (deg) {\n    var rad = deg * Math.PI / 180;\n    return rad - Math.PI - Math.PI / 2;\n  };\n\n  HoloColorPicker.prototype._getSlider = function () {\n    if (this.props.hideSliders) {\n      return undefined;\n    }\n\n    if (this.props.sliderComponent) {\n      return this.props.sliderComponent;\n    }\n\n    if (!Slider) {\n      throw new Error(\"You need to install `@react-native-community/slider` and pass it (or any other Slider compatible component) as `sliderComponent` prop\");\n    }\n\n    return Slider;\n  };\n\n  HoloColorPicker.prototype.getColor = function () {\n    return tinycolor(this._getColor()).toHexString();\n  };\n\n  HoloColorPicker.prototype.render = function () {\n    var pickerSize = this.state.pickerSize;\n    var _a = this.props,\n        oldColor = _a.oldColor,\n        style = _a.style;\n\n    var color = this._getColor();\n\n    var h = color.h,\n        s = color.s,\n        v = color.v;\n\n    var angle = this._hValueToRad(h);\n\n    var selectedColor = tinycolor(color).toHexString();\n    var indicatorColor = tinycolor({\n      h: h,\n      s: 1,\n      v: 1\n    }).toHexString();\n    var computed = makeComputedStyles({\n      pickerSize: pickerSize,\n      selectedColor: selectedColor,\n      indicatorColor: indicatorColor,\n      oldColor: oldColor,\n      angle: angle,\n      isRTL: this._isRTL\n    });\n\n    var SliderComp = this._getSlider();\n\n    return React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      }\n    }, React.createElement(View, {\n      onLayout: this._onLayout,\n      ref: \"pickerContainer\",\n      style: styles.pickerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      }\n    }, !pickerSize ? null : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      }\n    }, React.createElement(View, _extends({}, this._pickerResponder.panHandlers, {\n      style: [computed.picker],\n      collapsable: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      }\n    }), React.createElement(Image, {\n      source: require(\"../resources/color-circle.png\"),\n      resizeMode: \"contain\",\n      style: [styles.pickerImage],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      }\n    }), React.createElement(View, {\n      style: [styles.pickerIndicator, computed.pickerIndicator],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      }\n    })), oldColor && React.createElement(TouchableOpacity, {\n      style: [styles.selectedPreview, computed.selectedPreview],\n      onPress: this._onColorSelected,\n      activeOpacity: 0.7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      }\n    }), oldColor && React.createElement(TouchableOpacity, {\n      style: [styles.originalPreview, computed.originalPreview],\n      onPress: this._onOldColorSelected,\n      activeOpacity: 0.7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      }\n    }), !oldColor && React.createElement(TouchableOpacity, {\n      style: [styles.selectedFullPreview, computed.selectedFullPreview],\n      onPress: this._onColorSelected,\n      activeOpacity: 0.7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      }\n    }))), this.props.hideSliders ? null : React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      }\n    }, React.createElement(SliderComp, {\n      value: s,\n      onValueChange: this._onSValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      }\n    }), React.createElement(SliderComp, {\n      value: v,\n      onValueChange: this._onVValueChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      }\n    })));\n  };\n\n  return HoloColorPicker;\n}(React.PureComponent);\n\nexport { HoloColorPicker };\n\nvar makeComputedStyles = function makeComputedStyles(_a) {\n  var _b;\n\n  var indicatorColor = _a.indicatorColor,\n      selectedColor = _a.selectedColor,\n      oldColor = _a.oldColor,\n      angle = _a.angle,\n      pickerSize = _a.pickerSize,\n      isRTL = _a.isRTL;\n  var summarySize = 0.5 * pickerSize;\n  var indicatorPickerRatio = 42 / 510;\n  var indicatorSize = indicatorPickerRatio * pickerSize;\n  var pickerPadding = indicatorSize / 3;\n  var indicatorRadius = pickerSize / 2 - indicatorSize / 2 - pickerPadding;\n  var mx = pickerSize / 2;\n  var my = pickerSize / 2;\n  var dx = Math.cos(angle) * indicatorRadius;\n  var dy = Math.sin(angle) * indicatorRadius;\n  return {\n    picker: {\n      padding: pickerPadding,\n      width: pickerSize,\n      height: pickerSize\n    },\n    pickerIndicator: (_b = {\n      top: mx + dx - indicatorSize / 2\n    }, _b[isRTL ? \"right\" : \"left\"] = my + dy - indicatorSize / 2, _b.width = indicatorSize, _b.height = indicatorSize, _b.borderRadius = indicatorSize / 2, _b.backgroundColor = indicatorColor, _b),\n    selectedPreview: {\n      width: summarySize / 2,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: Math.floor(pickerSize / 2),\n      borderTopRightRadius: summarySize / 2,\n      borderBottomRightRadius: summarySize / 2,\n      backgroundColor: selectedColor\n    },\n    originalPreview: {\n      width: Math.ceil(summarySize / 2),\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderTopLeftRadius: summarySize / 2,\n      borderBottomLeftRadius: summarySize / 2,\n      backgroundColor: oldColor\n    },\n    selectedFullPreview: {\n      width: summarySize,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderRadius: summarySize / 2,\n      backgroundColor: selectedColor\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  pickerContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pickerImage: {\n    flex: 1,\n    width: null,\n    height: null\n  },\n  pickerIndicator: {\n    position: \"absolute\",\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    shadowRadius: 4,\n    elevation: 5\n  },\n  selectedPreview: {\n    position: \"absolute\",\n    borderLeftWidth: 0\n  },\n  originalPreview: {\n    position: \"absolute\",\n    borderRightWidth: 0\n  },\n  selectedFullPreview: {\n    position: \"absolute\"\n  },\n  pickerAlignment: {\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["../src/HoloColorPicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {\n  I18nManager,\n  Image,\n  InteractionManager,\n  PanResponderInstance,\n  Slider,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n} from \"react-native\"\nimport tinycolor from \"tinycolor2\"\n\nimport { HsvColor, IPickerProps, Point2D } from \"./typeHelpers\"\nimport { createPanResponder } from \"./utils\"\n\ntype SliderProps = {\n  onValueChange?: (value: number) => void;\n  value?: number;\n};\n\nexport interface IHoloPickerProps extends IPickerProps {\n  sliderComponent?: React.Component<SliderProps>;\n}\n\nexport type IHoloPickerState = {\n  color: HsvColor;\n  pickerSize: number;\n};\n\nexport class HoloColorPicker extends React.PureComponent<\n  IHoloPickerProps,\n  IHoloPickerState\n> {\n  private _layout: { width: number; height: number; x: number; y: number };\n  private _pageX: number;\n  private _pageY: number;\n  private _isRTL: boolean;\n  private _pickerResponder: PanResponderInstance;\n\n  constructor(props: IHoloPickerProps, ctx: any) {\n    super(props, ctx)\n    const state = {\n      color: { h: 0, s: 1, v: 1 },\n      pickerSize: null,\n    }\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv()\n    }\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv()\n    }\n    this.state = state\n    this._layout = { width: 0, height: 0, x: 0, y: 0 }\n    this._pageX = 0\n    this._pageY = 0\n    this._onLayout = this._onLayout.bind(this)\n    this._onSValueChange = this._onSValueChange.bind(this)\n    this._onVValueChange = this._onVValueChange.bind(this)\n    this._onColorSelected = this._onColorSelected.bind(this)\n    this._onOldColorSelected = this._onOldColorSelected.bind(this)\n    this._isRTL = I18nManager.isRTL\n    this._pickerResponder = createPanResponder({\n      onStart: this._handleColorChange,\n      onMove: this._handleColorChange,\n    })\n  }\n\n  _getColor() {\n    const passedColor =\n      typeof this.props.color === \"string\"\n        ? tinycolor(this.props.color).toHsv()\n        : this.props.color\n    return passedColor || this.state.color\n  }\n\n  _onColorSelected() {\n    const { onColorSelected } = this.props\n    const color = tinycolor(this._getColor()).toHexString()\n    onColorSelected && onColorSelected(color)\n  }\n\n  _onOldColorSelected() {\n    const { oldColor, onOldColorSelected } = this.props\n    const color = tinycolor(oldColor)\n    this.setState({ color: color.toHsv() })\n    onOldColorSelected && onOldColorSelected(color.toHexString())\n  }\n\n  _onSValueChange(s: number) {\n    const { h, v } = this._getColor()\n    this._onColorChange({ h, s, v })\n  }\n\n  _onVValueChange(v: number) {\n    const { h, s } = this._getColor()\n    this._onColorChange({ h, s, v })\n  }\n\n  _onColorChange(color: { h: number; s: any; v: any }) {\n    this.setState({ color })\n    if (this.props.onColorChange) {\n      this.props.onColorChange(color)\n    }\n  }\n\n  _onLayout(l: {\n    nativeEvent: {\n      layout: { width: number; height: number; x: number; y: number };\n    };\n  }) {\n    this._layout = l.nativeEvent.layout\n    const { width, height } = this._layout\n    const pickerSize = Math.min(width, height)\n    if (this.state.pickerSize !== pickerSize) {\n      this.setState({ pickerSize })\n    }\n    // layout.x, layout.y is always 0\n    // we always measure because layout is the same even though picker is moved on the page\n    InteractionManager.runAfterInteractions(() => {\n      // measure only after (possible) animation ended\n      this.refs.pickerContainer &&\n        (this.refs.pickerContainer as any).measure(\n          (\n            x: number,\n            y: number,\n            width: number,\n            height: number,\n            pageX: number,\n            pageY: number\n          ) => {\n            // picker position in the screen\n            this._pageX = pageX\n            this._pageY = pageY\n          }\n        )\n    })\n  }\n\n  _handleColorChange = ({ x, y }: Point2D) => {\n    const { s, v } = this._getColor()\n    const marginLeft = (this._layout.width - this.state.pickerSize) / 2\n    const marginTop = (this._layout.height - this.state.pickerSize) / 2\n    const relativeX = x - this._pageX - marginLeft\n    const relativeY = y - this._pageY - marginTop\n    const h = this._computeHValue(relativeX, relativeY)\n    this._onColorChange({ h, s, v })\n\n    return true\n  };\n\n  _computeHValue(x: number, y: number) {\n    const mx = this.state.pickerSize / 2\n    const my = this.state.pickerSize / 2\n    const dx = x - mx\n    const dy = y - my\n    const rad = Math.atan2(dx, dy) + Math.PI + Math.PI / 2\n    return ((rad * 180) / Math.PI) % 360\n  }\n\n  _hValueToRad(deg: number) {\n    const rad = (deg * Math.PI) / 180\n    return rad - Math.PI - Math.PI / 2\n  }\n\n  _getSlider(): typeof Slider {\n    if (this.props.hideSliders) {\n      return undefined\n    }\n\n    if (this.props.sliderComponent) {\n      return this.props.sliderComponent as any\n    }\n\n    if (!Slider) {\n      throw new Error(\n        \"You need to install `@react-native-community/slider` and pass it (or any other Slider compatible component) as `sliderComponent` prop\"\n      )\n    }\n\n    return Slider\n  }\n\n  getColor() {\n    return tinycolor(this._getColor()).toHexString()\n  }\n\n  render() {\n    const { pickerSize } = this.state\n    const { oldColor, style } = this.props\n\n    const color = this._getColor()\n    const { h, s, v } = color\n    const angle = this._hValueToRad(h)\n    const selectedColor = tinycolor(color).toHexString()\n    const indicatorColor = tinycolor({ h, s: 1, v: 1 }).toHexString()\n\n    const computed = makeComputedStyles({\n      pickerSize,\n      selectedColor,\n      indicatorColor,\n      oldColor,\n      angle,\n      isRTL: this._isRTL,\n    })\n\n    const SliderComp = this._getSlider()\n\n    return (\n      <View style={style}>\n        <View\n          onLayout={this._onLayout}\n          ref=\"pickerContainer\"\n          style={styles.pickerContainer}\n        >\n          {!pickerSize ? null : (\n            <View>\n              <View\n                {...this._pickerResponder.panHandlers}\n                style={[computed.picker]}\n                collapsable={false}\n              >\n                <Image\n                  source={require(\"../resources/color-circle.png\")}\n                  resizeMode=\"contain\"\n                  style={[styles.pickerImage]}\n                />\n                <View\n                  style={[styles.pickerIndicator, computed.pickerIndicator]}\n                />\n              </View>\n              {oldColor && (\n                <TouchableOpacity\n                  style={[styles.selectedPreview, computed.selectedPreview]}\n                  onPress={this._onColorSelected}\n                  activeOpacity={0.7}\n                />\n              )}\n              {oldColor && (\n                <TouchableOpacity\n                  style={[styles.originalPreview, computed.originalPreview]}\n                  onPress={this._onOldColorSelected}\n                  activeOpacity={0.7}\n                />\n              )}\n              {!oldColor && (\n                <TouchableOpacity\n                  style={[\n                    styles.selectedFullPreview,\n                    computed.selectedFullPreview,\n                  ]}\n                  onPress={this._onColorSelected}\n                  activeOpacity={0.7}\n                />\n              )}\n            </View>\n          )}\n        </View>\n        {this.props.hideSliders ? null : (\n          <View>\n            <SliderComp value={s} onValueChange={this._onSValueChange} />\n            <SliderComp value={v} onValueChange={this._onVValueChange} />\n          </View>\n        )}\n      </View>\n    )\n  }\n}\n\nconst makeComputedStyles = ({\n  indicatorColor,\n  selectedColor,\n  oldColor,\n  angle,\n  pickerSize,\n  isRTL,\n}) => {\n  const summarySize = 0.5 * pickerSize\n  const indicatorPickerRatio = 42 / 510 // computed from picker image\n  const indicatorSize = indicatorPickerRatio * pickerSize\n  const pickerPadding = indicatorSize / 3\n  const indicatorRadius = pickerSize / 2 - indicatorSize / 2 - pickerPadding\n  const mx = pickerSize / 2\n  const my = pickerSize / 2\n  const dx = Math.cos(angle) * indicatorRadius\n  const dy = Math.sin(angle) * indicatorRadius\n  return {\n    picker: {\n      padding: pickerPadding,\n      width: pickerSize,\n      height: pickerSize,\n    },\n    pickerIndicator: {\n      top: mx + dx - indicatorSize / 2,\n      [isRTL ? \"right\" : \"left\"]: my + dy - indicatorSize / 2,\n      width: indicatorSize,\n      height: indicatorSize,\n      borderRadius: indicatorSize / 2,\n      backgroundColor: indicatorColor,\n    },\n    selectedPreview: {\n      width: summarySize / 2,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: Math.floor(pickerSize / 2),\n      borderTopRightRadius: summarySize / 2,\n      borderBottomRightRadius: summarySize / 2,\n      backgroundColor: selectedColor,\n    },\n    originalPreview: {\n      width: Math.ceil(summarySize / 2),\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderTopLeftRadius: summarySize / 2,\n      borderBottomLeftRadius: summarySize / 2,\n      backgroundColor: oldColor,\n    },\n    selectedFullPreview: {\n      width: summarySize,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderRadius: summarySize / 2,\n      backgroundColor: selectedColor,\n    },\n  }\n}\n\nconst styles = StyleSheet.create({\n  pickerContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pickerImage: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  pickerIndicator: {\n    position: \"absolute\",\n    // Shadow only works on iOS.\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: { width: 3, height: 3 },\n    shadowRadius: 4,\n\n    // This will elevate the view on Android, causing shadow to be drawn.\n    elevation: 5,\n  },\n  selectedPreview: {\n    position: \"absolute\",\n    borderLeftWidth: 0,\n  },\n  originalPreview: {\n    position: \"absolute\",\n    borderRightWidth: 0,\n  },\n  selectedFullPreview: {\n    position: \"absolute\",\n  },\n  pickerAlignment: {\n    alignItems: \"center\",\n  },\n})\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}