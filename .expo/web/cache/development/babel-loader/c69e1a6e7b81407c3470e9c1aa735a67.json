{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\Settings.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { Settings_Texts } from \"../languages/screens/Settings\";\nimport * as Log from \"../genericFunctions/logFunctions\";\nimport * as Database from \"../genericFunctions/databaseFunctions\";\nimport { genericStyles } from \"../constants/genericStyles\";\nimport PouchDB from 'pouchdb-react-native';\nimport { connect } from 'react-redux';\nimport { changeLanguage } from \"../redux/actions/appPreferencesActions\";\nimport { changeUser, changeUserPrivileges } from \"../redux/actions/userActions\";\nimport { changeLithologyListLanguage, changeStructureListLanguage, changeFossilListLanguage, changeNoCarbonatesRuleLanguage, changeCarbonatesRuleLanguage } from \"../redux/actions/libraryActions\";\n\nvar Settings = function (_Component) {\n  _inherits(Settings, _Component);\n\n  function Settings(props) {\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Settings).call(this, props));\n\n    _this.updateLanguage = function (newLanguage) {\n      var p = _this.props;\n      p.dispatchChangeLanguage(newLanguage);\n      p.dispatchChangeLithologyListLanguage(newLanguage);\n      p.dispatchChangeStructureListLanguage(newLanguage);\n      p.dispatchChangeFossilListLanguage(newLanguage);\n      p.dispatchChangeNoCarbonatesRuleLanguage(newLanguage);\n      p.dispacthChangeCarbonatesRuleLanguage(newLanguage);\n    };\n\n    _this.deletePersonalDatabase = function () {\n      var p = _this.props;\n\n      var deletePersonalDatabaseAux = function deletePersonalDatabaseAux(p) {\n        Database.deleteUserData(p.user_id);\n        Alert.alert(p.allMessages[12], p.allMessages[0]);\n      };\n\n      Alert.alert(p.allMessages[12], p.allMessages[15], [{\n        text: p.allMessages[13],\n        onPress: function onPress() {\n          return deletePersonalDatabaseAux(p);\n        }\n      }, {\n        text: p.allMessages[14]\n      }]);\n    };\n\n    _this.deleteOwnUserFromDatabase = function () {\n      var p = _this.props;\n\n      var deleteOwnUserFromDatabaseAux = function deleteOwnUserFromDatabaseAux(p) {\n        Database.deleteOwnUser(p.user_id);\n        Alert.alert(p.allMessages[12], p.allMessages[10]);\n        p.dispatchResetUser('unauthenticated');\n        p.dispatchResetUserPrivileges();\n        p.navigation.goBack();\n      };\n\n      Alert.alert(p.allMessages[12], p.allMessages[16], [{\n        text: p.allMessages[13],\n        onPress: function onPress() {\n          return deleteOwnUserFromDatabaseAux(p);\n        }\n      }, {\n        text: p.allMessages[14]\n      }]);\n    };\n\n    _this.deleteCompleteDatabase = function () {\n      var p = _this.props;\n\n      var deleteCompleteDatabaseAux = function deleteCompleteDatabaseAux(p) {\n        new PouchDB('lithodex').destroy().then(function () {\n          Database.dummy_database();\n          Alert.alert(p.allMessages[12], p.allMessages[0]);\n        }).catch(function (error) {\n          console.error(error.toString());\n        });\n        p.dispatchResetUser('unauthenticated');\n        p.dispatchResetUserPrivileges();\n        p.navigation.goBack();\n      };\n\n      Alert.alert(p.allMessages[12], p.allMessages[17], [{\n        text: p.allMessages[13],\n        onPress: function onPress() {\n          return deleteCompleteDatabaseAux(p);\n        }\n      }, {\n        text: p.allMessages[14]\n      }]);\n    };\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Log.log_action(2, this.props.user_id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        }\n      }, React.createElement(Text, {\n        style: styles.instructionTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        }\n      }, p.allMessages[1]), React.createElement(Picker, {\n        selectedValue: p.language,\n        style: {\n          height: 30,\n          width: '31.25%'\n        },\n        onValueChange: function onValueChange(itemValue) {\n          return _this2.updateLanguage(itemValue);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        }\n      }, React.createElement(Picker.Item, {\n        label: p.allMessages[2],\n        value: 'spanish',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        }\n      }), React.createElement(Picker.Item, {\n        label: p.allMessages[3],\n        value: 'english',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }))), React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        }\n      }, React.createElement(Text, {\n        style: styles.instructionTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }, p.allMessages[7]), React.createElement(Button, {\n        title: p.allMessages[5],\n        color: \"red\",\n        onPress: function onPress() {\n          return _this2.deletePersonalDatabase();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      })), p.user_id != '===?ยก18jswi..__q173x5gbxjf(()459jdcj' && p.user_id != 'unauthenticated' && React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }, React.createElement(Text, {\n        style: styles.instructionTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        }\n      }, p.allMessages[8]), React.createElement(Button, {\n        title: p.allMessages[9],\n        color: \"red\",\n        onPress: function onPress() {\n          return _this2.deleteOwnUserFromDatabase();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      })), p.privileges == 2 && React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        }\n      }, React.createElement(Text, {\n        style: styles.instructionTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        }\n      }, p.allMessages[4]), React.createElement(Button, {\n        title: p.allMessages[5],\n        color: \"red\",\n        onPress: function onPress() {\n          return _this2.deleteCompleteDatabase();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        }\n      }))));\n    }\n  }]);\n\n  return Settings;\n}(Component);\n\nSettings.navigationOptions = function (_ref) {\n  var screenProps = _ref.screenProps;\n  return {\n    title: Settings_Texts[screenProps.language][11],\n    headerTintColor: screenProps.headerTintColor,\n    headerStyle: _objectSpread({\n      backgroundColor: screenProps.headerBackgroundColor\n    }, genericStyles.navigationHeader)\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: 110,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  instructionTitle: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    fontWeight: 'bold',\n    fontSize: 17,\n    padding: 10,\n    paddingTop: 20,\n    textAlign: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    language: state.appPreferencesReducer.language,\n    allMessages: Settings_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    privileges: state.userReducer.privileges\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchChangeLanguage: function dispatchChangeLanguage(language) {\n      return dispatch(changeLanguage(language));\n    },\n    dispatchResetUser: function dispatchResetUser(user_id) {\n      return dispatch(changeUser(user_id));\n    },\n    dispatchResetUserPrivileges: function dispatchResetUserPrivileges() {\n      return dispatch(changeUserPrivileges(0));\n    },\n    dispatchChangeLithologyListLanguage: function dispatchChangeLithologyListLanguage(language) {\n      return dispatch(changeLithologyListLanguage(language));\n    },\n    dispatchChangeStructureListLanguage: function dispatchChangeStructureListLanguage(language) {\n      return dispatch(changeStructureListLanguage(language));\n    },\n    dispatchChangeFossilListLanguage: function dispatchChangeFossilListLanguage(language) {\n      return dispatch(changeFossilListLanguage(language));\n    },\n    dispatchChangeNoCarbonatesRuleLanguage: function dispatchChangeNoCarbonatesRuleLanguage(language) {\n      return dispatch(changeNoCarbonatesRuleLanguage(language));\n    },\n    dispacthChangeCarbonatesRuleLanguage: function dispacthChangeCarbonatesRuleLanguage(language) {\n      return dispatch(changeCarbonatesRuleLanguage(language));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geologรญa/Versiones de la aplicaciรณn/lithodex/src/screens/Settings.js"],"names":["React","Component","Settings_Texts","Log","Database","genericStyles","PouchDB","connect","changeLanguage","changeUser","changeUserPrivileges","changeLithologyListLanguage","changeStructureListLanguage","changeFossilListLanguage","changeNoCarbonatesRuleLanguage","changeCarbonatesRuleLanguage","Settings","props","updateLanguage","newLanguage","p","dispatchChangeLanguage","dispatchChangeLithologyListLanguage","dispatchChangeStructureListLanguage","dispatchChangeFossilListLanguage","dispatchChangeNoCarbonatesRuleLanguage","dispacthChangeCarbonatesRuleLanguage","deletePersonalDatabase","deletePersonalDatabaseAux","deleteUserData","user_id","Alert","alert","allMessages","text","onPress","deleteOwnUserFromDatabase","deleteOwnUserFromDatabaseAux","deleteOwnUser","dispatchResetUser","dispatchResetUserPrivileges","navigation","goBack","deleteCompleteDatabase","deleteCompleteDatabaseAux","destroy","then","dummy_database","catch","error","console","toString","log_action","styles","container","instructionTitle","language","height","width","itemValue","privileges","navigationOptions","screenProps","title","headerTintColor","headerStyle","backgroundColor","headerBackgroundColor","navigationHeader","StyleSheet","create","alignItems","justifyContent","fontWeight","fontSize","padding","paddingTop","textAlign","mapStateToProps","state","appPreferencesReducer","userReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;AAIA,SAAQC,cAAR;AACA,OAAO,KAAKC,GAAZ;AACA,OAAO,KAAKC,QAAZ;AACA,SAAQC,aAAR;AACA,OAAOC,OAAP,MAA6B,sBAA7B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT;AACA,SAASC,UAAT,EAAqBC,oBAArB;AACA,SAASC,2BAAT,EAAsCC,2BAAtC,EAAmEC,wBAAnE,EACSC,8BADT,EACyCC,4BADzC;;IAIMC,Q;;;AAEL,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAoBlBC,cApBkB,GAoBD,UAACC,WAAD,EAAiB;AACjC,UAAIC,CAAC,GAAG,MAAKH,KAAb;AACAG,MAAAA,CAAC,CAACC,sBAAF,CAAyBF,WAAzB;AACAC,MAAAA,CAAC,CAACE,mCAAF,CAAsCH,WAAtC;AACAC,MAAAA,CAAC,CAACG,mCAAF,CAAsCJ,WAAtC;AACAC,MAAAA,CAAC,CAACI,gCAAF,CAAmCL,WAAnC;AACAC,MAAAA,CAAC,CAACK,sCAAF,CAAyCN,WAAzC;AACAC,MAAAA,CAAC,CAACM,oCAAF,CAAuCP,WAAvC;AACA,KA5BiB;;AAAA,UA+BlBQ,sBA/BkB,GA+BO,YAAM;AAC9B,UAAIP,CAAC,GAAG,MAAKH,KAAb;;AAGA,UAAIW,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACR,CAAD,EAAO;AACtChB,QAAAA,QAAQ,CAACyB,cAAT,CAAwBT,CAAC,CAACU,OAA1B;AACAC,QAAAA,KAAK,CAACC,KAAN,CAAYZ,CAAC,CAACa,WAAF,CAAc,EAAd,CAAZ,EAA+Bb,CAAC,CAACa,WAAF,CAAc,CAAd,CAA/B;AACA,OAHD;;AAMAF,MAAAA,KAAK,CAACC,KAAN,CAAYZ,CAAC,CAACa,WAAF,CAAc,EAAd,CAAZ,EAA+Bb,CAAC,CAACa,WAAF,CAAc,EAAd,CAA/B,EACC,CAEC;AAACC,QAAAA,IAAI,EAAEd,CAAC,CAACa,WAAF,CAAc,EAAd,CAAP;AAA0BE,QAAAA,OAAO,EAAE;AAAA,iBAAMP,yBAAyB,CAACR,CAAD,CAA/B;AAAA;AAAnC,OAFD,EAIC;AAACc,QAAAA,IAAI,EAAEd,CAAC,CAACa,WAAF,CAAc,EAAd;AAAP,OAJD,CADD;AAQA,KAjDiB;;AAAA,UAoDlBG,yBApDkB,GAoDU,YAAM;AACjC,UAAIhB,CAAC,GAAG,MAAKH,KAAb;;AAGA,UAAIoB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACjB,CAAD,EAAO;AACzChB,QAAAA,QAAQ,CAACkC,aAAT,CAAuBlB,CAAC,CAACU,OAAzB;AACAC,QAAAA,KAAK,CAACC,KAAN,CAAYZ,CAAC,CAACa,WAAF,CAAc,EAAd,CAAZ,EAA+Bb,CAAC,CAACa,WAAF,CAAc,EAAd,CAA/B;AAEAb,QAAAA,CAAC,CAACmB,iBAAF,CAAoB,iBAApB;AACAnB,QAAAA,CAAC,CAACoB,2BAAF;AACApB,QAAAA,CAAC,CAACqB,UAAF,CAAaC,MAAb;AACA,OAPD;;AAUAX,MAAAA,KAAK,CAACC,KAAN,CAAYZ,CAAC,CAACa,WAAF,CAAc,EAAd,CAAZ,EAA+Bb,CAAC,CAACa,WAAF,CAAc,EAAd,CAA/B,EACC,CAEC;AAACC,QAAAA,IAAI,EAAEd,CAAC,CAACa,WAAF,CAAc,EAAd,CAAP;AAA0BE,QAAAA,OAAO,EAAE;AAAA,iBAAME,4BAA4B,CAACjB,CAAD,CAAlC;AAAA;AAAnC,OAFD,EAIC;AAACc,QAAAA,IAAI,EAAEd,CAAC,CAACa,WAAF,CAAc,EAAd;AAAP,OAJD,CADD;AAQA,KA1EiB;;AAAA,UA6ElBU,sBA7EkB,GA6EO,YAAM;AAC9B,UAAIvB,CAAC,GAAG,MAAKH,KAAb;;AAGA,UAAI2B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACxB,CAAD,EAAO;AACtC,YAAId,OAAJ,CAAY,UAAZ,EAAwBuC,OAAxB,GACCC,IADD,CACM,YAAY;AAChB1C,UAAAA,QAAQ,CAAC2C,cAAT;AACAhB,UAAAA,KAAK,CAACC,KAAN,CAAYZ,CAAC,CAACa,WAAF,CAAc,EAAd,CAAZ,EAA+Bb,CAAC,CAACa,WAAF,CAAc,CAAd,CAA/B;AACA,SAJF,EAIIe,KAJJ,CAIU,UAAUC,KAAV,EAAiB;AACzBC,UAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,QAAN,EAAd;AACA,SANF;AAOA/B,QAAAA,CAAC,CAACmB,iBAAF,CAAoB,iBAApB;AACAnB,QAAAA,CAAC,CAACoB,2BAAF;AACApB,QAAAA,CAAC,CAACqB,UAAF,CAAaC,MAAb;AACA,OAXD;;AAcAX,MAAAA,KAAK,CAACC,KAAN,CAAYZ,CAAC,CAACa,WAAF,CAAc,EAAd,CAAZ,EAA+Bb,CAAC,CAACa,WAAF,CAAc,EAAd,CAA/B,EACC,CAEC;AAACC,QAAAA,IAAI,EAAEd,CAAC,CAACa,WAAF,CAAc,EAAd,CAAP;AAA0BE,QAAAA,OAAO,EAAE;AAAA,iBAAMS,yBAAyB,CAACxB,CAAD,CAA/B;AAAA;AAAnC,OAFD,EAIC;AAACc,QAAAA,IAAI,EAAEd,CAAC,CAACa,WAAF,CAAc,EAAd;AAAP,OAJD,CADD;AAQA,KAvGiB;;AAAA;AAEjB;;;;wCAamB;AACnB9B,MAAAA,GAAG,CAACiD,UAAJ,CAAe,CAAf,EAAkB,KAAKnC,KAAL,CAAWa,OAA7B;AACA;;;6BAyFQ;AAAA;;AACR,UAAIV,CAAC,GAAG,KAAKH,KAAb;AAEA,aACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAGC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIoC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCnC,CAAC,CAACa,WAAF,CAAc,CAAd,CAAzC,CAFD,EAGC,oBAAC,MAAD;AACC,QAAA,aAAa,EAAIb,CAAC,CAACoC,QADpB;AAEC,QAAA,KAAK,EAAY;AAACC,UAAAA,MAAM,EAAE,EAAT;AAAaC,UAAAA,KAAK,EAAE;AAApB,SAFlB;AAGC,QAAA,aAAa,EAAI,uBAACC,SAAD;AAAA,iBAAe,MAAI,CAACzC,cAAL,CAAoByC,SAApB,CAAf;AAAA,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAIvC,CAAC,CAACa,WAAF,CAAc,CAAd,CAAtB;AAAyC,QAAA,KAAK,EAAI,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,QALD,EAMC,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAIb,CAAC,CAACa,WAAF,CAAc,CAAd,CAAtB;AAAyC,QAAA,KAAK,EAAI,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,QAND,CAHD,CAHD,EAiBC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIoB,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCnC,CAAC,CAACa,WAAF,CAAc,CAAd,CAAzC,CAFD,EAGC,oBAAC,MAAD;AACC,QAAA,KAAK,EAAMb,CAAC,CAACa,WAAF,CAAc,CAAd,CADZ;AAEC,QAAA,KAAK,EAAK,KAFX;AAGC,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACN,sBAAL,EAAN;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CAjBD,EA6BIP,CAAC,CAACU,OAAF,IAAa,sCAAd,IAA0DV,CAAC,CAACU,OAAF,IAAa,iBAAvE,IACD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIuB,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCnC,CAAC,CAACa,WAAF,CAAc,CAAd,CAAzC,CAFD,EAGC,oBAAC,MAAD;AACC,QAAA,KAAK,EAAMb,CAAC,CAACa,WAAF,CAAc,CAAd,CADZ;AAEC,QAAA,KAAK,EAAK,KAFX;AAGC,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACG,yBAAL,EAAN;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CA9BF,EA0CIhB,CAAC,CAACwC,UAAF,IAAgB,CAAjB,IACD,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIP,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCnC,CAAC,CAACa,WAAF,CAAc,CAAd,CAAzC,CAFD,EAGC,oBAAC,MAAD;AACC,QAAA,KAAK,EAAMb,CAAC,CAACa,WAAF,CAAc,CAAd,CADZ;AAEC,QAAA,KAAK,EAAK,KAFX;AAGC,QAAA,OAAO,EAAI;AAAA,iBAAM,MAAI,CAACU,sBAAL,EAAN;AAAA,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,CA3CF,CADD,CADD;AA0DA;;;;EAzKqB1C,S;;AAAjBe,Q,CAOE6C,iB,GAAoB;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,SAAsB;AAChDC,IAAAA,KAAK,EAAY7D,cAAc,CAAC4D,WAAW,CAACN,QAAb,CAAd,CAAqC,EAArC,CAD+B;AAEhDQ,IAAAA,eAAe,EAAEF,WAAW,CAACE,eAFmB;AAGhDC,IAAAA,WAAW;AACVC,MAAAA,eAAe,EAAEJ,WAAW,CAACK;AADnB,OAEP9D,aAAa,CAAC+D,gBAFP;AAHqC,GAAtB;AAAA,C;;AAsK5B,IAAMf,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAGhChB,EAAAA,SAAS,EAAE;AACVG,IAAAA,MAAM,EAAU,GADN;AAEVc,IAAAA,UAAU,EAAM,QAFN;AAGVC,IAAAA,cAAc,EAAE;AAHN,GAHqB;AAUhCjB,EAAAA,gBAAgB,EAAE;AACjBgB,IAAAA,UAAU,EAAM,YADC;AAEjBC,IAAAA,cAAc,EAAE,YAFC;AAGjBC,IAAAA,UAAU,EAAM,MAHC;AAIjBC,IAAAA,QAAQ,EAAQ,EAJC;AAKjBC,IAAAA,OAAO,EAAS,EALC;AAMjBC,IAAAA,UAAU,EAAM,EANC;AAOjBC,IAAAA,SAAS,EAAO;AAPC;AAVc,CAAlB,CAAf;;AAuBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNvB,IAAAA,QAAQ,EAAKuB,KAAK,CAACC,qBAAN,CAA4BxB,QADnC;AAENvB,IAAAA,WAAW,EAAE/B,cAAc,CAAC6E,KAAK,CAACC,qBAAN,CAA4BxB,QAA7B,CAFrB;AAGN1B,IAAAA,OAAO,EAAMiD,KAAK,CAACE,WAAN,CAAkBnD,OAHzB;AAIN8B,IAAAA,UAAU,EAAGmB,KAAK,CAACE,WAAN,CAAkBrB;AAJzB,GAAP;AAMA,CAPD;;AASA,IAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAO;AACN9D,IAAAA,sBAAsB,EAAE,gCAACmC,QAAD;AAAA,aAAc2B,QAAQ,CAAC3E,cAAc,CAACgD,QAAD,CAAf,CAAtB;AAAA,KADlB;AAENjB,IAAAA,iBAAiB,EAAO,2BAACT,OAAD;AAAA,aAAcqD,QAAQ,CAAC1E,UAAU,CAACqB,OAAD,CAAX,CAAtB;AAAA,KAFlB;AAGNU,IAAAA,2BAA2B,EAAE;AAAA,aAAS2C,QAAQ,CAACzE,oBAAoB,CAAC,CAAD,CAArB,CAAjB;AAAA,KAHvB;AAINY,IAAAA,mCAAmC,EAAK,6CAACkC,QAAD;AAAA,aAAc2B,QAAQ,CAACxE,2BAA2B,CAAC6C,QAAD,CAA5B,CAAtB;AAAA,KAJlC;AAKNjC,IAAAA,mCAAmC,EAAK,6CAACiC,QAAD;AAAA,aAAc2B,QAAQ,CAACvE,2BAA2B,CAAC4C,QAAD,CAA5B,CAAtB;AAAA,KALlC;AAMNhC,IAAAA,gCAAgC,EAAQ,0CAACgC,QAAD;AAAA,aAAc2B,QAAQ,CAACtE,wBAAwB,CAAC2C,QAAD,CAAzB,CAAtB;AAAA,KANlC;AAON/B,IAAAA,sCAAsC,EAAE,gDAAC+B,QAAD;AAAA,aAAc2B,QAAQ,CAACrE,8BAA8B,CAAC0C,QAAD,CAA/B,CAAtB;AAAA,KAPlC;AAQN9B,IAAAA,oCAAoC,EAAI,8CAAC8B,QAAD;AAAA,aAAc2B,QAAQ,CAACpE,4BAA4B,CAACyC,QAAD,CAA7B,CAAtB;AAAA;AARlC,GAAP;AAUA,CAXD;;AAaA,eAAejD,OAAO,CAACuE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ClE,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, Image, ActivityIndicator,\n\t    Alert, Button, ScrollView, Picker } from 'react-native';\n\nimport {Settings_Texts} from '../languages/screens/Settings'\nimport * as Log         from '../genericFunctions/logFunctions'\nimport * as Database    from '../genericFunctions/databaseFunctions'\nimport {genericStyles}  from '../constants/genericStyles'\nimport PouchDB          from 'pouchdb-react-native'\n\nimport { connect } from 'react-redux'\nimport { changeLanguage } from '../redux/actions/appPreferencesActions'\nimport { changeUser, changeUserPrivileges } from '../redux/actions/userActions'\nimport { changeLithologyListLanguage, changeStructureListLanguage, changeFossilListLanguage,\n         changeNoCarbonatesRuleLanguage, changeCarbonatesRuleLanguage } from '../redux/actions/libraryActions'\n\n\nclass Settings extends Component {\n\t\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\t// Formato de la cabecera de la vista\n\tstatic navigationOptions = ({ screenProps }) => ({\n\t\ttitle:           Settings_Texts[screenProps.language][11],\n\t\theaderTintColor: screenProps.headerTintColor,\n\t\theaderStyle: {\n\t\t\tbackgroundColor: screenProps.headerBackgroundColor,\n\t\t\t...genericStyles.navigationHeader,\n\t\t}\n\t});\n\n\t// Para registrar en el \"log\" que se ha ingresado en el menรบ de configuraciรณn\n\tcomponentDidMount() {\n\t\tLog.log_action(2, this.props.user_id);    \n\t}\n\n\t// Procedimiento para cambiar el idioma\n\tupdateLanguage = (newLanguage) => {\n\t\tlet p = this.props;\n\t\tp.dispatchChangeLanguage(newLanguage); // Actualizamos el idioma en el estado global que se mantiene en la tienda de Redux\n\t\tp.dispatchChangeLithologyListLanguage(newLanguage); // Actualizamos la lista de litologรญas debido al nuevo idioma\n\t\tp.dispatchChangeStructureListLanguage(newLanguage); // Actualizamos la lista de estructuras sedimentarias debido al nuevo idioma  \n\t\tp.dispatchChangeFossilListLanguage(newLanguage); // Actualizamos la lista de estructuras sedimentarias debido al nuevo idioma\n\t\tp.dispatchChangeNoCarbonatesRuleLanguage(newLanguage); // Actualizamos la regla de los no carbonatos debido al nuevo idioma\n\t\tp.dispacthChangeCarbonatesRuleLanguage(newLanguage); // Actualizamos la regla de los carbonatos debido al nuevo idioma\n\t}\n\n\t// Procedimiento para borrar la base de datos del usuario (sรณlo afloramientos y nรบcleos; no se borra su informaciรณn personal)\n\tdeletePersonalDatabase = () => {\n\t\tlet p = this.props;\t\n\n\t\t// Procedimiento auxiliar que se invoca cuando se confirma que se desea eliminar la base de datos personal\n\t\tlet deletePersonalDatabaseAux = (p) => {\n\t\t\tDatabase.deleteUserData(p.user_id);\n\t\t\tAlert.alert(p.allMessages[12], p.allMessages[0]);\n\t\t}\n\n\t\t// Alerta: \"ยฟSeguro de que desea eliminar su base de datos personal?\"\n\t\tAlert.alert(p.allMessages[12], p.allMessages[15],\n\t\t\t[\n\t\t\t\t// Mensaje: \"Sรญ\"\n\t\t\t\t{text: p.allMessages[13], onPress: () => deletePersonalDatabaseAux(p)},\n\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t{text: p.allMessages[14]},\n\t\t\t] \n\t\t)\n\t}\n\n\t// Procedimiento para que un usuario se borre a sรญ mismo de la base de datos\n\tdeleteOwnUserFromDatabase = () => {\n\t\tlet p = this.props;\t\n\n\t\t// Procedimiento auxiliar que se invoca cuando se confirma que se desea eliminar el usuario del sistema\n\t\tlet deleteOwnUserFromDatabaseAux = (p) => {\n\t\t\tDatabase.deleteOwnUser(p.user_id);\n\t\t\tAlert.alert(p.allMessages[12], p.allMessages[10]);\n\n\t\t\tp.dispatchResetUser('unauthenticated');\n\t\t\tp.dispatchResetUserPrivileges();\n\t\t\tp.navigation.goBack();\n\t\t}\n\n\t\t// Alerta: \"ยฟSeguro de que desea eliminar su usuario del sistema?\"\n\t\tAlert.alert(p.allMessages[12], p.allMessages[16],\n\t\t\t[\n\t\t\t\t// Mensaje: \"Sรญ\"\n\t\t\t\t{text: p.allMessages[13], onPress: () => deleteOwnUserFromDatabaseAux(p)},\n\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t{text: p.allMessages[14]},\n\t\t\t] \n\t\t)\n\t}\n\n\t// Procedimiento para borrar la base de datos completa. Disponible sรณlo para el administrador\n\tdeleteCompleteDatabase = () => {\n\t\tlet p = this.props;\t\n\n\t\t// Procedimiento auxiliar que se invoca cuando se confirma que se desea eliminar la base de datos completa\n\t\tlet deleteCompleteDatabaseAux = (p) => {\n\t\t\tnew PouchDB('lithodex').destroy().\n\t\t\t\tthen(function () {\n\t\t\t\t\tDatabase.dummy_database();\n\t\t\t\t\tAlert.alert(p.allMessages[12], p.allMessages[0]);\n\t\t\t\t}).catch(function (error) {\n\t\t\t\t\tconsole.error(error.toString())\n\t\t\t\t})\n\t\t\tp.dispatchResetUser('unauthenticated');\n\t\t\tp.dispatchResetUserPrivileges();\n\t\t\tp.navigation.goBack();\n\t\t}\n\n\t\t// Alerta: \"ยฟSeguro de que desea eliminar la base de datos en su totalidad?\"\n\t\tAlert.alert(p.allMessages[12], p.allMessages[17],\n\t\t\t[\n\t\t\t\t// Mensaje: \"Sรญ\"\n\t\t\t\t{text: p.allMessages[13], onPress: () => deleteCompleteDatabaseAux(p)},\n\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t{text: p.allMessages[14]},\n\t\t\t] \n\t\t)\n\t}\n\n\t// Lo que se le mostrarรก al usuario\n\trender (){\n\t\tlet p = this.props;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<ScrollView>\n\n\t\t\t\t\t{/*Secciรณn para seleccionar el idioma en el que se muestran los textos en la aplicaciรณn*/}\n\t\t\t\t\t<View style = {styles.container}>\n\t\t\t\t\t\t{/*Mensaje: \"Seleccionar idioma\"*/}\n\t\t\t\t\t\t<Text style = {styles.instructionTitle}>{p.allMessages[1]}</Text>\n\t\t\t\t\t\t<Picker\n\t\t\t\t\t\t\tselectedValue = {p.language}\n\t\t\t\t\t\t\tstyle         = {{height: 30, width: '31.25%'}}\n\t\t\t\t\t\t\tonValueChange = {(itemValue) => this.updateLanguage(itemValue)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Picker.Item label = {p.allMessages[2]}  value = {'spanish'}/>\n\t\t\t\t\t\t\t<Picker.Item label = {p.allMessages[3]}  value = {'english'}/>\n\t\t\t\t\t\t</Picker>\n\t\t\t      \t</View>\n\n\t\t\t\t\t{/*Secciรณn para borrar toda la base de datos, incluyendo a los otros usuarios. Sรณlo lo puede hacer el administrador*/}\n\t\t\t\t\t<View style = {styles.container}>\n\t\t\t\t\t\t{/*Mensaje: \"Borrar base de datos personal\"*/}\n\t\t\t\t\t\t<Text style = {styles.instructionTitle}>{p.allMessages[7]}</Text>\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\ttitle   = {p.allMessages[5]} /// Mensaje: \"Borrar base de datos\"\n\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\tonPress = {() => this.deletePersonalDatabase()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t{/*Secciรณn para eliminar su propio usuario. El usuario no autenticado no puede borrarse a sรญ mismo, ni tampoco el administrador primario, \n\t\t\t\t\t   que es el que viene por defecto en la base de datos, puesto que siempre necesitamos que haya al menos un administrador */}\n\t\t\t\t\t{ (p.user_id != '===?ยก18jswi..__q173x5gbxjf(()459jdcj') && (p.user_id != 'unauthenticated') &&\n\t\t\t\t\t\t<View style = {styles.container}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Eliminar usuario propio de la base de datos\"*/}\n\t\t\t\t\t\t\t<Text style = {styles.instructionTitle}>{p.allMessages[8]}</Text>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[9]} /// Mensaje: \"Eliminar usuario\"\n\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\tonPress = {() => this.deleteOwnUserFromDatabase()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/*Secciรณn para borrar toda la base de datos, incluyendo a los otros usuarios. Sรณlo lo puede hacer el administrador*/}\n\t\t\t\t\t{ (p.privileges == 2) &&\n\t\t\t\t\t\t<View style = {styles.container}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Borrar base de datos completa\"*/}\n\t\t\t\t\t\t\t<Text style = {styles.instructionTitle}>{p.allMessages[4]}</Text>\n\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[5]} /// Mensaje: \"Borrar base de datos\"\n\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\tonPress = {() => this.deleteCompleteDatabase()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t}\n\t\t      \t</ScrollView>\n      \t\t</View>\n\t\t);\n\t}\n}\n\n/// Variable para darle formato a los diversos componentes de esta pantalla\nconst styles = StyleSheet.create({\n\n\t// Empleado para dividir por secciones cada una de las funciones de esta vista.\n\tcontainer: {\n\t\theight:         110,\n\t\talignItems:     'center',\n\t\tjustifyContent: 'center',\n\t},\n\n\t// Empleado para mostrar el texto que indica el tipo de instrucciรณn\n\tinstructionTitle: {\n\t\talignItems:     'flex-start',\n\t\tjustifyContent: 'flex-start',\n\t\tfontWeight:     'bold',\n\t\tfontSize:       17,\n\t\tpadding:        10,\n\t\tpaddingTop:     20,\n\t\ttextAlign:      'center'\n\t},\n\n});\n\n// Funciรณn para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tlanguage:    state.appPreferencesReducer.language,\n\t\tallMessages: Settings_Texts[state.appPreferencesReducer.language],\n\t\tuser_id:     state.userReducer.user_id,\n\t\tprivileges:  state.userReducer.privileges,\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchChangeLanguage: (language) => dispatch(changeLanguage(language)),\n\t\tdispatchResetUser:      (user_id)  => dispatch(changeUser(user_id)),\n\t\tdispatchResetUserPrivileges: ()    => dispatch(changeUserPrivileges(0)),\n\t\tdispatchChangeLithologyListLanguage:    (language) => dispatch(changeLithologyListLanguage(language)),\n\t\tdispatchChangeStructureListLanguage:    (language) => dispatch(changeStructureListLanguage(language)),   \n\t\tdispatchChangeFossilListLanguage:       (language) => dispatch(changeFossilListLanguage(language)),\n\t\tdispatchChangeNoCarbonatesRuleLanguage: (language) => dispatch(changeNoCarbonatesRuleLanguage(language)), \n\t\tdispacthChangeCarbonatesRuleLanguage:   (language) => dispatch(changeCarbonatesRuleLanguage(language)), \n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)"]},"metadata":{},"sourceType":"module"}