{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\objectsOfStudy\\\\ObjectForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Button as ButtonWithIcon } from 'react-native-elements';\nimport DatePicker from 'react-native-datepicker';\nimport { connect } from 'react-redux';\nimport { changeLoadView, changeStratumComponentPermission } from \"../../redux/actions/popUpActions\";\nimport { ObjectForm_Texts } from \"../../languages/screens/objectsOfStudy/ObjectForm\";\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\nimport * as ExpoFileSystem from 'expo-file-system';\nimport * as ExpoDocumentPicker from 'expo-document-picker';\nimport PickerCheckBox from \"../../modifiedLibraries/PickerCheckBox\";\nimport * as Log from \"../../genericFunctions/logFunctions\";\nimport * as Database from \"../../genericFunctions/databaseFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR } from \"../../constants/genericStyles\";\nimport { UNAUTHENTICATED_ID } from \"../../constants/appConstants\";\nimport * as D from \"../../constants/Dimensions\";\nimport * as auxiliarFunctions from \"../../genericFunctions/otherFunctions\";\nimport { readCoreFile } from \"../../genericFunctions/readFileFunctions\";\nimport _ from \"lodash\";\n\nvar ObjectForm = function (_Component) {\n  _inherits(ObjectForm, _Component);\n\n  function ObjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, ObjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ObjectForm).call(this, props));\n\n    _this._getLocationAsync = function _callee() {\n      var _await$Permissions$as, status, geographicLocation, longitude, latitude, altitude;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              if (!(status === 'granted')) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 7:\n              geographicLocation = _context.sent;\n              longitude = JSON.stringify(geographicLocation.coords.longitude);\n              latitude = JSON.stringify(geographicLocation.coords.latitude);\n              altitude = JSON.stringify(geographicLocation.coords.altitude).substring(0, 10);\n\n              if (_this.state.latitude[0] == null && _this.state.longitude[0] == null) {\n                _this.onChangeGeographicCoordinate('latitude', latitude);\n\n                _this.onChangeGeographicCoordinate('longitude', longitude);\n              }\n\n              if (_this.props.navigation.getParam('isCore')) {\n                if (!_this.props.navigation.getParam('GL')) {\n                  _this.onChangeDF_GL('GL', altitude, 0);\n                }\n              } else if (!_this.props.navigation.getParam('baseHeight')) {\n                _this.onChangeBase_EndHeight('baseHeight', altitude, 0);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.onChangePlainText = function (variableName, text) {\n      if (text == \" \" || text == \"\") {\n        text = null;\n      }\n\n      var object = {};\n      object[variableName] = text;\n\n      _this.setState(object);\n    };\n\n    _this.onChangeBase_EndHeight = function _callee2(variableName, text, unit) {\n      var result, object;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              object = {};\n\n              if (!auxiliarFunctions.isValidDecimalNumber(text)) {\n                _context2.next = 5;\n                break;\n              }\n\n              if (text != \"-\") {\n                if (unit == 0) {\n                  result = [[parseFloat(text), text], auxiliarFunctions.metersToFeet(text)];\n                } else {\n                  result = [auxiliarFunctions.feetToMeters(text), [parseFloat(text), text]];\n                }\n              } else {\n                result = [[null, \"-\"], [null, \"-\"]];\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 5:\n              if (text == \" \" || text == \"\") {} else {\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[5]);\n              }\n\n              object[variableName] = [[0, \"0\"], [0, \"0\"]];\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(_this.setState(object));\n\n            case 9:\n              result = [[null, null], [null, null]];\n\n            case 10:\n              object[variableName] = result;\n\n              _this.setState(object);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.onChangeGeographicCoordinate = function _callee3(variableName, text) {\n      var result, object;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              object = {};\n\n              if (!auxiliarFunctions.isValidDecimalNumber(text)) {\n                _context3.next = 5;\n                break;\n              }\n\n              if (text != \"-\") {\n                result = [parseFloat(text), text];\n              } else {\n                result = [null, text];\n              }\n\n              _context3.next = 10;\n              break;\n\n            case 5:\n              if (text == \" \" || text == \"\") {} else {\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[5]);\n              }\n\n              object[variableName] = [0, \"0\"];\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(_this.setState(object));\n\n            case 9:\n              result = [null, null];\n\n            case 10:\n              object[variableName] = result;\n\n              _this.setState(object);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.onChangeScale = function _callee4(text) {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!auxiliarFunctions.isValidPositiveDecimalNumber(text)) {\n                _context4.next = 4;\n                break;\n              }\n\n              _this.setState({\n                scale: [parseFloat(text), text]\n              });\n\n              _context4.next = 8;\n              break;\n\n            case 4:\n              if (text == \"\" || text == \" \") {} else {\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[5]);\n              }\n\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(_this.setState({\n                scale: [0, \"0\"]\n              }));\n\n            case 7:\n              _this.setState({\n                scale: [null, null]\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.onCalculateFromGL_DF = function _callee5(value) {\n      var differenceMeters, differenceFeet, R_meters, R_feet;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(_this.setState({\n                TVDFromGL: value\n              }));\n\n            case 2:\n              if (!(_this.state.TVD[0][0] != null)) {\n                _context5.next = 26;\n                break;\n              }\n\n              if (!value) {\n                _context5.next = 15;\n                break;\n              }\n\n              if (!(_this.state.GL[0][0] != null)) {\n                _context5.next = 11;\n                break;\n              }\n\n              differenceMeters = _this.state.GL[0][0] - _this.state.TVD[0][0];\n              differenceFeet = _this.state.GL[1][0] - _this.state.TVD[1][0];\n              _context5.next = 9;\n              return _regeneratorRuntime.awrap(_this.setState({\n                R: [differenceMeters, differenceFeet]\n              }));\n\n            case 9:\n              _context5.next = 13;\n              break;\n\n            case 11:\n              _context5.next = 13;\n              return _regeneratorRuntime.awrap(_this.setState({\n                R: [[null, null], [null, null]]\n              }));\n\n            case 13:\n              _context5.next = 24;\n              break;\n\n            case 15:\n              if (!(_this.state.DF[0] != null)) {\n                _context5.next = 22;\n                break;\n              }\n\n              R_meters = auxiliarFunctions.repairNumber(_this.state.DF[0][0] - _this.state.TVD[0][0], 15);\n              R_feet = auxiliarFunctions.repairNumber(_this.state.DF[1][0] - _this.state.TVD[1][0], 15);\n              _context5.next = 20;\n              return _regeneratorRuntime.awrap(_this.setState({\n                R: [R_meters, R_feet]\n              }));\n\n            case 20:\n              _context5.next = 24;\n              break;\n\n            case 22:\n              _context5.next = 24;\n              return _regeneratorRuntime.awrap(_this.setState({\n                R: [[null, null], [null, null]]\n              }));\n\n            case 24:\n              _context5.next = 28;\n              break;\n\n            case 26:\n              _context5.next = 28;\n              return _regeneratorRuntime.awrap(_this.setState({\n                R: [[null, null], [null, null]]\n              }));\n\n            case 28:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.onChangeDF_GL = function _callee6(variableName, text, unit) {\n      var result, object, TVD_notNull, conditionDF, conditionGL, valueMeters, valueFeet, R_meters, R_feet;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              object = {};\n              TVD_notNull = _this.state.TVD[0][0] != null;\n              conditionDF = variableName === 'DF' && !_this.state.TVDFromGL;\n              conditionGL = variableName === 'GL' && _this.state.TVDFromGL;\n\n              if (!auxiliarFunctions.isValidDecimalNumber(text)) {\n                _context6.next = 8;\n                break;\n              }\n\n              if (text != \"-\") {\n                if (unit == 0) {\n                  valueMeters = [parseFloat(text), text];\n                  valueFeet = auxiliarFunctions.metersToFeet(text);\n                } else {\n                  valueMeters = auxiliarFunctions.feetToMeters(text);\n                  valueFeet = [parseFloat(text), text];\n                }\n\n                result = [valueMeters, valueFeet];\n\n                if ((conditionDF || conditionGL) && TVD_notNull) {\n                  R_meters = auxiliarFunctions.repairNumber(valueMeters[0] - _this.state.TVD[0][0], 15);\n                  R_feet = auxiliarFunctions.repairNumber(valueFeet[0] - _this.state.TVD[1][0], 15);\n\n                  _this.setState({\n                    R: [R_meters, R_feet]\n                  });\n                }\n              } else {\n                result = [[null, \"-\"], [null, \"-\"]];\n\n                if (conditionDF || conditionGL) {\n                  _this.setState({\n                    R: [[null, null], [null, null]]\n                  });\n                }\n              }\n\n              _context6.next = 14;\n              break;\n\n            case 8:\n              if (text == \"\" || text == \" \") {} else {\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[5]);\n              }\n\n              if (conditionDF || conditionGL) {\n                _this.setState({\n                  R: [[null, null], [null, null]]\n                });\n              }\n\n              object[variableName] = [0, \"0\"];\n              _context6.next = 13;\n              return _regeneratorRuntime.awrap(_this.setState(object));\n\n            case 13:\n              result = [[null, null], [null, null]];\n\n            case 14:\n              object[variableName] = result;\n\n              _this.setState(object);\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    };\n\n    _this.onChangeTVD = function _callee7(text, unit) {\n      var valueMeters, valueFeet, R_meters, R_feet, _R_meters, _R_feet;\n\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!auxiliarFunctions.isValidPositiveDecimalNumber(text)) {\n                _context7.next = 6;\n                break;\n              }\n\n              if (unit == 0) {\n                valueMeters = [parseFloat(text), text];\n                valueFeet = auxiliarFunctions.metersToFeet(text);\n              } else {\n                valueMeters = auxiliarFunctions.feetToMeters(text);\n                valueFeet = [parseFloat(text), text];\n              }\n\n              _this.setState({\n                TVD: [valueMeters, valueFeet]\n              });\n\n              if (_this.state.TVDFromGL && _this.state.GL[0][0] != null) {\n                R_meters = auxiliarFunctions.repairNumber(_this.state.GL[0][0] - valueMeters[0], 15);\n                R_feet = auxiliarFunctions.repairNumber(_this.state.GL[1][0] - valueFeet[0], 15);\n\n                _this.setState({\n                  R: [R_meters, R_feet]\n                });\n              } else if (!_this.state.TVDFromGL && _this.state.DF[0][0] != null) {\n                _R_meters = auxiliarFunctions.repairNumber(_this.state.DF[0][0] - valueMeters[0], 15);\n                _R_feet = auxiliarFunctions.repairNumber(_this.state.DF[1][0] - valueFeet[0], 15);\n\n                _this.setState({\n                  R: [_R_meters, _R_feet]\n                });\n              }\n\n              _context7.next = 10;\n              break;\n\n            case 6:\n              if (text == \" \" || text == \"\") {} else {\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[5]);\n              }\n\n              _context7.next = 9;\n              return _regeneratorRuntime.awrap(_this.setState({\n                TVD: [[0, \"0\"], [0, \"0\"]]\n              }));\n\n            case 9:\n              _this.setState({\n                TVD: [[null, null], [null, null]],\n                R: [[null, null], [null, null]]\n              });\n\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    };\n\n    _this.selectCoreFile = function _callee8() {\n      var file, fileContent, result;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(ExpoDocumentPicker.getDocumentAsync(\"*/*\"));\n\n            case 3:\n              file = _context8.sent;\n\n              if (!(file.type === 'success')) {\n                _context8.next = 26;\n                break;\n              }\n\n              _this.setState({\n                loading: true\n              });\n\n              _context8.next = 8;\n              return _regeneratorRuntime.awrap(ExpoFileSystem.readAsStringAsync(file.uri));\n\n            case 8:\n              fileContent = _context8.sent;\n              _context8.next = 11;\n              return _regeneratorRuntime.awrap(readCoreFile(fileContent));\n\n            case 11:\n              result = _context8.sent;\n\n              if (!(result == null)) {\n                _context8.next = 16;\n                break;\n              }\n\n              Alert.alert(_this.props.allMessages[4], _this.props.allMessages[6]);\n              _context8.next = 24;\n              break;\n\n            case 16:\n              if (result.DF.length != 0) {\n                _this.onChangeDF_GL('DF', result.DF[0], result.DF[1]);\n              }\n\n              if (result.GL.length != 0) {\n                _this.onChangeDF_GL('GL', result.GL[0], result.GL[1]);\n              }\n\n              if (!(result.BaseHeight.length != 0)) {\n                _context8.next = 21;\n                break;\n              }\n\n              _context8.next = 21;\n              return _regeneratorRuntime.awrap(_this.onChangeBase_EndHeight('baseHeight', result.BaseHeight[0], result.BaseHeight[1]));\n\n            case 21:\n              if (result.EndHeight.length != 0) {\n                _this.onChangeBase_EndHeight('endHeight', result.EndHeight[0], result.EndHeight[1]);\n              }\n\n              if (result.Scale.length != 0) {\n                _this.setState({\n                  scale: result.Scale[0],\n                  unit: result.Scale[1]\n                });\n              }\n\n              if (result.gammaRayValues.xValuesMeters.length != 0) {\n                _this.setState({\n                  gammaRayValues: result.gammaRayValues,\n                  loading: false\n                });\n\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[7]);\n              } else {\n                _this.setState({\n                  loading: false\n                });\n\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[8]);\n              }\n\n            case 24:\n              _context8.next = 27;\n              break;\n\n            case 26:\n              if (file.type === 'cancel') {} else {\n                Alert.alert(_this.props.allMessages[4], _this.props.allMessages[9]);\n              }\n\n            case 27:\n              _context8.next = 32;\n              break;\n\n            case 29:\n              _context8.prev = 29;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.error(_context8.t0.toString());\n\n            case 32:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 29]]);\n    };\n\n    _this.updateLayersWithBaseHeight = function (baseHeight) {\n      var s = _this.state;\n      var len = s.layerList.length;\n\n      if (len > 0) {\n        if (s.isCore) {\n          var currentLayer = s.layerList[0];\n          currentLayer.upperLimit = _.cloneDeep(s.baseHeight);\n          currentLayer.lowerLimit[0] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[0][0] - currentLayer.thickness[0][0], 15);\n          currentLayer.lowerLimit[1] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[1][0] - currentLayer.thickness[1][0], 15);\n          var previousLayer = currentLayer;\n\n          for (i = 1; i < len; i++) {\n            currentLayer = s.layerList[i];\n            currentLayer.upperLimit = _.cloneDeep(previousLayer.lowerLimit);\n            currentLayer.lowerLimit[0] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[0][0] - currentLayer.thickness[0][0], 15);\n            currentLayer.lowerLimit[1] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[1][0] - currentLayer.thickness[1][0], 15);\n            previousLayer = currentLayer;\n          }\n        } else {\n          var _currentLayer = s.layerList[len - 1];\n          _currentLayer.lowerLimit = _.cloneDeep(s.baseHeight);\n          _currentLayer.upperLimit[0] = auxiliarFunctions.repairNumber(_currentLayer.lowerLimit[0][0] + _currentLayer.thickness[0][0], 15);\n          _currentLayer.upperLimit[1] = auxiliarFunctions.repairNumber(_currentLayer.lowerLimit[1][0] + _currentLayer.thickness[1][0], 15);\n          var _previousLayer = _currentLayer;\n\n          for (i = len - 2; i >= 0; i--) {\n            _currentLayer = s.layerList[i];\n            _currentLayer.lowerLimit = _.cloneDeep(_previousLayer.upperLimit);\n            _currentLayer.upperLimit[0] = auxiliarFunctions.repairNumber(_currentLayer.lowerLimit[0][0] + _currentLayer.thickness[0][0], 15);\n            _currentLayer.upperLimit[1] = auxiliarFunctions.repairNumber(_currentLayer.lowerLimit[1][0] + _currentLayer.thickness[1][0], 15);\n            _previousLayer = _currentLayer;\n          }\n        }\n      }\n    };\n\n    _this.updateLayersThickness = function (scale) {\n      var s = _this.state;\n      var factor = D.SIZE_OF_UNIT * (1 / scale[0]);\n\n      for (i = 0; i < s.layerList.length; i++) {\n        var currentLayer = s.layerList[i];\n        currentLayer.shownHeight = [factor * currentLayer.thickness[0][0], factor * currentLayer.thickness[1][0]];\n      }\n    };\n\n    _this.handleConfirm = function _callee9(selectedItems) {\n      var s, arrayLength, count, i;\n      return _regeneratorRuntime.async(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              s = _this.state;\n              arrayLength = selectedItems.length;\n              count = s.numberOfItems;\n              i = 0;\n\n            case 4:\n              if (!(i < arrayLength)) {\n                _context9.next = 48;\n                break;\n              }\n\n              _context9.t0 = selectedItems[i].itemKey;\n              _context9.next = _context9.t0 === 1 ? 8 : _context9.t0 === 2 ? 12 : _context9.t0 === 3 ? 16 : _context9.t0 === 4 ? 20 : _context9.t0 === 5 ? 24 : _context9.t0 === 6 ? 28 : _context9.t0 === 7 ? 32 : _context9.t0 === 8 ? 36 : _context9.t0 === 9 ? 40 : 44;\n              break;\n\n            case 8:\n              !s.showGammaRay ? count += 1 : count -= 1;\n              _context9.next = 11;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showGammaRay: !s.showGammaRay\n              }));\n\n            case 11:\n              return _context9.abrupt(\"break\", 45);\n\n            case 12:\n              !s.showInfo ? count += 1 : count -= 1;\n              _context9.next = 15;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showInfo: !s.showInfo\n              }));\n\n            case 15:\n              return _context9.abrupt(\"break\", 45);\n\n            case 16:\n              !s.showLithology ? count += 1 : count -= 1;\n              _context9.next = 19;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showLithology: !s.showLithology\n              }));\n\n            case 19:\n              return _context9.abrupt(\"break\", 45);\n\n            case 20:\n              !s.showStructure ? count += 1 : count -= 1;\n              _context9.next = 23;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showStructure: !s.showStructure\n              }));\n\n            case 23:\n              return _context9.abrupt(\"break\", 45);\n\n            case 24:\n              !s.showFossils ? count += 1 : count -= 1;\n              _context9.next = 27;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showFossils: !s.showFossils\n              }));\n\n            case 27:\n              return _context9.abrupt(\"break\", 45);\n\n            case 28:\n              !s.showPictures ? count += 1 : count -= 1;\n              _context9.next = 31;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showPictures: !s.showPictures\n              }));\n\n            case 31:\n              return _context9.abrupt(\"break\", 45);\n\n            case 32:\n              !s.showNotes ? count += 1 : count -= 1;\n              _context9.next = 35;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showNotes: !s.showNotes\n              }));\n\n            case 35:\n              return _context9.abrupt(\"break\", 45);\n\n            case 36:\n              !s.showNoCarbonatesRule ? count += 1 : count -= 1;\n              _context9.next = 39;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showNoCarbonatesRule: !s.showNoCarbonatesRule\n              }));\n\n            case 39:\n              return _context9.abrupt(\"break\", 45);\n\n            case 40:\n              !s.showCarbonatesRule ? count += 1 : count -= 1;\n              _context9.next = 43;\n              return _regeneratorRuntime.awrap(_this.setState({\n                showCarbonatesRule: !s.showCarbonatesRule\n              }));\n\n            case 43:\n              return _context9.abrupt(\"break\", 45);\n\n            case 44:\n              return _context9.abrupt(\"break\", 45);\n\n            case 45:\n              i++;\n              _context9.next = 4;\n              break;\n\n            case 48:\n              _context9.next = 50;\n              return _regeneratorRuntime.awrap(_this.setState({\n                numberOfItems: count\n              }));\n\n            case 50:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      });\n    };\n\n    _this.acceptSettings = function () {\n      var s = _this.state;\n      var p = _this.props;\n      var baseHeightMeters, endHeightMeters;\n      var correctFields = true;\n\n      if (_this.state.saveObjectEnabled) {\n        if (s.name == null) {\n          Alert.alert(p.allMessages[4], p.allMessages[10](s.objectTypeMessage));\n          correctFields = false;\n        } else if (s.scale[0] == 0) {\n          Alert.alert(p.allMessages[4], p.allMessages[11]);\n          correctFields = false;\n        } else if (s.isCore) {\n          baseHeightMeters = s.baseHeight[0][0];\n          endHeightMeters = s.endHeight[0][0];\n\n          if (endHeightMeters != null && baseHeightMeters != null && endHeightMeters >= baseHeightMeters) {\n            Alert.alert(p.allMessages[4], p.allMessages[12]);\n            correctFields = false;\n          } else if (!(s.DF[0][0] == null || s.GL[0][0] == null) && s.DF[0][0] <= s.GL[0][0]) {\n            Alert.alert(p.allMessages[4], p.allMessages[13]);\n            correctFields = false;\n          } else if (s.GL[0][0] != null && baseHeightMeters != null && baseHeightMeters > s.GL[0][0]) {\n            Alert.alert(p.allMessages[4], p.allMessages[14]);\n            correctFields = false;\n          } else if (s.GL[0][0] != null && endHeightMeters != null && endHeightMeters >= s.GL[0][0]) {\n            Alert.alert(p.allMessages[4], p.allMessages[15]);\n            correctFields = false;\n          } else if (s.gammaRayValues.hasOwnProperty('xValuesMeters') && s.gammaRayValues.xValuesMeters[0] > baseHeightMeters) {\n            Alert.alert(p.allMessages[4], p.allMessages[16] + s.gammaRayValues.xValuesMeters[0] + \"m / \" + s.gammaRayValues.xValuesFeet[0] + \"ft\");\n            correctFields = false;\n          }\n        }\n\n        if (correctFields) {\n          _this.setState({\n            saveObjectEnabled: false\n          }, function _callee10() {\n            var newScale, newUnit, baseHeight, payload, _this$state, _id, name, locationInWords, longitude, latitude, showInfo, showLithology, showGammaRay, showStructure, showPictures, showFossils, showNotes, showCarbonatesRule, showNoCarbonatesRule, layerList, numberOfItems, date, unit, R, DF, GL, TVD, TVDFromGL, endHeight, gammaRayValues, _this$state2, _id2, _name, _locationInWords, _longitude, _latitude, _showInfo, _showLithology, _showStructure, _showFossils, _showPictures, _showNotes, _showCarbonatesRule, _showNoCarbonatesRule, _layerList, _numberOfItems, _date, _unit, isNew;\n\n            return _regeneratorRuntime.async(function _callee10$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    newScale = s.scale;\n                    newUnit = s.unit;\n                    baseHeight = s.baseHeight;\n\n                    if (newScale[0] == null) {\n                      newScale = [1, \"1\"];\n                    }\n\n                    if (!(baseHeight[0][0] == null)) {\n                      _context10.next = 17;\n                      break;\n                    }\n\n                    baseHeight = [[0, \"0\"], [0, \"0\"]];\n\n                    if (!s.isCore) {\n                      _context10.next = 17;\n                      break;\n                    }\n\n                    if (!(s.GL[0][0] != null)) {\n                      _context10.next = 13;\n                      break;\n                    }\n\n                    _context10.next = 10;\n                    return _regeneratorRuntime.awrap(_this.onChangeBase_EndHeight('baseHeight', s.GL[0][1], 0));\n\n                  case 10:\n                    baseHeight = _this.state.baseHeight;\n                    _context10.next = 17;\n                    break;\n\n                  case 13:\n                    if (!(endHeightMeters != null && endHeightMeters > 0)) {\n                      _context10.next = 17;\n                      break;\n                    }\n\n                    _context10.next = 16;\n                    return _regeneratorRuntime.awrap(_this.onChangeBase_EndHeight('baseHeight', (endHeightMeters + 1).toString(), 0));\n\n                  case 16:\n                    baseHeight = _this.state.baseHeight;\n\n                  case 17:\n                    if (!_this.props.navigation.getParam('name')) {\n                      _context10.next = 24;\n                      break;\n                    }\n\n                    if (!(baseHeight != s.prevBaseHeight)) {\n                      _context10.next = 21;\n                      break;\n                    }\n\n                    _context10.next = 21;\n                    return _regeneratorRuntime.awrap(_this.updateLayersWithBaseHeight(baseHeight));\n\n                  case 21:\n                    if (!(newScale != s.prevScale || newUnit != s.prevUnit)) {\n                      _context10.next = 24;\n                      break;\n                    }\n\n                    _context10.next = 24;\n                    return _regeneratorRuntime.awrap(_this.updateLayersThickness(newScale));\n\n                  case 24:\n                    if (s.isCore) {\n                      _this$state = _this.state, _id = _this$state._id, name = _this$state.name, locationInWords = _this$state.locationInWords, longitude = _this$state.longitude, latitude = _this$state.latitude, showInfo = _this$state.showInfo, showLithology = _this$state.showLithology, showGammaRay = _this$state.showGammaRay, showStructure = _this$state.showStructure, showPictures = _this$state.showPictures, showFossils = _this$state.showFossils, showNotes = _this$state.showNotes, showCarbonatesRule = _this$state.showCarbonatesRule, showNoCarbonatesRule = _this$state.showNoCarbonatesRule, layerList = _this$state.layerList, numberOfItems = _this$state.numberOfItems, date = _this$state.date, unit = _this$state.unit, R = _this$state.R, DF = _this$state.DF, GL = _this$state.GL, TVD = _this$state.TVD, TVDFromGL = _this$state.TVDFromGL, endHeight = _this$state.endHeight, gammaRayValues = _this$state.gammaRayValues;\n                      payload = {\n                        _id: _id,\n                        name: name,\n                        locationInWords: locationInWords,\n                        longitude: longitude,\n                        latitude: latitude,\n                        showInfo: showInfo,\n                        showLithology: showLithology,\n                        showGammaRay: showGammaRay,\n                        showStructure: showStructure,\n                        showPictures: showPictures,\n                        showFossils: showFossils,\n                        showNotes: showNotes,\n                        showCarbonatesRule: showCarbonatesRule,\n                        showNoCarbonatesRule: showNoCarbonatesRule,\n                        layerList: layerList,\n                        numberOfItems: numberOfItems,\n                        date: date,\n                        unit: unit,\n                        R: R,\n                        DF: DF,\n                        GL: GL,\n                        TVD: TVD,\n                        TVDFromGL: TVDFromGL,\n                        endHeight: endHeight,\n                        gammaRayValues: gammaRayValues,\n                        scale: newScale,\n                        baseHeight: baseHeight\n                      };\n                    } else {\n                      _this$state2 = _this.state, _id2 = _this$state2._id, _name = _this$state2.name, _locationInWords = _this$state2.locationInWords, _longitude = _this$state2.longitude, _latitude = _this$state2.latitude, _showInfo = _this$state2.showInfo, _showLithology = _this$state2.showLithology, _showStructure = _this$state2.showStructure, _showFossils = _this$state2.showFossils, _showPictures = _this$state2.showPictures, _showNotes = _this$state2.showNotes, _showCarbonatesRule = _this$state2.showCarbonatesRule, _showNoCarbonatesRule = _this$state2.showNoCarbonatesRule, _layerList = _this$state2.layerList, _numberOfItems = _this$state2.numberOfItems, _date = _this$state2.date, _unit = _this$state2.unit;\n                      payload = {\n                        _id: _id2,\n                        name: _name,\n                        locationInWords: _locationInWords,\n                        longitude: _longitude,\n                        latitude: _latitude,\n                        showInfo: _showInfo,\n                        showLithology: _showLithology,\n                        showStructure: _showStructure,\n                        showFossils: _showFossils,\n                        showPictures: _showPictures,\n                        showNotes: _showNotes,\n                        showCarbonatesRule: _showCarbonatesRule,\n                        showNoCarbonatesRule: _showNoCarbonatesRule,\n                        layerList: _layerList,\n                        numberOfItems: _numberOfItems,\n                        date: _date,\n                        unit: _unit,\n                        scale: newScale,\n                        baseHeight: baseHeight\n                      };\n                    }\n\n                    isNew = p.navigation.getParam('name') ? false : true;\n                    _context10.next = 28;\n                    return _regeneratorRuntime.awrap(Database.saveObjectOfStudyInfo(payload, s.isCore, isNew, p.user_id, s._id, p.localDB));\n\n                  case 28:\n                    if (p.navigation.getParam(\"returnToObjectScreen\")) {\n                      p.dispatchChangeLoadView(true);\n                    }\n\n                    p.navigation.goBack();\n\n                  case 30:\n                  case \"end\":\n                    return _context10.stop();\n                }\n              }\n            });\n          });\n        }\n      }\n    };\n\n    _this.refuseSettings = function () {\n      if (_this.props.navigation.getParam('name')) {\n        Alert.alert(_this.props.allMessages[4], _this.props.allMessages[17]);\n      }\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.handleConfirm = _this.handleConfirm.bind(_assertThisInitialized(_this));\n    _this.acceptSettings = _this.acceptSettings.bind(_assertThisInitialized(_this));\n    _this.keyboardDidShow = _this.keyboardDidShow.bind(_assertThisInitialized(_this));\n    _this.keyboardDidHide = _this.keyboardDidHide.bind(_assertThisInitialized(_this));\n\n    var commonProperties = _objectSpread({}, _this.props.navigation.state.params, {\n      keyboardAvailable: false,\n      loading: false,\n      saveObjectEnabled: true,\n      objectTypeMessage: _this.props.navigation.getParam('isCore') ? _this.props.allMessages[0] : _this.props.allMessages[1]\n    });\n\n    if (_this.props.navigation.getParam('name')) {\n      _this.state = _objectSpread({}, commonProperties, {\n        prevBaseHeight: _this.props.navigation.getParam('baseHeight'),\n        prevScale: _this.props.navigation.getParam('scale'),\n        prevUnit: _this.props.navigation.getParam('unit')\n      });\n    } else {\n      _this.state = _objectSpread({}, commonProperties, {\n        _id: auxiliarFunctions.generateObject_id(),\n        name: null,\n        locationInWords: null,\n        longitude: [null, null],\n        latitude: [null, null],\n        scale: [null, null],\n        layerList: [],\n        numberOfItems: 0,\n        date: null,\n        unit: 0,\n        baseHeight: [[null, null], [null, null]],\n        showInfo: false,\n        showLithology: false,\n        showStructure: false,\n        showFossils: false,\n        showPictures: false,\n        showNotes: false,\n        showCarbonatesRule: false,\n        showNoCarbonatesRule: false,\n        showGammaRay: false,\n        R: [[null, null], [null, null]],\n        DF: [[null, null], [null, null]],\n        GL: [[null, null], [null, null]],\n        TVD: [[null, null], [null, null]],\n        TVDFromGL: false,\n        endHeight: [[null, null], [null, null]],\n        gammaRayValues: {}\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(ObjectForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n\n      if (this.props.navigation.getParam('name')) {\n        Log.log_action(7, this.props.user_id, this.state.isCore, this.state._id);\n      } else {\n        Log.log_action(5, this.props.user_id, this.state.isCore);\n      }\n\n      this._getLocationAsync();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.dispatchEnteringPermission(true);\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"keyboardDidShow\",\n    value: function keyboardDidShow() {\n      this.setState({\n        keyboardAvailable: true\n      });\n    }\n  }, {\n    key: \"keyboardDidHide\",\n    value: function keyboardDidHide() {\n      this.setState({\n        keyboardAvailable: false\n      });\n    }\n  }, {\n    key: \"plainTextField\",\n    value: function plainTextField(mainMessage, variable, variableName, cannotBeEmpty, maxLength) {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        }\n      }, cannotBeEmpty && React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1,\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        }\n      }, \"*\", React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        }\n      }, \" \", mainMessage, \": \"))), !cannotBeEmpty && React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        }\n      }, mainMessage)), React.createElement(TextInput, {\n        defaultValue: variable,\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        style: genericStyles.textInput,\n        placeholder: this.props.allMessages[29],\n        maxLength: maxLength,\n        onChangeText: function onChangeText(text) {\n          return _this2.onChangePlainText(variableName, text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        }\n      }));\n    }\n  }, {\n    key: \"singleNumericField\",\n    value: function singleNumericField(mainMessage, variable, variableName, functionToApply, maxLength) {\n      return React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        }\n      }, mainMessage), React.createElement(TextInput, {\n        value: variable[1],\n        selectTextOnFocus: true,\n        textAlign: 'center',\n        style: genericStyles.textInput,\n        maxLength: maxLength,\n        placeholder: this.props.allMessages[29],\n        onChangeText: function onChangeText(text) {\n          return variableName != null ? functionToApply(variableName, text) : functionToApply(text);\n        },\n        keyboardType: \"phone-pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        }\n      }));\n    }\n  }, {\n    key: \"doubleNumericField\",\n    value: function doubleNumericField(mainMessage, variable, variableName, functionToApply, secondMessage) {\n      var p = this.props;\n\n      function auxiliar(variable, variableName, functionToApply, unit) {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            paddingRight: unit == 0 ? 10 : 0,\n            paddingLeft: unit == 0 ? 0 : 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793\n          }\n        }, React.createElement(TextInput, {\n          value: variable[unit][1],\n          selectTextOnFocus: true,\n          textAlign: 'center',\n          style: genericStyles.textInput,\n          maxLength: 9 + unit,\n          placeholder: p.allMessages[29],\n          onChangeText: function onChangeText(text) {\n            return variableName != null ? functionToApply(variableName, text, unit) : functionToApply(text, unit);\n          },\n          keyboardType: \"phone-pad\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 794\n          }\n        }), React.createElement(Text, {\n          style: {\n            flex: 0.5,\n            paddingTop: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805\n          }\n        }, p.allMessages[41 + unit]));\n      }\n\n      return React.createElement(View, {\n        style: genericStyles.instructionsAboveTextInputs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        }\n      }, mainMessage), secondMessage != null && React.createElement(View, {\n        style: genericStyles.simple_center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        }\n      }, secondMessage)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        }\n      }, auxiliar(variable, variableName, functionToApply, 0), auxiliar(variable, variableName, functionToApply, 1)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var s = this.state;\n      var p = this.props;\n      var checkboxElements = [{\n        itemKey: 2,\n        itemDescription: p.allMessages[18]\n      }, {\n        itemKey: 3,\n        itemDescription: p.allMessages[19]\n      }, {\n        itemKey: 4,\n        itemDescription: p.allMessages[20]\n      }, {\n        itemKey: 5,\n        itemDescription: p.allMessages[21]\n      }, {\n        itemKey: 6,\n        itemDescription: p.allMessages[22]\n      }, {\n        itemKey: 7,\n        itemDescription: p.allMessages[23]\n      }, {\n        itemKey: 8,\n        itemDescription: p.allMessages[24]\n      }, {\n        itemKey: 9,\n        itemDescription: p.allMessages[25]\n      }];\n      var arrayOfValues = [s.showInfo, s.showLithology, s.showStructure, s.showFossils, s.showPictures, s.showNotes, s.showNoCarbonatesRule, s.showCarbonatesRule];\n      var totalItems = 8;\n\n      if (s.isCore) {\n        checkboxElements.unshift({\n          itemKey: 1,\n          itemDescription: p.allMessages[26]\n        });\n        arrayOfValues.unshift(s.showGammaRay);\n        totalItems = 9;\n      }\n\n      var selectedItemsProv = [];\n\n      for (i = 0; i < totalItems; i++) {\n        if (arrayOfValues[i]) {\n          selectedItemsProv.push(checkboxElements[i]);\n        }\n      }\n\n      if (s.loading) {\n        return React.createElement(View, {\n          style: genericStyles.simple_center,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 864\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 865\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867\n          }\n        }, p.allMessages[27], \"...\"));\n      }\n\n      return React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878\n        }\n      }, this.plainTextField(p.allMessages[28], s.name, 'name', true, 50), React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886\n        }\n      }, p.allMessages[30], \": \"), React.createElement(DatePicker, {\n        style: {\n          flex: 1.05,\n          height: 35,\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderWidth: 1,\n          borderColor: 'black'\n        },\n        date: s.date,\n        mode: \"date\",\n        placeholder: p.allMessages[31],\n        format: \"DD-MM-YYYY\",\n        minDate: \"01-01-2010\",\n        confirmBtnText: p.allMessages[32],\n        cancelBtnText: p.allMessages[33],\n        showIcon: false,\n        defaultValue: p.allMessages[34],\n        customStyles: {\n          dateInput: _objectSpread({}, genericStyles.textInput, {\n            padding: 0,\n            borderColor: 'transparent'\n          })\n        },\n        onDateChange: function onDateChange(date) {\n          _this3.setState({\n            date: date\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        }\n      })), this.plainTextField(p.allMessages[35], s.locationInWords, 'locationInWords', false, null), s.isCore && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        }\n      }, React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912\n        }\n      }, p.allMessages[36]), React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[37],\n        icon: {\n          name: 'description'\n        },\n        onPress: this.selectCoreFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916\n        }\n      }))), this.singleNumericField(p.allMessages[38], s.latitude, 'latitude', this.onChangeGeographicCoordinate, null), this.singleNumericField(p.allMessages[39], s.longitude, 'longitude', this.onChangeGeographicCoordinate, null), s.isCore && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        }\n      }, this.doubleNumericField(p.allMessages[40], s.DF, 'DF', this.onChangeDF_GL, null), this.doubleNumericField(p.allMessages[43], s.GL, 'GL', this.onChangeDF_GL, null), React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        }\n      }, p.allMessages[44]), React.createElement(Picker, {\n        selectedValue: s.TVDFromGL,\n        style: {\n          height: 30,\n          width: 100,\n          flex: 1\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this3.onCalculateFromGL_DF(itemValue);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        }\n      }, React.createElement(Picker.Item, {\n        label: p.allMessages[45],\n        value: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949\n        }\n      }), React.createElement(Picker.Item, {\n        label: p.allMessages[46],\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950\n        }\n      }))), this.doubleNumericField(p.allMessages[47], s.TVD, null, this.onChangeTVD, p.allMessages[48])), this.doubleNumericField(p.allMessages[s.isCore ? 49 : 50], s.baseHeight, 'baseHeight', this.onChangeBase_EndHeight, null), s.isCore && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        }\n      }, this.doubleNumericField(p.allMessages[51], s.endHeight, 'endHeight', this.onChangeBase_EndHeight, null)), React.createElement(Text, {\n        style: genericStyles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970\n        }\n      }, p.allMessages[52]), this.singleNumericField(p.allMessages[53] + \" (1:\" + (s.scale[0] == null ? \"?\" : s.scale[1]) + \")\", s.scale, null, this.onChangeScale, 9), React.createElement(View, {\n        style: genericStyles.row_instructions_textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        }\n      }, p.allMessages[54], \": \"), React.createElement(Picker, {\n        selectedValue: s.unit,\n        style: {\n          height: 30,\n          width: 100,\n          flex: 1\n        },\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this3.setState({\n            unit: itemValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        }\n      }, React.createElement(Picker.Item, {\n        label: p.allMessages[55],\n        value: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        }\n      }), React.createElement(Picker.Item, {\n        label: p.allMessages[56],\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          padding: 10,\n          paddingTop: 10,\n          paddingBottom: 45,\n          height: 80\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        }\n      }, React.createElement(Text, {\n        style: {\n          flex: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        }\n      }, \"\\n\", p.allMessages[57], \":\"), React.createElement(View, {\n        style: {\n          flex: 1,\n          height: 15,\n          width: 250\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        }\n      }, React.createElement(PickerCheckBox, {\n        data: checkboxElements,\n        style: {\n          flex: 1,\n          height: 15,\n          width: 250\n        },\n        headerComponent: React.createElement(Text, {\n          style: {\n            fontSize: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 997\n          }\n        }, p.allMessages[58]),\n        OnConfirm: function OnConfirm(selectedItems) {\n          return _this3.handleConfirm(selectedItems);\n        },\n        checkedItems: selectedItemsProv,\n        ConfirmButtonTitle: p.allMessages[59],\n        arrowSize: 20,\n        DescriptionField: \"itemDescription\",\n        KeyField: \"itemKey\",\n        arrayOfValues: arrayOfValues,\n        placeholder: p.allMessages[60],\n        placeholderSelectedItems: s.numberOfItems + p.allMessages[61],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        }\n      }))))), s.isCore && React.createElement(View, {\n        style: genericStyles.smallRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1015\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        }\n      }, p.allMessages[62], \":\", '\\n', React.createElement(Text, {\n        style: {\n          color: 'black',\n          fontSize: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        }\n      }, s.R[0][0] == null ? null : s.R[0][1] + ' m      ' + s.R[1][1] + ' ft'))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[33],\n        color: DARK_GRAY_COLOR,\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.refuseSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[59],\n        icon: {\n          name: 'check'\n        },\n        onPress: s.keyboardAvailable ? Keyboard.dismiss : this.acceptSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038\n        }\n      }))));\n    }\n  }]);\n\n  return ObjectForm;\n}(Component);\n\nObjectForm.navigationOptions = function (_ref) {\n  var screenProps = _ref.screenProps,\n      navigation = _ref.navigation;\n  return {\n    title: navigation.state.params.isCore ? ObjectForm_Texts[screenProps.language][2] : ObjectForm_Texts[screenProps.language][3],\n    headerTintColor: screenProps.headerTintColor,\n    headerStyle: _objectSpread({\n      backgroundColor: screenProps.headerBackgroundColor\n    }, genericStyles.navigationHeader)\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: ObjectForm_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchChangeLoadView: function dispatchChangeLoadView(bool) {\n      return dispatch(changeLoadView(bool));\n    },\n    dispatchEnteringPermission: function dispatchEnteringPermission(bool) {\n      return dispatch(changeStratumComponentPermission(bool));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ObjectForm);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/screens/objectsOfStudy/ObjectForm.js"],"names":["React","Component","Button","ButtonWithIcon","DatePicker","connect","changeLoadView","changeStratumComponentPermission","ObjectForm_Texts","Location","Permissions","ExpoFileSystem","ExpoDocumentPicker","PickerCheckBox","Log","Database","genericStyles","DARK_GRAY_COLOR","UNAUTHENTICATED_ID","D","auxiliarFunctions","readCoreFile","_","ObjectForm","props","_getLocationAsync","askAsync","LOCATION","status","getCurrentPositionAsync","enableHighAccuracy","geographicLocation","longitude","JSON","stringify","coords","latitude","altitude","substring","state","onChangeGeographicCoordinate","navigation","getParam","onChangeDF_GL","onChangeBase_EndHeight","onChangePlainText","variableName","text","object","setState","unit","isValidDecimalNumber","result","parseFloat","metersToFeet","feetToMeters","Alert","alert","allMessages","onChangeScale","isValidPositiveDecimalNumber","scale","onCalculateFromGL_DF","value","TVDFromGL","TVD","GL","differenceMeters","differenceFeet","R","DF","R_meters","repairNumber","R_feet","TVD_notNull","conditionDF","conditionGL","valueMeters","valueFeet","onChangeTVD","selectCoreFile","getDocumentAsync","file","type","loading","readAsStringAsync","uri","fileContent","length","BaseHeight","EndHeight","Scale","gammaRayValues","xValuesMeters","console","error","toString","updateLayersWithBaseHeight","baseHeight","s","len","layerList","isCore","currentLayer","upperLimit","cloneDeep","lowerLimit","thickness","previousLayer","i","updateLayersThickness","factor","SIZE_OF_UNIT","shownHeight","handleConfirm","selectedItems","arrayLength","count","numberOfItems","itemKey","showGammaRay","showInfo","showLithology","showStructure","showFossils","showPictures","showNotes","showNoCarbonatesRule","showCarbonatesRule","acceptSettings","p","baseHeightMeters","endHeightMeters","correctFields","saveObjectEnabled","name","objectTypeMessage","endHeight","hasOwnProperty","xValuesFeet","newScale","newUnit","prevBaseHeight","prevScale","prevUnit","_id","locationInWords","date","payload","isNew","saveObjectOfStudyInfo","user_id","localDB","dispatchChangeLoadView","goBack","refuseSettings","bind","keyboardDidShow","keyboardDidHide","commonProperties","params","keyboardAvailable","generateObject_id","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","log_action","dispatchEnteringPermission","remove","mainMessage","variable","cannotBeEmpty","maxLength","row_instructions_textInput","flex","flexDirection","justifyContent","alignItems","color","fontWeight","textInput","functionToApply","secondMessage","auxiliar","paddingRight","paddingLeft","paddingTop","instructionsAboveTextInputs","simple_center","checkboxElements","itemDescription","arrayOfValues","totalItems","unshift","selectedItemsProv","push","lightGray_background","white_background_with_ScrollView","plainTextField","height","borderWidth","borderColor","dateInput","padding","subtitle","singleNumericField","doubleNumericField","width","itemValue","itemIndex","paddingBottom","fontSize","smallRow","textAlign","down_buttons","dismiss","navigationOptions","screenProps","title","language","headerTintColor","headerStyle","backgroundColor","headerBackgroundColor","navigationHeader","mapStateToProps","appPreferencesReducer","userReducer","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View, TextInput, ScrollView, Alert, Keyboard, Picker,\n\t\tKeyboardAvoidingView, Button as ButtonNoIcon, ActivityIndicator} from 'react-native'\n\nimport {Button as ButtonWithIcon} from 'react-native-elements'\nimport DatePicker from 'react-native-datepicker'\n\nimport { connect } from 'react-redux'\nimport { changeLoadView, changeStratumComponentPermission } from '../../redux/actions/popUpActions'\nimport { ObjectForm_Texts } from '../../languages/screens/objectsOfStudy/ObjectForm'\n\nimport * as Location    from 'expo-location'\nimport * as Permissions from 'expo-permissions'\n\nimport * as ExpoFileSystem from 'expo-file-system'\nimport * as ExpoDocumentPicker from 'expo-document-picker'\n\nimport PickerCheckBox from '../../modifiedLibraries/PickerCheckBox' // Uso un PickerCheckbox modificado \n\nimport * as Log          from '../../genericFunctions/logFunctions'\nimport * as Database     from '../../genericFunctions/databaseFunctions'\nimport { genericStyles, DARK_GRAY_COLOR } from '../../constants/genericStyles'\nimport { UNAUTHENTICATED_ID } from '../../constants/appConstants'\nimport * as D from '../../constants/Dimensions'\nimport * as auxiliarFunctions from '../../genericFunctions/otherFunctions'\nimport { readCoreFile } from '../../genericFunctions/readFileFunctions'\nimport _ from \"lodash\"\n\n\nclass ObjectForm extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.handleConfirm   = this.handleConfirm.bind(this)\n\t\tthis.acceptSettings  = this.acceptSettings.bind(this)\n\t\tthis.keyboardDidShow = this.keyboardDidShow.bind(this)\n\t\tthis.keyboardDidHide = this.keyboardDidHide.bind(this)\n\n\t\t// Propiedades que tenemos que inicializar para manejar esta vista, independientemente de si el objeto se está creando o actualizando\n\t\tconst commonProperties = {\n\t\t\t...this.props.navigation.state.params, // Recuperamos la información que se le pasa a esta vista\n\t\t\t\n\t\t\t// Determina si el teclado está visible. Esto lo pusimos porque no queremos que los botones de \"Aceptar\" y \"Cancelar\" de la parte inferior cierren la vista cuando el teclado está visible\n\t\t\tkeyboardAvailable: false,\n\t\t\t\n\t\t\tloading: false, // Determina si se están cargando datos desde un archivo. Por ahora, sólo aplica en el caso de los núcleos cuando se están cargando los valores de gamma-ray\n\t\t\tsaveObjectEnabled: true, // Determina si se puede guardar el objeto, lo cual impide que se active la función correspondiente dos veces al darle \"Aceptar\" dos veces seguidas\n\t\t\n\t\t\t// Contiene la cadena \"núcleo\" o \"afloramiento\" según sea el caso, en el idioma actual\n\t\t\tobjectTypeMessage: (this.props.navigation.getParam('isCore') ? this.props.allMessages[0] : this.props.allMessages[1]),\n\t\t}\n\n\t\t// Caso en que se quiere modificar la información de un objeto ya existente\n\t\t// Hay que cargar los valores que ya estaban almacenados\n\t\tif (this.props.navigation.getParam('name')){\n\n\t\t\tthis.state = {\n\t\t\t\t...commonProperties,\n\n\t\t\t\t// Si la altura base, la escala o la unidad de medición cambian, de todos modos necesitamos saber sus valores previos. Por eso los conservamos. \n\t\t\t\tprevBaseHeight: this.props.navigation.getParam('baseHeight'), \n\t\t\t\tprevScale:      this.props.navigation.getParam('scale'),   \n\t\t\t\tprevUnit:       this.props.navigation.getParam('unit'),\n\t\t\t}\n\t\t} \n\t\telse { // Caso en que se quiere agregar un afloramiento o núcleo nuevo\n\t\t\tthis.state = {\n\t\t\t\t...commonProperties,\n\n\t\t\t\t_id:      auxiliarFunctions.generateObject_id(),\n\t\t\t\tname:                 null,\n\t\t\t\tlocationInWords:      null,\n\t\t\t\tlongitude:            [null,null],\n\t\t\t\tlatitude:             [null,null],\n\t\t\t\tscale:                [null,null],\n\t\t\t\tlayerList:            [], // Lista de estratos del afloramiento o núcleo\n\t\t\t\tnumberOfItems:        0,\n\t\t\t\tdate:                 null,\n\t\t\t\tunit:                 0, // La unidad será 0 en caso de que se trabaje con metros, y 1 en caso de que se trabaje con pies.\n\t\t\t\tbaseHeight:           [[null,null],[null,null]], // Esto es la altura más baja en el caso de un afloramiento, y la más alta en el caso de un núcleo\n\t\t\t\t                                                 // El primer elemento del arreglo hace referencia al valor en metros, y el segundo al valor en pies.\n\n\t\t\t\t// Las siguientes variables indican si se muestra el campo respectivo en la columna estratigráfica para todos los estratos\n\t\t\t\tshowInfo:             false,\n\t\t\t\tshowLithology:        false,\n\t\t\t\tshowStructure:        false, \n\t\t\t\tshowFossils:          false,\n\t\t\t\tshowPictures:         false, \n\t\t\t\tshowNotes:            false, \n\t\t\t\tshowCarbonatesRule:   false,\n\t\t\t\tshowNoCarbonatesRule: false,\n\n\t\t\t\t// Estas propiedades sólo se utilizan si estamos trabajando con núcleos\n\t\t\t\tshowGammaRay:         false,\n\t\t\t\tR:                    [[null,null],[null,null]], // Profundidad del reservorio\n\t\t\t\tDF:                   [[null,null],[null,null]], // Altura donde se ubica el Drill Floor\n\t\t\t\tGL:                   [[null,null],[null,null]], // Altura del Ground Level. Inicialmente se colocará automáticamente como la altitud registrada por el GPS.\n\t\t\t\tTVD:                  [[null,null],[null,null]], // Distancia vertical entre el GL o el DF (según sea el caso) hasta el reservorio\n\t\t\t\tTVDFromGL:            false, // Determina si el True Vertical Depth se calcula desde el Ground Level. Si es falso, es porque se calcula desde el Drill Floor.\n\t\t\t\tendHeight:            [[null,null],[null,null]], // Falta ver si esta altura terminal siempre es igual al reservorio R\n\t\t\t\tgammaRayValues:       {},\n\t\t\t}\n\t\t}\n\t}\n\n\t//Formato de la cabecera de la vista\n\tstatic navigationOptions = ({ screenProps, navigation }) => ({\n\t\ttitle:  (navigation.state.params.isCore) ? ObjectForm_Texts[screenProps.language][2] : ObjectForm_Texts[screenProps.language][3],\n\t\theaderTintColor: screenProps.headerTintColor,\n\t\theaderStyle: {\n\t\t\tbackgroundColor: screenProps.headerBackgroundColor,\n\t\t\t...genericStyles.navigationHeader,\n\t\t}\n\t});\n\n\tcomponentDidMount(){\n\t\t// Aquí inicializamos los escuchas que determinan si el teclado se está mostrando o no\n\t\tthis.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\n\t\tthis.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\n\n\t\t// Para registrar en el \"log\" que se ha añadido un nuevo núcleo\n\t\tif (this.props.navigation.getParam('name')){\n\t\t\tLog.log_action(7, this.props.user_id, this.state.isCore, this.state._id);\n\t\t}\n\t\telse {\n\t\t\tLog.log_action(5, this.props.user_id, this.state.isCore);\n\t\t}\n\n\t\t// Llamar al procedimiento que obtiene la ubicación actual\n\t\tthis._getLocationAsync() \n\t}\n\n\tcomponentWillUnmount() {\n\t\t// Habilitamos nuevamente el poder ingresar a los otros componentes de los estratos\n\t\tthis.props.dispatchEnteringPermission(true);\n\n\t\t// Quitamos los escuchas cuando salimos de esta ventana\n\t\tthis.keyboardDidShowListener.remove();\n\t\tthis.keyboardDidHideListener.remove();\n\t}\n\n\t// Caso en que el teclado se está mostrando\n\tkeyboardDidShow() {\n\t\tthis.setState({keyboardAvailable: true});\n\t}\n\n\t// Caso en que el teclado se ocultó\n\tkeyboardDidHide() {\n\t\tthis.setState({keyboardAvailable: false});\n\t}\n\n\t// Procedimiento que obtiene la ubicación actual\n\t_getLocationAsync  = async () => {\n\t\tlet { status } = await Permissions.askAsync(Permissions.LOCATION);\n\t\t//let permiso = await Location.getPermissionsAsync();\n\t\t// let permiso = await Location.getForegroundPermissionsAsync();\n\t\t// console.log(\"permiso = \", permiso);\n\t\t// let { status } = permiso;\n\t\tif (status === 'granted') {\n\t\t\tconst geographicLocation = await Location.getCurrentPositionAsync({enableHighAccuracy: true});\n\t\t\t\n\t\t\tlet longitude = JSON.stringify(geographicLocation.coords.longitude);\n\t\t\tlet latitude  = JSON.stringify(geographicLocation.coords.latitude);\n\t\t\tlet altitude  = JSON.stringify(geographicLocation.coords.altitude).substring(0,10);\n\n\t\t\tif ((this.state.latitude[0] == null) && (this.state.longitude[0] == null)){\n\t\t\t\tthis.onChangeGeographicCoordinate('latitude',latitude);\n\t\t\t\tthis.onChangeGeographicCoordinate('longitude',longitude);\n\t\t\t}\n\n\t\t\tif (this.props.navigation.getParam('isCore')){\n\t\t\t\t// En el caso de los núcleos la altitud actual la registramos como el Ground Level.\n\t\t\t\t// Esto asumiendo que el registro se hace en el lugar de estudio. De todos modos esto se puede cambiar.\n\t\t\t\tif (!this.props.navigation.getParam('GL')){\n\t\t\t\t\tthis.onChangeDF_GL('GL',altitude, 0);\n\t\t\t\t}\n\t\t\t} else if (!this.props.navigation.getParam('baseHeight')){\n\t\t\t\t// En el caso de los afloramientos asumimos que la altitud actual es la altura base del afloramiento\n\t\t\t\tthis.onChangeBase_EndHeight('baseHeight',altitude,0);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Función genérica para todos los casos en los que el dato ingresado es un texto plano\n\tonChangePlainText = (variableName, text) => {\n\t\tif ((text == \" \") || (text == \"\")){\n\t\t\ttext = null;\n\t\t}\n\t\tlet object = {};\n\t\tobject[variableName] = text;\n\t\tthis.setState(object);\t\n\t}\n\n\t// Procedimiento para cambiar la altura que puede ser la base o la terminal\n\t// * Recuérdese que la altura base es donde comienza el objeto (la parte más alta en núcleos y la más baja en afloramientos)\n\t// * La altura terminal sólo la estamos definiendo para núcleos, y es su parte más baja registrada, aunque por ahora\n\t//   no estamos usando ese valor en ninguna otra parte.\n\tonChangeBase_EndHeight = async(variableName, text, unit) => {\n\t\tlet result;\n\t\tlet object = {};\n\n\t\tif (auxiliarFunctions.isValidDecimalNumber(text)){\n\t\t\tif (text != \"-\"){\n\t\t\t\tif (unit == 0){ // Caso en que el valor provisto fue el de metros\n\t\t\t\t\tresult = [[parseFloat(text), text], auxiliarFunctions.metersToFeet(text)];\n\t\t\t\t}\n\t\t\t\telse { // Caso en que el valor provisto fue el de pies\n\t\t\t\t\tresult = [auxiliarFunctions.feetToMeters(text), [parseFloat(text),text]];\t\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = [[null, \"-\"], [null, \"-\"]];\n\t\t\t}\n\t\t} else {\n\t\t\tif ((text == \" \") || (text == \"\")){} \n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\"\n\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[5]);\n\t\t\t}\n\t\t\t/* Este this.setState con el await se coloca porque si el primer carácter del texto es inválido, como si por ejemplo comienza con \")\", entonces\n\t\t\t   el this.state de abajo no es capaz de limpiar el cuadro de texto */\n\t\t\tobject[variableName] = [[0, \"0\"],[0, \"0\"]];\n\t\t\tawait this.setState(object); \n\t\t\tresult = [[null, null],[null, null]];\n\t\t}\n\t\tobject[variableName] = result;\n\t\tthis.setState(object);\n\t}\n\n\t// Procedimiento para cambiar la coordenada geográfica correspondiente (latitud o longitud)\n\tonChangeGeographicCoordinate = async(variableName, text) => {\n\t\tlet result;\n\t\tlet object = {};\n\n\t\tif (auxiliarFunctions.isValidDecimalNumber(text)){\n\t\t\tif (text != \"-\"){\n\t\t\t\tresult = [parseFloat(text), text];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = [null, text]\n\t\t\t}\n\t\t} else {\n\t\t\tif ((text == \" \") || (text == \"\")){}\n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\"\n\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[5]);\n\t\t\t}\n\t\t\t/* Este this.setState con el await se coloca porque si el primer carácter del texto es inválido, como si por ejemplo comienza con \")\", entonces\n\t\t\t   el this.setState de abajo no es capaz de limpiar el cuadro de texto */\n\t\t\tobject[variableName] = [0,\"0\"];\n\t\t\tawait this.setState(object);\n\t\t\tresult = [null,null];\n\t\t}\n\t\tobject[variableName] = result;\n\t\tthis.setState(object);\n\t}\n\n\t// Procedimiento que se llama cuando cambia la escala\n\tonChangeScale = async(text) => {\n\t\tif (auxiliarFunctions.isValidPositiveDecimalNumber(text)){\n\t\t\tthis.setState({scale: [parseFloat(text), text]});\n\t\t} else {\n\t\t\tif ((text == \"\") || (text == \" \")){}\n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\"\n\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[5]);\n\t\t\t}\n\t\t\t/* Este this.setState con el await se coloca porque si el primer carácter del texto es inválido, como si por ejemplo comienza con \")\", entonces\n\t\t\t   el this.setState de abajo no es capaz de limpiar el cuadro de texto */\n\t\t\tawait this.setState({scale: [0, \"0\"]}); \n\t\t\t\n\t\t\tthis.setState({scale: [null,null]});\n\t\t}\n\t}\n\n\t// Para cambiar si el TVD se calcula desde el GL o desde el DF\n\tonCalculateFromGL_DF = async(value) => {\n\t\tawait this.setState({TVDFromGL: value});\n\t\tif (this.state.TVD[0][0] != null){\n\t\t\tif (value){\n\t\t\t\tif (this.state.GL[0][0] != null) {\n\t\t\t\t\tconst differenceMeters = this.state.GL[0][0] - this.state.TVD[0][0];\n\t\t\t\t\tconst differenceFeet   = this.state.GL[1][0] - this.state.TVD[1][0];\n\t\t\t\t\tawait this.setState({R: [differenceMeters, differenceFeet]});\n\t\t\t\t} \n\t\t\t\telse{ \n\t\t\t\t\tawait this.setState({R: [[null,null],[null,null]]});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.state.DF[0] != null){\n\t\t\t\t\tconst R_meters = auxiliarFunctions.repairNumber(this.state.DF[0][0] - this.state.TVD[0][0], 15);\n\t\t\t\t\tconst R_feet   = auxiliarFunctions.repairNumber(this.state.DF[1][0] - this.state.TVD[1][0], 15);\n\t\t\t\t\tawait this.setState({R: [R_meters,R_feet]});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tawait this.setState({R: [[null,null],[null,null]]});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.setState({R: [[null,null],[null,null]]});\n\t\t}\n\t}\n\n\t// Procedimiento que se usa en el caso de los núcleos\n\t// Puede servir para cambiar la altura a la que está ubicada la plataforma (Drill Floor)\n\t// o bien para cambiar la altura sobre el nivel del suelo (Ground Level)\n\tonChangeDF_GL = async(variableName, text, unit) => {\n\t\tlet result;\n\t\tlet object = {};\n\t\tconst TVD_notNull = (this.state.TVD[0][0] != null);\n\t\tconst conditionDF = (variableName === 'DF') && (!this.state.TVDFromGL);\n\t\tconst conditionGL = (variableName === 'GL') && this.state.TVDFromGL;\n\n\t\tif (auxiliarFunctions.isValidDecimalNumber(text)){\n\t\t\tif (text != \"-\"){\n\t\t\t\tif (unit == 0){ // Caso en que el valor provisto fue el de metros\n\t\t\t\t\tvar valueMeters = [parseFloat(text), text];\n\t\t\t\t\tvar valueFeet   = auxiliarFunctions.metersToFeet(text);\t\t\n\t\t\t\t}\n\t\t\t\telse { // Caso en que el valor provisto fue el de pies\n\t\t\t\t\tvar valueMeters = auxiliarFunctions.feetToMeters(text);\n\t\t\t\t\tvar valueFeet   = [parseFloat(text), text];\n\t\t\t\t}\n\t\t\t\tresult = [valueMeters, valueFeet];\n\n\t\t\t\t// Como tenemos el TVD y el valor desde el que está calculado, cambiamos la profundidad del reservorio\n\t\t\t\tif ((conditionDF || conditionGL) && TVD_notNull){\n\t\t\t\t\tconst R_meters = auxiliarFunctions.repairNumber(valueMeters[0] - this.state.TVD[0][0], 15);\n\t\t\t\t\tconst R_feet   = auxiliarFunctions.repairNumber(valueFeet[0] - this.state.TVD[1][0], 15);\n\t\t\t\t\tthis.setState({R: [R_meters,R_feet]});\n\t\t\t\t}\t\n\t\t\t} else {\n\t\t\t\tresult = [[null, \"-\"], [null, \"-\"]];\n\n\t\t\t\t// Como no tenemos el valor desde el que está calculado el TVD, la profunidad del reservorio tiene que ser nula\n\t\t\t\tif (conditionDF || conditionGL){\n\t\t\t\t\tthis.setState({R: [[null,null],[null,null]]});\n\t\t\t\t}\n\t\t\t}\t\n\t\t} else {\n\t\t\tif ((text == \"\") || (text == \" \")){} \n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\"\n\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[5]);\n\t\t\t}\n\n\t\t\t// Como no tenemos el valor desde el que está calculado el TVD, la profunidad del reservorio tiene que ser nula\n\t\t\tif (conditionDF || conditionGL){\n\t\t\t\tthis.setState({R: [[null,null],[null,null]]});\n\t\t\t}\n\t\t\t/* Este this.setState con el await se coloca porque si el primer carácter del texto es inválido, como si por ejemplo comienza con \")\", entonces\n\t\t\t   el this.setState de abajo no es capaz de limpiar el cuadro de texto */\n\t\t\tobject[variableName] = [0,\"0\"];\n\t\t\tawait this.setState(object);\n\t\t\tresult = [[null, null],[null, null]];\n\t\t}\n\t\tobject[variableName] = result;\n\t\tthis.setState(object);\n\t}\n\n\t// Procedimiento para cambiar la distancia vertical de excavación\n\tonChangeTVD = async(text, unit) => {\n\t\tif (auxiliarFunctions.isValidPositiveDecimalNumber(text)){\t\n\t\t\tif (unit == 0){ // Caso en que el valor provisto fue el de metros\n\t\t\t\tvar valueMeters = [parseFloat(text), text];\n\t\t\t\tvar valueFeet   = auxiliarFunctions.metersToFeet(text);\n\t\t\t}\n\t\t\telse { // Caso en que el valor provisto fue el de pies\n\t\t\t\tvar valueMeters = auxiliarFunctions.feetToMeters(text);\n\t\t\t\tvar valueFeet   = [parseFloat(text), text];\n\t\t\t}\n\t\t\tthis.setState({TVD: [valueMeters, valueFeet]});\t\n\n\t\t\tif ((this.state.TVDFromGL) && (this.state.GL[0][0] != null)){\n\t\t\t\tconst R_meters = auxiliarFunctions.repairNumber(this.state.GL[0][0] - valueMeters[0], 15);\n\t\t\t\tconst R_feet   = auxiliarFunctions.repairNumber(this.state.GL[1][0] - valueFeet[0], 15);\n\t\t\t\tthis.setState({R: [R_meters,R_feet]});\n\t\t\t} \n\t\t\telse if (!(this.state.TVDFromGL) && (this.state.DF[0][0] != null)){\n\t\t\t\tconst R_meters = auxiliarFunctions.repairNumber(this.state.DF[0][0] - valueMeters[0], 15);\n\t\t\t\tconst R_feet   = auxiliarFunctions.repairNumber(this.state.DF[1][0] - valueFeet[0], 15);\n\t\t\t\tthis.setState({R: [R_meters,R_feet]});\t\t\t\t\t\n\t\t\t}\t\n\n\t\t} else {\n\t\t\tif ((text == \" \") || (text == \"\")){} \n\t\t\telse {\n\t\t\t\t// Alerta: \"El valor ingresado no es válido\"\n\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[5]);\t\n\t\t\t}\n\t\t\t/* Este this.setState con el await se coloca porque si el primer carácter del texto es inválido, como si por ejemplo comienza con \")\", entonces\n\t\t\t   el this.setState de abajo no es capaz de limpiar el cuadro de texto */\n\t\t\tawait this.setState({TVD: [[0, \"0\"],[0, \"0\"]]}); \n\t\t\t\n\t\t\tthis.setState({TVD: [[null, null],[null, null]], R: [[null,null],[null,null]]});\n\t\t}\n\t}\n\n\t// Procedimiento para buscar el archivo con el que se obtendrán los valores para generar la(s) gráfica(s).\n\tselectCoreFile = async() => {\n\t\ttry{\n\t\t\tconst file = await ExpoDocumentPicker.getDocumentAsync(\"*/*\"); \n\t\t\tif (file.type === 'success'){\n\t\t\t\tthis.setState({loading: true});\n\n\t\t\t\tconst fileContent = await ExpoFileSystem.readAsStringAsync(file.uri)\n\t\t\t\tconst result      = await readCoreFile(fileContent);\n\n\t\t\t\t// Caso en que no se pudo leer el archivo\n\t\t\t\tif (result == null){\n\t\t\t\t\t// Alerta: \"Ocurrió un error al tratar de leer el archivo\"\n\t\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[6]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\t// Caso en que tenemos que actualizar el Drill Floor a partir del archivo\n\t\t\t\t\tif (result.DF.length != 0){\n\t\t\t\t\t\tthis.onChangeDF_GL('DF', result.DF[0], result.DF[1]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Caso en que tenemos que actualizar el Ground Level a partir del archivo\n\t\t\t\t\tif (result.GL.length != 0){\n\t\t\t\t\t\tthis.onChangeDF_GL('GL',result.GL[0], result.GL[1]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Caso en que tenemos que actualizar la altura base a partir del archivo\n\t\t\t\t\tif (result.BaseHeight.length != 0){\n\t\t\t\t\t\tawait this.onChangeBase_EndHeight('baseHeight', result.BaseHeight[0], result.BaseHeight[1]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Caso en que tenemos que actualizar la altura terminal a partir del archivo\n\t\t\t\t\tif (result.EndHeight.length != 0){\n\t\t\t\t\t\tthis.onChangeBase_EndHeight('endHeight', result.EndHeight[0], result.EndHeight[1]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Caso en que tenemos que actualizar la escala a partir del archivo\n\t\t\t\t\tif (result.Scale.length != 0){\n\t\t\t\t\t\tthis.setState({scale: result.Scale[0], unit: result.Scale[1]});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Actualizar la tabla de valores de gamma-ray (siempre hay que hacerlo)\n\t\t\t\t\tif (result.gammaRayValues.xValuesMeters.length != 0){\n\t\t\t\t\t\tthis.setState({gammaRayValues: result.gammaRayValues, loading: false});\n\n\t\t\t\t\t\t// Alerta: \"El archivo fue leído exitosamente\"\n\t\t\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[7]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.setState({loading: false});\n\n\t\t\t\t\t\t// Alerta: \"No se obtuvo ninguna información de rayos-gamma\"\n\t\t\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[8]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (file.type === 'cancel'){\n\t\t\t}\n\t\t\telse{\n\t\t\t\t// Alerta: \"Ocurrió un error al tratar de leer el archivo\"\n\t\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[9]);\n\t\t\t}\n\t\t} catch(error){\n\t\t\t// Expo no se construyó con iCloud, expo turtle fallback\n\t\t\tconsole.error(error.toString());\n\t\t}\n\t}\n\n\t/* Procedimiento para actualizar la altura base en todos los estratos\n\t   Sólo se le llama cuando estamos actualizando un núcleo ya existente\n\n\t   Nota: Antes había pensando en calcular la diferencia entre la altura base anterior y la actual, y sumársela a los\n\t   límites de todos los estratos. Pero eso trae inconsistencias por el problema de la aproximación. Por ejemplo,\n\t   un estrato podía quedar con espesor 4, límite inferior 849.3m y límite superior 853.29999m. La diferencia entre el\n\t   límite superior y el inferior no es exactamente 4 en ese caso.\n\t */\n\tupdateLayersWithBaseHeight = (baseHeight) => {\n\t\tlet s = this.state;\n\t\tlet len = s.layerList.length; // Cantidad de estratos registrados\n\n\t\tif (len > 0){\n\t\t\t// La actualización de los estratos es diferente dependiendo de si se trata de un núcleo o un afloramiento\n\t\t\tif (s.isCore){\n\t\t\t\t// Comenzamos modificando el estrato superior (recuérdese que el superior siempre es el más alto)\n\t\t\t\tlet currentLayer = s.layerList[0];\n\n\t\t\t\tcurrentLayer.upperLimit = _.cloneDeep(s.baseHeight);\t\n\n\t\t\t\tcurrentLayer.lowerLimit[0] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[0][0] - currentLayer.thickness[0][0], 15);\n\t\t\t\tcurrentLayer.lowerLimit[1] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[1][0] - currentLayer.thickness[1][0], 15);\n\n\t\t\t\tlet previousLayer = currentLayer;\n\n\t\t\t\t// Modificamos el resto de estratos\n\t\t\t\tfor (i = 1; i < len; i++){\n\t\t\t\t\tcurrentLayer = s.layerList[i];\n\n\t\t\t\t\tcurrentLayer.upperLimit = _.cloneDeep(previousLayer.lowerLimit);\n\n\t\t\t\t\tcurrentLayer.lowerLimit[0] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[0][0] - currentLayer.thickness[0][0], 15);\n\t\t\t\t\tcurrentLayer.lowerLimit[1] = auxiliarFunctions.repairNumber(currentLayer.upperLimit[1][0] - currentLayer.thickness[1][0], 15);\n\n\t\t\t\t\tpreviousLayer = currentLayer;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Comenzamos modificando el estrato inferior\n\t\t\t\tlet currentLayer = s.layerList[len-1];\n\n\t\t\t\tcurrentLayer.lowerLimit = _.cloneDeep(s.baseHeight);\n\n\t\t\t\tcurrentLayer.upperLimit[0] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[0][0] + currentLayer.thickness[0][0], 15);\n\t\t\t\tcurrentLayer.upperLimit[1] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[1][0] + currentLayer.thickness[1][0], 15);\n\n\t\t\t\tlet previousLayer = currentLayer;\n\n\t\t\t\t// Modificamos el resto de estratos\n\t\t\t\tfor (i = len-2; i >= 0; i--){\n\t\t\t\t\tcurrentLayer = s.layerList[i];\n\n\t\t\t\t\tcurrentLayer.lowerLimit = _.cloneDeep(previousLayer.upperLimit);\n\n\t\t\t\t\tcurrentLayer.upperLimit[0] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[0][0] + currentLayer.thickness[0][0], 15);\n\t\t\t\t\tcurrentLayer.upperLimit[1] = auxiliarFunctions.repairNumber(currentLayer.lowerLimit[1][0] + currentLayer.thickness[1][0], 15);\n\n\t\t\t\t\tpreviousLayer = currentLayer;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t}\n\n\t// Procedimiento para actualizar el espesor con el que se muestran todos los estratos en el OutcropScreen\n\t// Sólo se le llama cuando estamos actualizando un afloramiento o núcleo ya existente\n\tupdateLayersThickness = (scale) => {\n\t\tlet s = this.state;\n\t\tconst factor = D.SIZE_OF_UNIT * (1/scale[0]);\n\n\t\tfor (i = 0; i < s.layerList.length; i++) {\n\t\t\tvar currentLayer = s.layerList[i];\n\t\t\tcurrentLayer.shownHeight = [factor * currentLayer.thickness[0][0], factor * currentLayer.thickness[1][0]];\n\t\t}\t\n\t}\n\n\t// Procedimiento para seleccionar qué campos de los estratos serán visibles en la ventana de las gráficas\n\thandleConfirm = async(selectedItems) => {\n\t\tlet s = this.state;\n\t\tvar arrayLength = selectedItems.length;\n\t\tvar count = s.numberOfItems;\n\n\t\tfor (var i = 0; i < arrayLength; i++) {\n\n\t\t\tswitch(selectedItems[i].itemKey){\n\t\t\t\tcase 1:\n\t\t\t\t\t(!s.showGammaRay) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showGammaRay: !s.showGammaRay});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\t(!s.showInfo) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showInfo: !s.showInfo});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\t(!s.showLithology) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showLithology: !s.showLithology});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 4:\n\t\t\t\t\t(!s.showStructure) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showStructure: !s.showStructure});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5:\n\t\t\t\t\t(!s.showFossils) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showFossils: !s.showFossils});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 6:\n\t\t\t\t\t(!s.showPictures) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showPictures: !s.showPictures});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 7:\n\t\t\t\t\t(!s.showNotes) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showNotes: !s.showNotes});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 8:\n\t\t\t\t\t(!s.showNoCarbonatesRule) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showNoCarbonatesRule: !s.showNoCarbonatesRule});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 9:\n\t\t\t\t\t(!s.showCarbonatesRule) ? (count += 1) : (count -= 1);\n\t\t\t\t\tawait this.setState({showCarbonatesRule: !s.showCarbonatesRule});\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tawait this.setState({numberOfItems: count});\n\t}\n\n\t// Procedimiento para hacer los cambios correspondientes en la base de datos (creación o actualización)\n\tacceptSettings = () => {    \n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tlet baseHeightMeters, endHeightMeters;\n\t\tlet correctFields = true;\n\n\t\tif (this.state.saveObjectEnabled){ // No usar la abreviatura \"s\" porque puede estar desactualizada\n\t\t\tif (s.name == null){\n\t\t\t\t// Alerta: \"El nombre del [núcleo/afloramiento] no puede ser nulo\"\n\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[10](s.objectTypeMessage));\n\t\t\t\tcorrectFields = false;\n\t\t\t}\n\t\t\telse if (s.scale[0] == 0){\n\t\t\t\t// Alerta: \"La escala no puede ser cero\"\n\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[11]);\n\t\t\t\tcorrectFields = false;\n\t\t\t}\n\t\t\telse if (s.isCore){\n\t\t\t\tbaseHeightMeters = s.baseHeight[0][0];\n\t\t\t\tendHeightMeters  = s.endHeight[0][0];\n\n\t\t\t\tif ((endHeightMeters != null) && (baseHeightMeters != null) && (endHeightMeters >= baseHeightMeters)){\n\t\t\t\t\t// Alerta: \"La altura base debe ser mayor que la altura terminal\"\n\t\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[12]);\n\t\t\t\t\tcorrectFields = false;\n\t\t\t\t}\n\t\t\t\telse if (!( (s.DF[0][0] == null) || (s.GL[0][0] == null) ) && (s.DF[0][0] <= s.GL[0][0])){\n\t\t\t\t\t// Alerta: \"El nivel del DF debe ser mayor que el GL\"\n\t\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[13]);\n\t\t\t\t\tcorrectFields = false;\n\t\t\t\t}\n\t\t\t\telse if ( (s.GL[0][0] != null) && (baseHeightMeters != null) && (baseHeightMeters > s.GL[0][0]) ){\n\t\t\t\t\t// Alerta: \"La altura base debe ser menor o igual que el GL\"\n\t\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[14]);\n\t\t\t\t\tcorrectFields = false;\n\t\t\t\t}\n\t\t\t\telse if ( (s.GL[0][0] != null) && (endHeightMeters != null) && (endHeightMeters >= s.GL[0][0]) ){\n\t\t\t\t\t// Alerta: \"La altura terminal debe ser menor que el GL\"\n\t\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[15]);\n\t\t\t\t\tcorrectFields = false;\n\t\t\t\t}\n\t\t\t\telse if (s.gammaRayValues.hasOwnProperty('xValuesMeters') && (s.gammaRayValues.xValuesMeters[0] > baseHeightMeters)){\n\t\t\t\t\t// Alerta: \"La altura base no puede ser menor que la altura más alta leída para los rayos gamma: \"\n\t\t\t\t\tAlert.alert(p.allMessages[4], p.allMessages[16] + s.gammaRayValues.xValuesMeters[0] + \"m / \" + s.gammaRayValues.xValuesFeet[0] + \"ft\");\n\t\t\t\t\tcorrectFields = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (correctFields) {\n\t\t\t\tthis.setState({saveObjectEnabled: false},\n\t\t\t\t\tasync() => {\n\t\t\t\t\t\tvar newScale   = s.scale;\n\t\t\t\t\t\tvar newUnit    = s.unit\n\t\t\t\t\t\tvar baseHeight = s.baseHeight;\n\n\t\t\t\t\t\t// Arreglar la escala\n\t\t\t\t\t\tif (newScale[0] == null){\n\t\t\t\t\t\t\tnewScale = [1,\"1\"];  // Por defecto, la escala será 1\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Arreglar la altura base\n\t\t\t\t\t\tif (baseHeight[0][0] == null){\n\t\t\t\t\t\t\tbaseHeight = [[0,\"0\"],[0,\"0\"]];\n\n\t\t\t\t\t\t\t// En el caso de los núcleos hay otras consideraciones\n\t\t\t\t\t\t\tif (s.isCore){\n\t\t\t\t\t\t\t\tif (s.GL[0][0] != null){\n\t\t\t\t\t\t\t\t\t// Si el Ground Level no es cero, hacemos que la altura base sea la misma\n\t\t\t\t\t\t\t\t\tawait this.onChangeBase_EndHeight('baseHeight',s.GL[0][1], 0);\n\t\t\t\t\t\t\t\t\tbaseHeight = this.state.baseHeight;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if ((endHeightMeters != null) && (endHeightMeters > 0)){\n\t\t\t\t\t\t\t\t\t// Si la altura terminal no es cero, hacemos que la base sea una unidad mayor\n\t\t\t\t\t\t\t\t\tawait this.onChangeBase_EndHeight('baseHeight',(endHeightMeters+1).toString(), 0);\n\t\t\t\t\t\t\t\t\tbaseHeight = this.state.baseHeight;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// Caso en que estamos modificando un núcleo o afloramiento existente\n\t\t\t\t\t\tif (this.props.navigation.getParam('name')){\n\t\t\t\t\t\t\t// Caso en que la altura base cambió: debemos actualizar los límites de todos los estratos\n\t\t\t\t\t\t\tif (baseHeight != s.prevBaseHeight){\n\t\t\t\t\t\t\t\tawait this.updateLayersWithBaseHeight(baseHeight);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Caso en que la escala o la unidad cambiaron: debemos actualizar los espesores de todos los estratos\n\t\t\t\t\t\t\tif ((newScale != s.prevScale) || (newUnit != s.prevUnit)){\n\t\t\t\t\t\t\t\tawait this.updateLayersThickness(newScale);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet payload;\n\n\t\t\t\t\t\t// En el caso de los núcleos guardamos más propiedades que en los afloramientos\n\t\t\t\t\t\tif (s.isCore){\n\t\t\t\t\t\t\tlet {_id, name, locationInWords, longitude, latitude, showInfo, showLithology, showGammaRay, showStructure, showPictures, showFossils, showNotes, \n\t\t\t\t\t\t\t\tshowCarbonatesRule, showNoCarbonatesRule, layerList, numberOfItems, date, unit, R, DF, GL, TVD, TVDFromGL, endHeight, gammaRayValues} = this.state;\n\n\t\t\t\t\t\t\tpayload = {\n\t\t\t\t\t\t\t\t_id, name, locationInWords, longitude, latitude, showInfo, showLithology, showGammaRay, showStructure, showPictures, showFossils, showNotes, \n\t\t\t\t\t\t\t\tshowCarbonatesRule, showNoCarbonatesRule, layerList, numberOfItems, date, unit, R, DF, GL, TVD, TVDFromGL, endHeight, gammaRayValues,\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tscale: newScale, baseHeight, // Valores que puede que hayamos tenido que actualizar en esta función\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet {_id, name, locationInWords, longitude, latitude, showInfo, showLithology, showStructure, showFossils, showPictures, showNotes, showCarbonatesRule, \n\t\t\t\t\t\t\t\tshowNoCarbonatesRule, layerList, numberOfItems, date, unit} = this.state;\n\n\t\t\t\t\t\t\tpayload = {\n\t\t\t\t\t\t\t\t_id, name, locationInWords, longitude, latitude, showInfo, showLithology, showStructure, showFossils, showPictures, showNotes, showCarbonatesRule, \n\t\t\t\t\t\t\t\tshowNoCarbonatesRule, layerList, numberOfItems, date, unit,\n\n\t\t\t\t\t\t\t\tscale: newScale, baseHeight, // Valores que puede que hayamos tenido que actualizar en esta función\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst isNew = p.navigation.getParam('name') ? false : true;\n\t\t\t\t\t\tawait Database.saveObjectOfStudyInfo(payload, s.isCore, isNew, p.user_id, s._id, p.localDB);\n\n\t\t\t\t\t\t// Si vamos a regresar a la ventana de las gráficas, tenemos que hacer que ella vuelva a cargar datos desde la base de datos\n\t\t\t\t\t\tif (p.navigation.getParam(\"returnToObjectScreen\")){\n\t\t\t\t\t\t\tp.dispatchChangeLoadView(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.navigation.goBack();\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Procedimiento para el caso en que el usuario le da al botón de Cancelar\n\trefuseSettings = () => {\n\t\tif (this.props.navigation.getParam('name')){\n\t\t\t// Alerta: \"No se salvaron los cambios\"\n\t\t\tAlert.alert(this.props.allMessages[4], this.props.allMessages[17]);\t\t\t\n\t\t}\n\t\tthis.props.navigation.goBack();\n\t}\n\n\t// Formato de los campos que consisten en texto plano\n\tplainTextField(mainMessage, variable, variableName, cannotBeEmpty, maxLength){\n\t\treturn(\n\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t{cannotBeEmpty && // Caso en que el campo es obligatorio\n\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t<Text style = {{flex: 1, color: 'red', fontWeight: 'bold'}}>*\n\t\t\t\t\t\t\t<Text style = {{color: 'black'}}> {mainMessage}: </Text> \n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\t\t\t\t{!cannotBeEmpty && /// Caso en que el campo NO es obligatorio\n\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n\t\t\t\t\t\t<Text style = {{flex:1}}>{mainMessage}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\t\t\t\t<TextInput \n\t\t\t\t\tdefaultValue      = {variable}\n\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\ttextAlign         = {'center'} \n\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\tplaceholder       = {this.props.allMessages[29]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\tmaxLength         = {maxLength}\n\t\t\t\t\tonChangeText      = {text => this.onChangePlainText(variableName,text)}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Formato de los campos numéricos que tienen un solo espacio para rellenar\n\tsingleNumericField(mainMessage, variable, variableName, functionToApply, maxLength){\n\t\treturn(\n\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t<Text style = {{flex:1}}>{mainMessage}</Text>\n\t\t\t\t<TextInput \n\t\t\t\t\tvalue             = {variable[1]} \n\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\ttextAlign         = {'center'}\n\t\t\t\t\tstyle             = {genericStyles.textInput} \n\t\t\t\t\tmaxLength         = {maxLength}\n\t\t\t\t\tplaceholder       = {this.props.allMessages[29]} /// Mensaje: \"Rellenar campo...\"\n\t\t\t\t\tonChangeText      = {text => ((variableName != null) ? functionToApply(variableName,text) : functionToApply(text))}\n\t\t\t\t\tkeyboardType      = 'phone-pad'\n\t\t\t\t/>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Formato de los campos numéricos que tienen dos espacios para rellenar: uno para metros y otro para pies\n\tdoubleNumericField(mainMessage, variable, variableName, functionToApply, secondMessage){\n\t\tlet p = this.props;\n\n\t\tfunction auxiliar(variable, variableName, functionToApply, unit){\n\t\t\treturn (\n\t\t\t\t<View style = {{flexDirection: 'column', justifyContent: 'center', alignItems: 'center', paddingRight: ((unit == 0) ? 10 : 0), paddingLeft: ((unit == 0) ? 0 : 10)}}>\n\t\t\t\t\t<TextInput \n\t\t\t\t\t\tvalue             = {variable[unit][1]}\n\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\ttextAlign         = {'center'}\n\t\t\t\t\t\tstyle             = {genericStyles.textInput}\n\t\t\t\t\t\tmaxLength         = {9+unit}\n\t\t\t\t\t\tplaceholder       = {p.allMessages[29]} // Mensaje: \"Rellenar campo...\"\n\t\t\t\t\t\tonChangeText      = {text => ((variableName != null) ? functionToApply(variableName,text,unit) : functionToApply(text,unit))}\n\t\t\t\t\t\tkeyboardType      = 'phone-pad'\n\t\t\t\t\t/>\n\t\t\t\t\t{/*Mensajes: \"metros\" \"pies\"*/}\n\t\t\t\t\t<Text style = {{flex: 0.5, paddingTop: 3}}>{p.allMessages[41+unit]}</Text>\n\t\t\t\t</View>\n\t\t\t)\n\t\t}\n\t\treturn(\n\t\t\t<View style = {genericStyles.instructionsAboveTextInputs}>\n\t\t\t\t<Text style = {{flex: 1}}>{mainMessage}</Text>\n\t\t\t\t{(secondMessage != null) && /// Caso en que el mensaje consta de dos partes\n\t\t\t\t\t<View style = {genericStyles.simple_center}>\n\t\t\t\t\t\t<Text style = {{flex: 1}}>{secondMessage}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\t\t\t\t<View style = {{flexDirection: 'row', justifyContent: 'center', alignItems: 'center', paddingTop: 3}}>\n\t\t\t\t\t{auxiliar(variable, variableName, functionToApply, 0)}\n\t\t\t\t\t{auxiliar(variable, variableName, functionToApply, 1)}\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Lo que se le mostrará al usuario\n\trender() {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\t// Estos arreglos se utilizan en el PickerCheckBox, donde el usuario decide qué campos se muestran en la gráfica\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t //     Mensajes\n\t\tlet checkboxElements = [\n\t\t\t{ itemKey:2, itemDescription: p.allMessages[18]}, // \"Información de estrato\"\n\t\t\t{ itemKey:3, itemDescription: p.allMessages[19]}, //      \"Litología\"\n\t\t\t{ itemKey:4, itemDescription: p.allMessages[20]}, // \"Estructura sedimentaria\"\n\t\t\t{ itemKey:5, itemDescription: p.allMessages[21]}, //       \"Fósiles\"\n\t\t\t{ itemKey:6, itemDescription: p.allMessages[22]}, //     \"Fotografías\"\n\t\t\t{ itemKey:7, itemDescription: p.allMessages[23]}, //    \"Notas de texto\"\n\t\t\t{ itemKey:8, itemDescription: p.allMessages[24]}, // \"Regla de no carbonatos\"\n\t\t\t{ itemKey:9, itemDescription: p.allMessages[25]}, //  \"Regla de carbonatos\"\n\t\t];\n\n\t\tlet arrayOfValues = [s.showInfo,s.showLithology,s.showStructure,s.showFossils,\n\t\t\t\t\t\t\t s.showPictures,s.showNotes,s.showNoCarbonatesRule,s.showCarbonatesRule];\n\t\tlet totalItems = 8;\n\n\t\tif (s.isCore){\n\t\t\tcheckboxElements.unshift({itemKey:1, itemDescription: p.allMessages[26]}) // Mensaje: \"Gráfica de rayos gamma\"\n\t\t\tarrayOfValues.unshift(s.showGammaRay)\n\t\t\ttotalItems = 9;\n\t\t}\n\n\t\t// Esto permite que cuando se vuelva a entrar en el PickerCheckBox, estén marcados los elementos que habían sido seleccionados previamente\n\t\tlet selectedItemsProv = []\n\t\tfor (i = 0; i < totalItems; i++){\n\t\t\tif (arrayOfValues[i]){\n\t\t\t\tselectedItemsProv.push(checkboxElements[i])\n\t\t\t}\n\t\t}\n\n\t\t// Vista para cuando se están leyendo datos desde un archivo\n\t\tif (s.loading){\n\t\t\treturn (\n\t\t\t\t<View style = {genericStyles.simple_center}>\n\t\t\t\t\t<ActivityIndicator size = \"large\" color = \"#0000ff\" />\n\t\t\t\t\t{/*Mensaje: \"Cargando\"*/}\n\t\t\t\t\t<Text>{p.allMessages[27]}...</Text>\n\t\t\t\t</View>\n\t\t\t);\t\n\t\t} \n\n\t\t// Vista normal, cuando no se está leyendo ningún archivo\n\t\treturn (\n\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t{/*Primer sector con fondo blanco, que incluye todos los campos a rellenar*/}\n\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t{/*Mensaje: \"Nombre del objeto\\n(máx 50)\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[28], s.name, 'name', true, 50)}\n\n\t\t\t\t\t\t{/*Modificar la fecha*/}\n\t\t\t\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Fecha de registro\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex:1}}>{p.allMessages[30]}: </Text>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tstyle          = {{flex: 1.05, height: 35, alignItems: 'center', justifyContent: 'center', borderWidth: 1, borderColor: 'black'}}\n\t\t\t\t\t\t\t\tdate           = {s.date}\n\t\t\t\t\t\t\t\tmode           = \"date\"\n\t\t\t\t\t\t\t\tplaceholder    = {p.allMessages[31]} /// Mensaje: \"Toque para escoger...\"\n\t\t\t\t\t\t\t\tformat         = \"DD-MM-YYYY\"\n\t\t\t\t\t\t\t\tminDate        = \"01-01-2010\"\n\t\t\t\t\t\t\t\tconfirmBtnText = {p.allMessages[32]} // Mensaje: \"Ok\"\n\t\t\t\t\t\t\t\tcancelBtnText  = {p.allMessages[33]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\t\tshowIcon       = {false}\n\t\t\t\t\t\t\t\tdefaultValue   = {p.allMessages[34]} // Mensaje: \"Falta por establecer\"\n\t\t\t\t\t\t\t\tcustomStyles   = {{\n\t\t\t\t\t\t\t\t\t///dateIcon: {postion: 'absolute'}\n\t\t\t\t\t\t\t\t\tdateInput: {...genericStyles.textInput, padding: 0, borderColor: 'transparent'},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDateChange = {(date) => {this.setState({date: date})}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Mensaje: \"Localización\"*/}\n\t\t\t\t\t\t{this.plainTextField(p.allMessages[35], s.locationInWords, 'locationInWords', false, null)}\n\n\t\t\t\t\t\t{s.isCore && \n\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Archivo para cargar datos del núcleo\"*/}\n\t\t\t\t\t\t\t\t<Text style = {genericStyles.subtitle}>{p.allMessages[36]}</Text>\n\n\t\t\t\t\t\t\t\t{/*//Seleccionar el archivo desde el que se leen los datos de los rayos gamma, y quizás otros datos*/}\n\t\t\t\t\t\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[37]} // Mensaje: \"Leer archivo\"\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'description'}}\n\t\t\t\t\t\t\t\t\t\tonPress = {this.selectCoreFile}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/*Mensaje: \"Latitud: \"*/}\n\t\t\t\t\t\t{this.singleNumericField(p.allMessages[38], s.latitude, 'latitude', this.onChangeGeographicCoordinate, null)}\n\n\t\t\t\t\t\t{/*Mensaje: \"Longitud: \"*/}\n\t\t\t\t\t\t{this.singleNumericField(p.allMessages[39], s.longitude, 'longitude', this.onChangeGeographicCoordinate, null)}\n\n\t\t\t\t\t\t{s.isCore && \n\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Altura del 'Drill Floor' (DF) con respecto al nivel del mar\"*/}\n\t\t\t\t\t\t\t\t{this.doubleNumericField(p.allMessages[40], s.DF, 'DF', this.onChangeDF_GL, null)}\n\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Altura del 'Ground Level' (GL) con respecto al nivel del mar\"*/}\n\t\t\t\t\t\t\t\t{this.doubleNumericField(p.allMessages[43], s.GL, 'GL', this.onChangeDF_GL, null)}\n\n\t\t\t\t\t\t\t\t{/*Determinar si el TVD se calcula a partir del GL o desde el DF*/}\n\t\t\t\t\t\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t\t\t\t\t\t{/*Mensaje: \"Determine desde qué punto se calcula el TVD\" */}\n\t\t\t\t\t\t\t\t\t<Text style = {{flex:1}}>{p.allMessages[44]}</Text>\n\t\t\t\t\t\t\t\t\t<Picker\n\t\t\t\t\t\t\t\t\t\tselectedValue = {s.TVDFromGL}\n\t\t\t\t\t\t\t\t\t\tstyle         = {{height: 30, width: 100, flex: 1}}\n\t\t\t\t\t\t\t\t\t\tonValueChange = {(itemValue, itemIndex) => this.onCalculateFromGL_DF(itemValue)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {p.allMessages[45]}    value = {false}/>\n\t\t\t\t\t\t\t\t\t\t<Picker.Item label = {p.allMessages[46]}    value = {true}/>\n\t\t\t\t\t\t\t\t\t</Picker>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t{/*Mensajes: \"Medida del 'True Vertical Depth' (TVD)\"  \"(Sólo valores positivos)\"*/}\n\t\t\t\t\t\t\t\t{this.doubleNumericField(p.allMessages[47], s.TVD, null, this.onChangeTVD, p.allMessages[48])}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/*//Mensajes: \"Altura de inicio (la más alta) con respecto al nivel del mar\"  \"Altura base con respecto al nivel del mar\"*/}\n\t\t\t\t\t\t{this.doubleNumericField(p.allMessages[(s.isCore ? 49 : 50)], s.baseHeight, 'baseHeight', this.onChangeBase_EndHeight, null)}\n\n\t\t\t\t\t\t{s.isCore && \n\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t{/*Mensaje: \"Altura terminal con respecto al nivel del mar\"*/}\n\t\t\t\t\t\t\t\t{this.doubleNumericField(p.allMessages[51], s.endHeight, 'endHeight', this.onChangeBase_EndHeight, null)}\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/*//Mensaje: \"Información de gráfica\"*/}\n\t\t\t\t\t\t<Text style = {genericStyles.subtitle}>{p.allMessages[52]}</Text>\n\n\t\t\t\t\t\t{/*//Mensaje: \"Escala vertical\"*/}\n\t\t\t\t\t\t{this.singleNumericField(p.allMessages[53] + \" (1:\" + ((s.scale[0] == null) ? \"?\" : s.scale[1]) + \")\", s.scale, null, this.onChangeScale, 9)}\n\n\t\t\t\t\t\t{/*Escoger las unidades de medición (metros o pies) que se usarán en la gráfica*/}\n\t\t\t\t\t\t<View style = {genericStyles.row_instructions_textInput}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Unidades de medición\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex:1}}>{p.allMessages[54]}: </Text>\n\t\t\t\t\t\t\t<Picker\n\t\t\t\t\t\t\t\tselectedValue = {s.unit}\n\t\t\t\t\t\t\t\tstyle         = {{height: 30, width: 100, flex: 1}}\n\t\t\t\t\t\t\t\tonValueChange = {(itemValue, itemIndex) => this.setState({unit: itemValue})}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Picker.Item label = {p.allMessages[55]}  value = {0}/>\n\t\t\t\t\t\t\t\t<Picker.Item label = {p.allMessages[56]}  value = {1}/>\n\t\t\t\t\t\t\t</Picker>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*Modificar los campos que se mostrarán la gráfica*/}\n\t\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', padding: 10, paddingTop: 10, paddingBottom: 45, height: 80}}>\n\t\t\t\t\t\t\t{/*Mensaje: \"Campos a mostrar\"*/}\n\t\t\t\t\t\t\t<Text style = {{flex:2}}>{\"\\n\"}{p.allMessages[57]}:</Text>\n\t\t\t\t\t\t\t<View style = {{flex:1, height: 15, width:250}}>\n\t\t\t\t\t\t\t\t<PickerCheckBox\n\t\t\t\t\t\t\t\t\tdata                     = {checkboxElements}              \n\t\t\t\t\t\t\t\t\tstyle                    = {{flex:1, height: 15, width:250}} \n\t\t\t\t\t\t\t\t\theaderComponent          = {<Text style = {{fontSize:25}}>{p.allMessages[58]}</Text>} // Mensaje: \"Tipos de registro\"\n\t\t\t\t\t\t\t\t\tOnConfirm                = {(selectedItems) => this.handleConfirm(selectedItems)}\n\t\t\t\t\t\t\t\t\tcheckedItems             = {selectedItemsProv} // Elementos que se muestran señalados cuando se abre el formulario\n\t\t\t\t\t\t\t\t\tConfirmButtonTitle       = {p.allMessages[59]} // Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\tarrowSize                = {20}\n\t\t\t\t\t\t\t\t\tDescriptionField         = 'itemDescription'\n\t\t\t\t\t\t\t\t\tKeyField                 = 'itemKey'\n\t\t\t\t\t\t\t\t\tarrayOfValues            = {arrayOfValues}\n\t\t\t\t\t\t\t\t\tplaceholder              = {p.allMessages[60]} // Mensaje: \"Toque aquí\" -> Esto es lo que se muestra en la parte externa cuando no se ha seleccionado ningún campo.\t\t        \n\t\t\t\t\t\t\t\t\tplaceholderSelectedItems = {s.numberOfItems + p.allMessages[61]} // Mensaje: \" tipo(s)\" -> Esto es lo que se muestra en la parte externa cuando ya se han seleccionado campos\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</ScrollView>\n\t\t\t\t</View>\n\n\t\t\t\t{s.isCore &&\n\t\t\t\t\t<View style = {genericStyles.smallRow}>\n\t\t\t\t\t\t{/*Mensaje: \"El reservorio R está a :\"*/}\n\t\t\t\t\t\t<Text style = {{textAlign: 'center', justifyContent: 'center', alignItems: 'center', color: 'blue'}}>{p.allMessages[62]}:{'\\n'}\t\n\t\t\t\t\t\t\t<Text style = {{color: 'black', fontSize: 11}}>\n\t\t\t\t\t\t\t\t{(s.R[0][0] == null) ? null : (s.R[0][1] + ' m      ' + s.R[1][1] + ' ft')}\n\t\t\t\t\t\t\t</Text>\t\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</View>\n\t\t\t\t}\n\n\t\t\t\t{/*//Vista de los botones para darle Aceptar o Cancelar*/}\n\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\ttitle   = {p.allMessages[33]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss : this.refuseSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\ttitle   = {p.allMessages[59]}  /// Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\tonPress = {s.keyboardAvailable ? Keyboard.dismiss: this.acceptSettings}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\n/// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages: ObjectForm_Texts[state.appPreferencesReducer.language],  \n\t\tuser_id:     state.userReducer.user_id,\n\t\tlocalDB:     state.userReducer.localDB,\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchChangeLoadView: (bool) => dispatch(changeLoadView(bool)),\n\t\tdispatchEnteringPermission: (bool) => dispatch(changeStratumComponentPermission(bool)),\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ObjectForm);"]},"metadata":{},"sourceType":"module"}