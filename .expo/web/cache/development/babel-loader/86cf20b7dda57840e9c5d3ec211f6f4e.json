{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CHANGE_LITHOLOGY_LIST_LANGUAGE, CHANGE_STRUCTURE_LIST_LANGUAGE, CHANGE_FOSSIL_LIST_LANGUAGE, CHANGE_NO_CARBONATES_RULE_LANGUAGE, CHANGE_CARBONATES_RULE_LANGUAGE } from \"../reduxTypes\";\nimport * as LibraryFunctions from \"../../genericFunctions/libraryFunctions\";\nvar initialState = {\n  sortedLithologies: LibraryFunctions.createSortedListOfLithologies('spanish'),\n  sortedStructures: LibraryFunctions.createSortedListOfStructures('spanish'),\n  sortedFossils: LibraryFunctions.createSortedListOfFossils('spanish'),\n  noCarbonatesRule: LibraryFunctions.createNoCarbonatesRule('spanish'),\n  carbonatesRule: LibraryFunctions.createCarbonatesRule('spanish')\n};\n\nvar libraryReducer = function libraryReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_LITHOLOGY_LIST_LANGUAGE:\n      return _objectSpread({}, state, {\n        sortedLithologies: action.payload\n      });\n\n    case CHANGE_STRUCTURE_LIST_LANGUAGE:\n      return _objectSpread({}, state, {\n        sortedStructures: action.payload\n      });\n\n    case CHANGE_FOSSIL_LIST_LANGUAGE:\n      return _objectSpread({}, state, {\n        sortedFossils: action.payload\n      });\n\n    case CHANGE_NO_CARBONATES_RULE_LANGUAGE:\n      return _objectSpread({}, state, {\n        noCarbonatesRule: action.payload\n      });\n\n    case CHANGE_CARBONATES_RULE_LANGUAGE:\n      return _objectSpread({}, state, {\n        carbonatesRule: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default libraryReducer;","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/redux/reducers/libraryReducer.js"],"names":["CHANGE_LITHOLOGY_LIST_LANGUAGE","CHANGE_STRUCTURE_LIST_LANGUAGE","CHANGE_FOSSIL_LIST_LANGUAGE","CHANGE_NO_CARBONATES_RULE_LANGUAGE","CHANGE_CARBONATES_RULE_LANGUAGE","LibraryFunctions","initialState","sortedLithologies","createSortedListOfLithologies","sortedStructures","createSortedListOfStructures","sortedFossils","createSortedListOfFossils","noCarbonatesRule","createNoCarbonatesRule","carbonatesRule","createCarbonatesRule","libraryReducer","state","action","type","payload"],"mappings":";;;;;;AAGA,SAASA,8BAAT,EAAyCC,8BAAzC,EAAyEC,2BAAzE,EACSC,kCADT,EAC6CC,+BAD7C;AAEA,OAAO,KAAKC,gBAAZ;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,iBAAiB,EAAEF,gBAAgB,CAACG,6BAAjB,CAA+C,SAA/C,CADC;AAEpBC,EAAAA,gBAAgB,EAAGJ,gBAAgB,CAACK,4BAAjB,CAA8C,SAA9C,CAFC;AAGpBC,EAAAA,aAAa,EAAMN,gBAAgB,CAACO,yBAAjB,CAA2C,SAA3C,CAHC;AAIpBC,EAAAA,gBAAgB,EAAGR,gBAAgB,CAACS,sBAAjB,CAAwC,SAAxC,CAJC;AAKpBC,EAAAA,cAAc,EAAKV,gBAAgB,CAACW,oBAAjB,CAAsC,SAAtC;AALC,CAArB;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBZ,YAAyB;AAAA,MAAXa,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AAGC,SAAKpB,8BAAL;AACC,+BACIkB,KADJ;AAECX,QAAAA,iBAAiB,EAAEY,MAAM,CAACE;AAF3B;;AAMD,SAAKpB,8BAAL;AACC,+BACIiB,KADJ;AAECT,QAAAA,gBAAgB,EAAEU,MAAM,CAACE;AAF1B;;AAMD,SAAKnB,2BAAL;AACC,+BACIgB,KADJ;AAECP,QAAAA,aAAa,EAAEQ,MAAM,CAACE;AAFvB;;AAMD,SAAKlB,kCAAL;AACC,+BACIe,KADJ;AAECL,QAAAA,gBAAgB,EAAEM,MAAM,CAACE;AAF1B;;AAMD,SAAKjB,+BAAL;AACC,+BACIc,KADJ;AAECH,QAAAA,cAAc,EAAEI,MAAM,CAACE;AAFxB;;AAMD;AACC,aAAOH,KAAP;AAvCF;AAyCA,CA1CD;;AA4CA,eAAeD,cAAf","sourcesContent":["/* Aquí colocamos todos los reductores que tienen que ver con actualizar las listas de litologías,\r\n   estructuras sedimentarias o fósiles, ya que éstas cambian de orden dependiendo del idioma actual */\r\n\r\nimport { CHANGE_LITHOLOGY_LIST_LANGUAGE, CHANGE_STRUCTURE_LIST_LANGUAGE, CHANGE_FOSSIL_LIST_LANGUAGE,\r\n         CHANGE_NO_CARBONATES_RULE_LANGUAGE, CHANGE_CARBONATES_RULE_LANGUAGE } from '../reduxTypes'\r\nimport * as LibraryFunctions from '../../genericFunctions/libraryFunctions'\r\n\r\nconst initialState = {\r\n\tsortedLithologies: LibraryFunctions.createSortedListOfLithologies('spanish'),\r\n\tsortedStructures:  LibraryFunctions.createSortedListOfStructures('spanish'),\r\n\tsortedFossils:     LibraryFunctions.createSortedListOfFossils('spanish'),\r\n\tnoCarbonatesRule:  LibraryFunctions.createNoCarbonatesRule('spanish'),\r\n\tcarbonatesRule:    LibraryFunctions.createCarbonatesRule('spanish'),\r\n};\r\n\r\nconst libraryReducer = (state = initialState, action) => {\r\n\tswitch (action.type){\r\n\r\n\t\t// Caso en que debe cambiarse la lista de litologías debido a un cambio del idioma\r\n\t\tcase CHANGE_LITHOLOGY_LIST_LANGUAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, // Mantenemos igual el resto de la información del estado\r\n\t\t\t\tsortedLithologies: action.payload,\r\n\t\t\t}\r\n\r\n\t\t// Caso en que debe cambiarse la lista de estructuras debido a un cambio del idioma\r\n\t\tcase CHANGE_STRUCTURE_LIST_LANGUAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, // Mantenemos igual el resto de la información del estado\r\n\t\t\t\tsortedStructures: action.payload,\r\n\t\t\t}\r\n\r\n\t\t// Caso en que debe cambiarse la lista de fósiles debido a un cambio del idioma\r\n\t\tcase CHANGE_FOSSIL_LIST_LANGUAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, // Mantenemos igual el resto de la información del estado\r\n\t\t\t\tsortedFossils: action.payload,\r\n\t\t\t}\r\n\r\n\t\t// Caso en que debe cambiarse la regla de los no carbonatos debido a un cambio del idioma\r\n\t\tcase CHANGE_NO_CARBONATES_RULE_LANGUAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, // Mantenemos igual el resto de la información del estado\r\n\t\t\t\tnoCarbonatesRule: action.payload,\r\n\t\t\t}\r\n\r\n\t\t// Caso en que debe cambiarse la regla de los carbonatos debido a un cambio del idioma\r\n\t\tcase CHANGE_CARBONATES_RULE_LANGUAGE :\r\n\t\t\treturn {\r\n\t\t\t\t...state, // Mantenemos igual el resto de la información del estado\r\n\t\t\t\tcarbonatesRule: action.payload,\r\n\t\t\t}\r\n\r\n\t\t// Caso por defecto, que se utiliza si el tipo de la acción no coincide con ninguno de los establecidos aquí\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default libraryReducer;"]},"metadata":{},"sourceType":"module"}