{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\components\\\\StructurePicker.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Avatar, ListItem, Button as ButtonWithIcon, SearchBar } from \"react-native-elements\";\nimport { connect } from 'react-redux';\nimport { changeStratumComponentPermission } from \"../redux/actions/popUpActions\";\nimport { StructurePicker_Texts } from \"../languages/components/StructurePicker\";\nimport { STRUCTURES_NAMES } from \"../constants/structures\";\nimport * as Log from \"../genericFunctions/logFunctions\";\nimport * as Database from \"../genericFunctions/databaseFunctions\";\nimport * as auxiliarFunctions from \"../genericFunctions/otherFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR, WHITE_COLOR } from \"../constants/genericStyles\";\nimport * as D from \"../constants/Dimensions\";\n\nvar StructurePicker = function (_React$Component) {\n  _inherits(StructurePicker, _React$Component);\n\n  function StructurePicker(props) {\n    var _this;\n\n    _classCallCheck(this, StructurePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StructurePicker).call(this, props));\n\n    _this.showModal = function () {\n      var p = _this.props;\n\n      if (_this.props.enteringEnabled) {\n        p.dispatchEnteringPermission(false);\n\n        _this.setState({\n          modalVisible: true,\n          filter_name: null\n        });\n\n        if (p.data.savedStructure != null) {\n          Log.log_action(19, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n        } else {\n          Log.log_action(18, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n        }\n      }\n    };\n\n    _this.hideModal = function () {\n      _this.props.dispatchEnteringPermission(true);\n\n      _this.setState({\n        modalVisible: false,\n        filter_name: null\n      });\n    };\n\n    _this.cancelSelection = function () {\n      var s = _this.state;\n      var p = _this.props;\n\n      if (s.provStructure != s.savedStructure) {\n        Alert.alert(p.allMessages[10], p.allMessages[0]);\n\n        _this.setState({\n          provStructure: s.savedStructure\n        });\n      }\n\n      _this.hideModal();\n    };\n\n    _this.acceptSelection = function _callee() {\n      var s, p, payload;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              s = _this.state;\n              p = _this.props;\n\n              _this.setState({\n                savedStructure: s.provStructure\n              });\n\n              payload = {\n                savedStructure: s.provStructure\n              };\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Database.saveStratumModule(p.user_id, p.Object_id, p.index, s.componentKey, payload, p.isCore, p.localDB));\n\n            case 6:\n              _this.hideModal();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.setFilter = function (text) {\n      _this.setState({\n        filter_name: text\n      });\n    };\n\n    _this.deleteStructure = _this.deleteStructure.bind(_assertThisInitialized(_this));\n    _this.state = {\n      modalVisible: false,\n      savedStructure: _this.props.data.savedStructure,\n      provStructure: _this.props.data.savedStructure,\n      filter_name: null,\n      componentKey: _this.props.stratum_key + '_structure'\n    };\n    return _this;\n  }\n\n  _createClass(StructurePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatchEnteringPermission(true);\n    }\n  }, {\n    key: \"touchableStructureToPick\",\n    value: function touchableStructureToPick(item, i) {\n      var _this2 = this;\n\n      return React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this2.itemSelection(item);\n        },\n        key: item.name.concat('TouchableHighlight'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      }, React.createElement(ListItem, {\n        title: item.name,\n        key: item.name.concat('ListItem'),\n        leftAvatar: React.createElement(Avatar, {\n          size: \"medium\",\n          source: item.uri,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }));\n    }\n  }, {\n    key: \"renderStructures\",\n    value: function renderStructures(filter_name) {\n      var _this3 = this;\n\n      var p = this.props;\n\n      if (filter_name == null) {\n        return p.sortedStructures.map(function (item, i) {\n          return _this3.touchableStructureToPick(item, i);\n        });\n      }\n\n      return p.sortedStructures.filter(function (item) {\n        return auxiliarFunctions.stringIncludesSubstring_NoStrict(item.name, filter_name);\n      }).map(function (item, i) {\n        return _this3.touchableStructureToPick(item, i);\n      });\n    }\n  }, {\n    key: \"itemSelection\",\n    value: function itemSelection(item) {\n      var newElement = {\n        key: item.key,\n        uri: item.uri\n      };\n      this.setState({\n        provStructure: newElement\n      });\n    }\n  }, {\n    key: \"deleteStructure\",\n    value: function deleteStructure() {\n      this.setState({\n        provStructure: null\n      });\n    }\n  }, {\n    key: \"modalView\",\n    value: function modalView() {\n      var _this4 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modalVisible,\n        onRequestClose: this.cancelSelection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }, React.createElement(View, {\n        style: genericStyles.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        }\n      }, React.createElement(Text, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 17,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        }\n      }, p.allMessages[1], \": \", p.stratumName)), React.createElement(View, {\n        style: genericStyles.white_background_without_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        }\n      }, React.createElement(SearchBar, {\n        value: s.filter_name,\n        selectTextOnFocus: true,\n        lightTheme: true,\n        textAlign: 'center',\n        inputStyle: {\n          color: 'black',\n          backgroundColor: WHITE_COLOR\n        },\n        placeholder: p.allMessages[2],\n        placeholderTextColor: 'gray',\n        onChangeText: function onChangeText(text) {\n          return _this4.setFilter(text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        }\n      }), React.createElement(View, {\n        style: localStyles.structurePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, this.renderStructures(s.filter_name)))), React.createElement(View, {\n        style: genericStyles.smallRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          color: 'blue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, p.allMessages[3], \":\", '\\n', React.createElement(Text, {\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        }\n      }, s.provStructure == null ? null : p.allStructuresNames.find(function (element) {\n        return element.key === s.provStructure.key;\n      }).name))), React.createElement(View, {\n        style: {\n          paddingLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[4],\n        color: \"red\",\n        onPress: this.deleteStructure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        }\n      }))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        }\n      }, React.createElement(View, {\n        style: {\n          paddingRight: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[5],\n        color: DARK_GRAY_COLOR,\n        onPress: this.cancelSelection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        }\n      })), React.createElement(View, {\n        style: {\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[6],\n        icon: {\n          name: 'check'\n        },\n        onPress: this.acceptSelection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        }\n      }))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        }\n      }, this.modalView(), !s.savedStructure && p.takingShot && React.createElement(View, {\n        style: {\n          width: D.STRUCTURE_PICKER_WIDTH,\n          height: p.height,\n          borderWidth: 1,\n          borderColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        }\n      }), !s.savedStructure && p.height < 18 && !p.takingShot && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this5.showModal();\n        },\n        style: {\n          width: D.STRUCTURE_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        }\n      }, React.createElement(View, {\n        style: localStyles.showInstructionsObjectScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        }\n      })), !s.savedStructure && p.height >= 18 && !p.takingShot && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this5.showModal();\n        },\n        style: {\n          width: D.STRUCTURE_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        }\n      }, React.createElement(View, {\n        style: localStyles.showInstructionsObjectScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        }\n      }, p.allMessages[7]))), s.savedStructure && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this5.showModal();\n        },\n        style: {\n          width: D.STRUCTURE_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        }\n      }, React.createElement(View, {\n        style: localStyles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        }\n      }, React.createElement(Image, {\n        resizeMethod: \"auto\",\n        source: s.savedStructure.uri,\n        style: {\n          width: D.STRUCTURE_PICKER_WIDTH,\n          height: p.height,\n          opacity: 1,\n          borderColor: 'black',\n          borderWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        }\n      }))));\n    }\n  }]);\n\n  return StructurePicker;\n}(React.Component);\n\nvar localStyles = StyleSheet.create({\n  showInstructionsObjectScreen: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  image: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  structurePicker: {\n    flex: 8,\n    flexDirection: 'column',\n    padding: 10\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: StructurePicker_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB,\n    sortedStructures: state.libraryReducer.sortedStructures,\n    enteringEnabled: state.popUpReducer.stratumComponentEnabled,\n    allStructuresNames: STRUCTURES_NAMES[state.appPreferencesReducer.language]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchEnteringPermission: function dispatchEnteringPermission(bool) {\n      return dispatch(changeStratumComponentPermission(bool));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StructurePicker);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/components/StructurePicker.js"],"names":["React","Avatar","ListItem","Button","ButtonWithIcon","SearchBar","connect","changeStratumComponentPermission","StructurePicker_Texts","STRUCTURES_NAMES","Log","Database","auxiliarFunctions","genericStyles","DARK_GRAY_COLOR","WHITE_COLOR","D","StructurePicker","props","showModal","p","enteringEnabled","dispatchEnteringPermission","setState","modalVisible","filter_name","data","savedStructure","log_action","user_id","isCore","Object_id","stratum_key","hideModal","cancelSelection","s","state","provStructure","Alert","alert","allMessages","acceptSelection","payload","saveStratumModule","index","componentKey","localDB","setFilter","text","deleteStructure","bind","item","i","itemSelection","name","concat","uri","sortedStructures","map","touchableStructureToPick","filter","stringIncludesSubstring_NoStrict","newElement","key","lightGray_background","modalHeader","justifyContent","alignItems","fontSize","fontWeight","stratumName","white_background_without_ScrollView","color","backgroundColor","localStyles","structurePicker","renderStructures","smallRow","paddingRight","textAlign","allStructuresNames","find","element","paddingLeft","down_buttons","modalView","takingShot","width","STRUCTURE_PICKER_WIDTH","height","borderWidth","borderColor","showInstructionsObjectScreen","image","opacity","Component","StyleSheet","create","flex","flexDirection","padding","mapStateToProps","appPreferencesReducer","language","userReducer","libraryReducer","popUpReducer","stratumComponentEnabled","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, Button as ButtonNoIcon, Image, View, Alert,\n\t\t TouchableHighlight, StyleSheet, Modal, ScrollView,\n\t\t FlatList, TextInput} from 'react-native'\n\nimport { Avatar, ListItem, Button as ButtonWithIcon, SearchBar} from \"react-native-elements\"\n\nimport { connect } from 'react-redux'\nimport { changeStratumComponentPermission } from '../redux/actions/popUpActions'\nimport { StructurePicker_Texts } from '../languages/components/StructurePicker'\n\nimport { STRUCTURES_NAMES } from '../constants/structures'\n\nimport * as Log      from '../genericFunctions/logFunctions'\nimport * as Database from '../genericFunctions/databaseFunctions'\nimport * as auxiliarFunctions from '../genericFunctions/otherFunctions'\n\nimport { genericStyles, DARK_GRAY_COLOR, WHITE_COLOR } from '../constants/genericStyles'\nimport * as D from '../constants/Dimensions'\n\n\nclass StructurePicker extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\t/* Es necesario este \"bind para\" que se reconozca el \"this\" dentro de \"deleteStructure\"\n\t\t  (No sé por qué en esta función sí hace falta y en las otras no) */\n\t\tthis.deleteStructure = this.deleteStructure.bind(this);\n\n\t\tthis.state = {\t\n\t\t\tmodalVisible: false, // El modal se activa cuando el usuario presiona desde el ObjectScreen para entrar en la vista de estructura\n\n\t\t\tsavedStructure: this.props.data.savedStructure, // Estructura que ya fue guardada en la base de datos\n\t\t\tprovStructure:  this.props.data.savedStructure, // Estructura seleccionada por el usuario, pero que todavía no ha sido almacenada en la base de datos\n\n\t\t\tfilter_name:  null, // Almacenará el nombre que ingrese el usuario para filtrar la búsqueda\n\t\t\tcomponentKey: this.props.stratum_key + '_structure', // Para que se sepa qué parte del estrato se va a salvar\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\t/* Si no colocáramos esto, si el programador refresca esta página estando dentro de ella en la aplicación, se regresará a la \n\t\t   ventana externa sin haber vuelto a habilitar el permiso de poder ingresar a los componentes. Antes lo habilitábamos una sola vez\n\t\t   en la ventana externa, pero ahora en todos los componentes */\n\t\tthis.props.dispatchEnteringPermission(true);\n\t}\n\n\t// Cada botón que representa una estructura a seleccionar\n\ttouchableStructureToPick(item,i){\n\t\treturn (\n\t\t\t<TouchableHighlight  // Cada una de las estructuras (imagen y nombre) se muestra en un TouchableHighlight\n\t\t\t\tonPress = {() => {this.itemSelection(item)}}\n\t\t\t\tkey     = {item.name.concat('TouchableHighlight')}\n\t\t\t>\n\t\t\t\t<ListItem\n\t\t\t\t\ttitle      = {item.name}\n\t\t\t\t\tkey        = {item.name.concat('ListItem')}\n\t\t\t\t\tleftAvatar = {<Avatar  size=\"medium\"  source={item.uri}/>}\n\t\t\t\t/>\n\t\t\t</TouchableHighlight>\n\t\t)\n\t}\n\n\t/// Función para mostrar las estructuras como botones\n\trenderStructures (filter_name) {\n\t\tlet p = this.props;\n\n\t\t// Caso en que el usuario no ha puesto ningún nombre para filtrar\n\t\tif (filter_name == null) {\n\t\t\treturn p.sortedStructures.map((item, i) => (\n\t\t\t\tthis.touchableStructureToPick(item,i)\n\t\t\t))\n\t\t}\n\t\t// Caso en que el usuario ya ha ingresado un nombre para comenzar a filtrar\n\t\treturn (\n\t\t\tp.sortedStructures.filter(item => auxiliarFunctions.stringIncludesSubstring_NoStrict(item.name,filter_name))\n\t\t\t\t.map((item, i) => (\n\t\t\t\t\tthis.touchableStructureToPick(item,i)\n\t\t\t\t))\n\t\t)\n\t}\n\n\tshowModal = () => {\n\t\tlet p = this.props;\n\t\tif (this.props.enteringEnabled){\n\t\t\tp.dispatchEnteringPermission(false);\n\t\t\tthis.setState({modalVisible: true, filter_name: null});\n\n\t\t\tif (p.data.savedStructure != null) {\n\t\t\t\tLog.log_action(19, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n\t\t\t}\n\t\t\telse {\t\n\t\t\t\tLog.log_action(18, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n\t\t\t}\t\n\t\t}\n\t}\n\n\thideModal = () => {\n\t\tthis.props.dispatchEnteringPermission(true);\n\t\tthis.setState({modalVisible: false, filter_name: null});\n\t}\n\n\t// Usado cuando el usuario presiona sobre un TouchableHighlight para seleccionar una estructura\n\titemSelection (item) {\n\t\tvar newElement = {\n\t\t\tkey: item.key,\n\t\t\turi: item.uri,\n\t\t}\n\t\tthis.setState({provStructure: newElement})\n\t}\n\n\t// Usado para eliminar la estructura que había sido seleccionada\n\tdeleteStructure (){\n\t\tthis.setState({provStructure: null});\n\t}\n\n\t// Se activa cuando el usuario presiona el botón \"Cancelar\"\n\tcancelSelection = () => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tif (s.provStructure != s.savedStructure){\n\t\t\t// Alerta: \"No se salvaron los cambios\"\n\t\t\tAlert.alert(p.allMessages[10], p.allMessages[0]);\n\n\t\t\tthis.setState({provStructure: s.savedStructure});\n\t\t}\n\t\tthis.hideModal();\n\t}\n\n\t// Se activa cuando el usuario le da al botón de \"Aceptar\"\n\tacceptSelection = async() => {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\tthis.setState({savedStructure: s.provStructure});\n\n\t\tconst payload = {\n\t\t\tsavedStructure: s.provStructure,\n\t\t}\n\t\tawait Database.saveStratumModule(p.user_id, p.Object_id, p.index, s.componentKey, payload, p.isCore, p.localDB);\n\t\tthis.hideModal();\n\t}\n\n\t// Una vez que se cambia el texto en el que se filtran las estructuras, se invoca este procedimiento\n\tsetFilter = (text) => {\n\t\tthis.setState({filter_name: text})\n\t}\n\n\tmodalView() {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modalVisible}\n\t\t\t\t\tonRequestClose = {this.cancelSelection}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Cabecera de la pantalla que dice el nombre del estrato que se está modificando*/}\n\t\t\t\t\t\t<View style = {genericStyles.modalHeader}>\n\t\t\t\t\t\t\t{/* Mensaje: \"Estructura del estrato\"*/}\n\t\t\t\t\t\t\t<Text style = {{justifyContent: 'center', alignItems: 'center', fontSize: 17, fontWeight: 'bold'}}>\n\t\t\t\t\t\t\t\t{p.allMessages[1]}: {p.stratumName}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*Parte en la que el usuario selecciona la estructura*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_without_ScrollView}>\n\n\t\t\t\t\t\t\t{/*Aquí el usuario puede filtrar la búsqueda de la estructura*/}\n\t\t\t\t\t\t\t<SearchBar\n\t\t\t\t\t\t\t\tvalue                  = {s.filter_name}\n\t\t\t\t\t\t\t\tselectTextOnFocus      = {true}\n\t\t\t\t\t\t\t\tlightTheme             = {true}\n\t\t\t\t\t\t\t\ttextAlign              = {'center'} \n\t\t\t\t\t\t\t\tinputStyle             = {{color: 'black', backgroundColor: WHITE_COLOR}}\n\t\t\t\t\t\t\t\tplaceholder            = {p.allMessages[2]} // Mensaje: \"Buscar...\"\n\t\t\t\t\t\t\t\tplaceholderTextColor   = {'gray'}\n\t\t\t\t\t\t\t\tonChangeText           = {text => this.setFilter(text)}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{/*En esta parte debe mostrarse la lista de estructuras*/}\n\t\t\t\t\t\t\t<View style = {localStyles.structurePicker}>\n\t\t\t\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t\t\t\t{this.renderStructures(s.filter_name)}\n\t\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Parte en la que se muestra el nombre de la estructura seleccionada, lista para ser agregada*/}\n\t\t\t\t\t\t<View style = {genericStyles.smallRow}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 10}}>\n\t\t\t\t\t\t\t\t<Text style = {{textAlign: 'center',justifyContent: 'center', alignItems: 'center', color: 'blue'}}>{p.allMessages[3]}:{'\\n'}\t\n\t\t\t\t\t\t\t\t\t<Text style = {{color: 'black'}}>\n\t\t\t\t\t\t\t\t\t\t{(s.provStructure == null) ? null :\n\t\t\t\t\t\t\t\t\t\t\tp.allStructuresNames.find(element => element.key === s.provStructure.key).name}\n\t\t\t\t\t\t\t\t\t</Text>\t\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 10}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[4]} /// Mensaje: \"Eliminar\"\n\t\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\t\tonPress = {this.deleteStructure}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*//Segundo sector, que es la vista de los botones para darle Aceptar o Cancelar*/}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\n\t\t\t\t\t\t\t<View style = {{paddingRight: 25}}>\n\t\t\t\t\t\t\t\t<ButtonNoIcon \n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[5]} // Mensaje: \"Cancelar\"\n\t\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\t\tonPress = {this.cancelSelection}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t<View style = {{paddingLeft: 25}}>\n\t\t\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[6]}  /// Mensaje: \"Aceptar\"\n\t\t\t\t\t\t\t\t\ticon    = {{name: 'check'}}\n\t\t\t\t\t\t\t\t\tonPress = {this.acceptSelection}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Lo que se le mostrará al usuario\n  \trender() {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn (\n\t\t\t<View>\n\n\t\t\t\t{/*Ésta es la parte que ve el usuario cuando ingresa a la sección de estructura sedimentaria*/}\n\t\t\t\t{this.modalView()}\n\n\t\t\t\t{/*Ésta es la parte que ve el usuario cuando está en la ventana externa*/}\n\n\t\t\t\t{ // Caso en que no se ha seleccionado ninguna imagen y se está haciendo una captura del afloramiento\n\t\t\t\t!s.savedStructure && p.takingShot &&\n\t\t\t\t\t<View style = {{width: D.STRUCTURE_PICKER_WIDTH, height: p.height, borderWidth: 1, borderColor: 'black'}}/>\n\t\t\t\t}\n\n\t\t\t\t{ // Caso en que no se ha seleccionado ninguna estructura, la altura es menor que 18 y no se está haciendo captura del afloramiento\n\t\t\t\t!s.savedStructure && (p.height < 18) && (!p.takingShot) &&\n\t\t\t\t\t<TouchableHighlight onPress = {() => {this.showModal()}} style = {{width: D.STRUCTURE_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {localStyles.showInstructionsObjectScreen}/>\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t}\n\n\t\t\t\t{ /// Caso en que no se ha seleccionado ninguna estructura, la altura es mayor o igual que 18 y no se está haciendo captura del afloramiento\n\t\t\t\t!s.savedStructure && (p.height >= 18) && (!p.takingShot) &&\n\t\t\t\t\t<TouchableHighlight onPress = {() => {this.showModal()}} style = {{width: D.STRUCTURE_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {localStyles.showInstructionsObjectScreen}>\n\t\t\t\t\t\t\t{/*Mensaje: \"(Toque para cambiar la estructura)\"*/}\n\t\t\t\t\t\t\t<Text>{p.allMessages[7]}</Text> \n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t}\n\n\t\t\t\t{ /// Caso en que ya se seleccionó una estructura\n\t\t\t\ts.savedStructure && \n\t\t\t\t\t<TouchableHighlight onPress = {() => {this.showModal()}} style = {{width: D.STRUCTURE_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {localStyles.image}>\n\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\tresizeMethod = \"auto\"\n\t\t\t\t\t\t\t\tsource = {s.savedStructure.uri} \n\t\t\t\t\t\t\t\tstyle  = {{\n\t\t\t\t\t\t\t\t\twidth:       D.STRUCTURE_PICKER_WIDTH,\n\t\t\t\t\t\t\t\t\theight:      p.height,\n\t\t\t\t\t\t\t\t\topacity:     1,\n\t\t\t\t\t\t\t\t\tborderColor: 'black',\n\t\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableHighlight>\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\n/// Constante para darle formato a los diversos componentes de esta pantalla\nconst localStyles = StyleSheet.create({\n\n\t// Empleado para mostrar en la ventana \"ObjectScreen\" el texto que indica que se debe tocar allí para cambiar la estructura\n\tshowInstructionsObjectScreen: {\n\t\tflex:           1,\n\t\tflexDirection:  'column',\n\t\tjustifyContent: 'center',\n\t\talignItems:     'center',\n\t\tborderColor:    'black',\n\t\tborderWidth:    1,\n\t},\n\n\t// Para mostrar la imagen de la estructura en la ventana externa\n\timage: {\n\t\tflex:           1,\n\t\tflexDirection:  'row',\n\t\tjustifyContent: 'flex-start',\n\t\talignItems:     'center',\n\t},\n\n\t// Formato para mostrar una estructura (no la lista completa, sino una específica)\n\tstructurePicker: {\n\t\tflex:          8,\n\t\tflexDirection: 'column',\n\t\tpadding:       10,\n\t},\n\n});\n\n// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages:      StructurePicker_Texts[state.appPreferencesReducer.language],  \n\t\tuser_id:          state.userReducer.user_id,\n\t\tlocalDB:          state.userReducer.localDB,\n\t\tsortedStructures: state.libraryReducer.sortedStructures,\n\t\tenteringEnabled:  state.popUpReducer.stratumComponentEnabled,\n\n\t\t// Aquí almacenamos los nombres de las estructuras que se le mostrarán al usuario, de acuerdo al idioma\n\t\tallStructuresNames: STRUCTURES_NAMES[state.appPreferencesReducer.language],\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchEnteringPermission: (bool) => dispatch(changeStratumComponentPermission(bool)),\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StructurePicker);"]},"metadata":{},"sourceType":"module"}