{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\components\\\\ImagePicker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { TouchableWithoutFeedBack } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ButtonNoIcon from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { CheckBox, Button as ButtonWithIcon } from \"react-native-elements\";\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport * as ExpoImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as ExpoFileSystem from 'expo-file-system';\nimport { connect } from 'react-redux';\nimport { changeStratumComponentPermission } from \"../redux/actions/popUpActions\";\nimport { ImagePicker_Texts } from \"../languages/components/ImagePicker\";\nimport * as Log from \"../genericFunctions/logFunctions\";\nimport * as Database from \"../genericFunctions/databaseFunctions\";\nimport * as auxiliarFunctions from \"../genericFunctions/otherFunctions\";\nimport { genericStyles, DARK_GRAY_COLOR } from \"../constants/genericStyles\";\nimport * as D from \"../constants/Dimensions\";\nvar URI_PREFIX = 'data:image/jpeg;base64,';\n\nvar ImagePicker = function (_React$Component) {\n  _inherits(ImagePicker, _React$Component);\n\n  function ImagePicker(props) {\n    var _this;\n\n    _classCallCheck(this, ImagePicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImagePicker).call(this, props));\n\n    _this.showModal_1 = function () {\n      var p = _this.props;\n\n      if (_this.props.enteringEnabled) {\n        p.dispatchEnteringPermission(false);\n\n        _this.setState({\n          modal_1_visible: true\n        });\n\n        if (p.data.listOfImages != null) {\n          Log.log_action(23, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n        } else {\n          Log.log_action(22, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n        }\n      }\n    };\n\n    _this.hideModal_1 = function () {\n      _this.props.dispatchEnteringPermission(true);\n\n      _this.setState({\n        modal_1_visible: false\n      });\n    };\n\n    _this.setModal_2_Visible = function (isVisible) {\n      _this.setState({\n        modal_2_visible: isVisible\n      });\n    };\n\n    _this.setModal_3_Visible = function (isVisible) {\n      _this.setState({\n        modal_3_visible: isVisible\n      });\n    };\n\n    _this.showModal_4 = function (item) {\n      Image.getSize(item.uri, function (width, height) {\n        _this.setState({\n          modal_4_visible: true,\n          currentImageToEdit: item,\n          currentImageToEdit_width: width,\n          currentImageToEdit_height: height\n        });\n      });\n    };\n\n    _this.hideModal_4 = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                modal_4_visible: false,\n                currentImageToEdit: null,\n                currentImageToEdit_width: null,\n                currentImageToEdit_height: null\n              });\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.create_matrixOfImages());\n\n            case 3:\n              _this.create_RenderMatrix();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.selectPictureFromGallery = function _callee2() {\n      var _await$Permissions$as, status, _await$ExpoImagePicke, cancelled, uri, base64;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 8;\n                break;\n              }\n\n              Alert.alert(_this.props.allMessages[13], _this.props.allMessages[11]);\n              _context2.next = 16;\n              break;\n\n            case 8:\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(ExpoImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                base64: true\n              }));\n\n            case 10:\n              _await$ExpoImagePicke = _context2.sent;\n              cancelled = _await$ExpoImagePicke.cancelled;\n              uri = _await$ExpoImagePicke.uri;\n              base64 = _await$ExpoImagePicke.base64;\n              ExpoFileSystem.deleteAsync(uri);\n\n              if (!cancelled) {\n                _this.saveImage(base64);\n              }\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.takePicture = function _callee3() {\n      var _await$Permissions$as2, status, _await$ExpoImagePicke2, cancelled, uri, base64;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as2 = _context3.sent;\n              status = _await$Permissions$as2.status;\n\n              if (!(status !== 'granted')) {\n                _context3.next = 8;\n                break;\n              }\n\n              Alert.alert(_this.props.allMessages[13], _this.props.allMessages[12]);\n              _context3.next = 16;\n              break;\n\n            case 8:\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(ExpoImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                base64: true\n              }));\n\n            case 10:\n              _await$ExpoImagePicke2 = _context3.sent;\n              cancelled = _await$ExpoImagePicke2.cancelled;\n              uri = _await$ExpoImagePicke2.uri;\n              base64 = _await$ExpoImagePicke2.base64;\n              ExpoFileSystem.deleteAsync(uri);\n\n              if (!cancelled) {\n                _this.saveImage(base64);\n              }\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      uriImageToShow: _this.props.data.uriImageToShow == null ? null : _this.props.data.uriImageToShow,\n      listOfImages: _this.props.data.listOfImages == null ? [] : _this.props.data.listOfImages,\n      matrixOfImages: null,\n      renderMatrix: null,\n      modal_1_visible: false,\n      modal_2_visible: false,\n      modal_3_visible: false,\n      modal_4_visible: false,\n      currentImageToEdit: null,\n      currentImageToEdit_width: null,\n      currentImageToEdit_height: null,\n      imageDimensions_OuterScreen: 0.42 * D.GLOBAL_SCREEN_WIDTH,\n      componentKey: _this.props.stratum_key + '_image'\n    };\n    return _this;\n  }\n\n  _createClass(ImagePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.props.dispatchEnteringPermission(true);\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(this.create_matrixOfImages());\n\n            case 3:\n              this.create_RenderMatrix();\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"saveInDatabase\",\n    value: function saveInDatabase(payload) {\n      return _regeneratorRuntime.async(function saveInDatabase$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(Database.saveStratumModule(this.props.user_id, this.props.Object_id, this.props.index, this.state.componentKey, payload, this.props.isCore, this.props.localDB));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"create_matrixOfImages\",\n    value: function create_matrixOfImages() {\n      var s = this.state;\n      var len = s.listOfImages.length;\n\n      if (len > 0) {\n        var matrix = [];\n        var numberRows = Math.ceil(s.listOfImages.length / 2);\n\n        for (i = 0; i < numberRows; i++) {\n          var newRow = [];\n          var i1 = i << 1;\n          var i2 = i1 + 1;\n          newRow.push(s.listOfImages[i1]);\n\n          if (i2 < len) {\n            newRow.push(s.listOfImages[i2]);\n          }\n\n          matrix.push(newRow);\n        }\n\n        this.setState({\n          matrixOfImages: matrix\n        });\n      } else {\n        this.setState({\n          matrixOfImages: [[]]\n        });\n      }\n    }\n  }, {\n    key: \"create_RenderMatrix\",\n    value: function create_RenderMatrix() {\n      var _this2 = this;\n\n      var s;\n      return _regeneratorRuntime.async(function create_RenderMatrix$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              s = this.state;\n              _context6.next = 3;\n              return _regeneratorRuntime.awrap(this.setState({\n                renderMatrix: s.matrixOfImages.map(function (rowOfImages, i) {\n                  return React.createElement(View, {\n                    style: {\n                      flex: 1,\n                      flexDirection: 'row',\n                      justifyContent: 'space-around',\n                      alignItems: 'center',\n                      paddingTop: 10,\n                      paddingBottom: 10\n                    },\n                    key: i,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 108\n                    }\n                  }, rowOfImages.map(function (item, k) {\n                    return React.createElement(View, {\n                      style: {\n                        width: s.imageDimensions_OuterScreen,\n                        height: s.imageDimensions_OuterScreen,\n                        opacity: 1\n                      },\n                      key: k,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 110\n                      }\n                    }, React.createElement(TouchableHighlight, {\n                      onPress: function onPress() {\n                        _this2.showModal_4(item);\n                      },\n                      style: {\n                        flex: 1\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 111\n                      }\n                    }, React.createElement(Image, {\n                      source: {\n                        uri: URI_PREFIX + item.uri\n                      },\n                      style: {\n                        flex: 1\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 115\n                      }\n                    })));\n                  }));\n                })\n              }));\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"saveImage\",\n    value: function saveImage(uri) {\n      var s, p, isCover, uriToShow, newImage, payload;\n      return _regeneratorRuntime.async(function saveImage$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              s = this.state;\n              p = this.props;\n              isCover = false;\n              uriToShow = s.uriImageToShow;\n\n              if (s.listOfImages.length == 0) {\n                this.setState({\n                  uriImageToShow: uri\n                });\n                uriToShow = uri;\n                isCover = true;\n              }\n\n              newImage = {\n                key: auxiliarFunctions.generate_key(),\n                uri: uri,\n                description: \"\",\n                isCover: isCover\n              };\n              _context7.next = 8;\n              return _regeneratorRuntime.awrap(s.listOfImages.push(newImage));\n\n            case 8:\n              _context7.next = 10;\n              return _regeneratorRuntime.awrap(this.create_matrixOfImages());\n\n            case 10:\n              this.create_RenderMatrix();\n              payload = {\n                listOfImages: s.listOfImages,\n                uriImageToShow: uriToShow\n              };\n              _context7.next = 14;\n              return _regeneratorRuntime.awrap(this.saveInDatabase(payload, newImage));\n\n            case 14:\n              Alert.alert(this.props.allMessages[13], this.props.allMessages[17]);\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"changeDescriptionText\",\n    value: function changeDescriptionText(text) {\n      var s = this.state;\n      var p = this.props;\n      var elem = s.currentImageToEdit;\n      var updatedImage = {\n        uri: elem.uri,\n        key: elem.key,\n        description: text,\n        isCover: elem.isCover\n      };\n      this.setState({\n        currentImageToEdit: updatedImage\n      });\n      var index = s.listOfImages.findIndex(function (image) {\n        return image.key === elem.key;\n      });\n      s.listOfImages[index] = updatedImage;\n      var payload = {\n        listOfImages: s.listOfImages,\n        uriImageToShow: s.uriImageToShow\n      };\n      this.saveInDatabase(payload);\n    }\n  }, {\n    key: \"changeIsCover\",\n    value: function changeIsCover() {\n      var s, p, cImage, originalBoolean, updatedCurrentImage, currentIndex, newCover, updatedNewCover, indexPreviousCover, previousCover, updatedPreviousCover, payload;\n      return _regeneratorRuntime.async(function changeIsCover$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              s = this.state;\n              p = this.props;\n              cImage = s.currentImageToEdit;\n              originalBoolean = cImage.isCover;\n              updatedCurrentImage = {\n                uri: cImage.uri,\n                key: cImage.key,\n                description: cImage.description,\n                isCover: !originalBoolean\n              };\n              currentIndex = s.listOfImages.findIndex(function (image) {\n                return image.key === cImage.key;\n              });\n\n              if (originalBoolean) {\n                currentIndex == 0 ? indexNewCover = 1 : indexNewCover = 0;\n                newCover = s.listOfImages[indexNewCover];\n                updatedNewCover = {\n                  uri: newCover.uri,\n                  key: newCover.key,\n                  description: newCover.description,\n                  isCover: true\n                };\n                s.listOfImages[indexNewCover] = updatedNewCover;\n                s.listOfImages[currentIndex] = updatedCurrentImage;\n                this.setState({\n                  uriImageToShow: newCover.uri,\n                  currentImageToEdit: updatedCurrentImage\n                });\n              } else {\n                  indexPreviousCover = s.listOfImages.findIndex(function (element) {\n                    return element.isCover === true;\n                  });\n                  previousCover = s.listOfImages[indexPreviousCover];\n                  updatedPreviousCover = {\n                    uri: previousCover.uri,\n                    key: previousCover.key,\n                    description: previousCover.description,\n                    isCover: false\n                  };\n                  s.listOfImages[indexPreviousCover] = updatedPreviousCover;\n                  s.listOfImages[currentIndex] = updatedCurrentImage;\n                  this.setState({\n                    uriImageToShow: cImage.uri,\n                    currentImageToEdit: updatedCurrentImage\n                  });\n                }\n\n              payload = {\n                listOfImages: s.listOfImages,\n                uriImageToShow: cImage.uri\n              };\n              _context8.next = 10;\n              return _regeneratorRuntime.awrap(this.saveInDatabase(payload));\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"deleteImage\",\n    value: function deleteImage() {\n      var _this3 = this;\n\n      var p = this.props;\n\n      var deleteImageAux = function deleteImageAux(p) {\n        var s, cImage, wasCover, currentCoverUri, saveChanges, list, elem, updatedImage, payload;\n        return _regeneratorRuntime.async(function deleteImageAux$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                s = _this3.state;\n                cImage = s.currentImageToEdit;\n                wasCover = cImage.isCover;\n                currentCoverUri = s.uriImageToShow;\n                saveChanges = false;\n                list = s.listOfImages.filter(function (item) {\n                  return item.key.toString() !== cImage.key.toString();\n                });\n\n                if (!wasCover) {\n                  _context9.next = 21;\n                  break;\n                }\n\n                if (!(list.length == 0)) {\n                  _context9.next = 12;\n                  break;\n                }\n\n                currentCoverUri = null;\n                saveChanges = true;\n                _context9.next = 19;\n                break;\n\n              case 12:\n                elem = list[0];\n                updatedImage = {\n                  uri: elem.uri,\n                  key: elem.key,\n                  description: elem.description,\n                  isCover: true\n                };\n                currentCoverUri = elem.uri;\n                _context9.next = 17;\n                return _regeneratorRuntime.awrap(updatedImage);\n\n              case 17:\n                list[0] = _context9.sent;\n                saveChanges = true;\n\n              case 19:\n                _context9.next = 22;\n                break;\n\n              case 21:\n                saveChanges = true;\n\n              case 22:\n                if (!saveChanges) {\n                  _context9.next = 29;\n                  break;\n                }\n\n                _context9.next = 25;\n                return _regeneratorRuntime.awrap(_this3.setState({\n                  listOfImages: list,\n                  uriImageToShow: currentCoverUri\n                }));\n\n              case 25:\n                payload = {\n                  listOfImages: list,\n                  uriImageToShow: currentCoverUri\n                };\n                _context9.next = 28;\n                return _regeneratorRuntime.awrap(_this3.saveInDatabase(payload));\n\n              case 28:\n                _this3.hideModal_4();\n\n              case 29:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        });\n      };\n\n      Alert.alert(p.allMessages[13], p.allMessages[14], [{\n        text: p.allMessages[15],\n        onPress: function onPress() {\n          return deleteImageAux(p);\n        }\n      }, {\n        text: p.allMessages[16]\n      }]);\n    }\n  }, {\n    key: \"modal_1_View\",\n    value: function modal_1_View() {\n      var _this4 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_1_visible,\n        onRequestClose: function onRequestClose() {\n          return _this4.hideModal_1();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        }\n      }, React.createElement(View, {\n        style: genericStyles.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        }\n      }, React.createElement(Text, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 17,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        }\n      }, p.allMessages[0], \": \", p.stratumName)), React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        }\n      }, React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[1],\n        onPress: this.selectPictureFromGallery,\n        icon: {\n          name: 'add-to-photos'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        }\n      })), React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[2],\n        onPress: this.takePicture,\n        icon: {\n          name: 'add-a-photo'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        }\n      })), React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        }\n      }, React.createElement(ButtonWithIcon, {\n        raised: true,\n        title: p.allMessages[3],\n        onPress: function onPress() {\n          _this4.setModal_2_Visible(true);\n        },\n        icon: {\n          name: 'collections'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        }\n      })), React.createElement(View, {\n        style: localStyles.buttonView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        title: p.allMessages[4],\n        color: \"#4f4f4f\",\n        onPress: function onPress() {\n          _this4.hideModal_1();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        }\n      })))))));\n    }\n  }, {\n    key: \"modal_2_View\",\n    value: function modal_2_View() {\n      var _this5 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_2_visible,\n        onRequestClose: function onRequestClose() {\n          return _this5.setModal_2_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        }\n      }, React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        }\n      }, s.listOfImages.length == 0 && React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'space-around',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        }\n      }, p.allMessages[5])), s.listOfImages.length != 0 && React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        }\n      }, s.renderMatrix)), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[4],\n        onPress: function onPress() {\n          return _this5.setModal_2_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        }\n      })))));\n    }\n  }, {\n    key: \"modal_3_View\",\n    value: function modal_3_View() {\n      var _this6 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_3_visible,\n        onRequestClose: function onRequestClose() {\n          return _this6.setModal_3_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        }\n      }, s.currentImageToEdit != null && React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        }\n      }, React.createElement(View, {\n        style: localStyles.imageView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, React.createElement(ImageZoom, {\n        cropWidth: 0.9 * D.GLOBAL_SCREEN_WIDTH,\n        cropHeight: 0.8 * D.GLOBAL_SCREEN_HEIGHT,\n        imageWidth: s.currentImageToEdit_width,\n        imageHeight: s.currentImageToEdit_height,\n        enableCenterFocus: false,\n        minScale: 1 / 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: URI_PREFIX + s.currentImageToEdit.uri\n        },\n        style: {\n          width: s.currentImageToEdit_width,\n          height: s.currentImageToEdit_height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[4],\n        onPress: function onPress() {\n          return _this6.setModal_3_Visible(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        }\n      })))));\n    }\n  }, {\n    key: \"modal_4_View\",\n    value: function modal_4_View() {\n      var _this7 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        }\n      }, React.createElement(Modal, {\n        animationType: \"fade\",\n        transparent: false,\n        visible: s.modal_4_visible,\n        onRequestClose: function onRequestClose() {\n          return _this7.hideModal_4();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        }\n      }, React.createElement(View, {\n        style: genericStyles.lightGray_background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        }\n      }, s.currentImageToEdit != null && React.createElement(View, {\n        style: genericStyles.white_background_with_ScrollView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        }\n      }, React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this7.setModal_3_Visible(true);\n        },\n        style: localStyles.touchableHighlight_NoBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        }\n      }, React.createElement(Image, {\n        resizeMethod: \"auto\",\n        source: {\n          uri: URI_PREFIX + s.currentImageToEdit.uri\n        },\n        style: localStyles.touchableHighlight_WithBorder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        }\n      }))), React.createElement(Text, {\n        style: _objectSpread({}, genericStyles.subtitle, {\n          paddingTop: 20\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        }\n      }, p.allMessages[6]), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          height: 0.13 * D.GLOBAL_SCREEN_HEIGHT,\n          width: 0.8 * D.GLOBAL_SCREEN_WIDTH,\n          borderColor: 'black',\n          borderWidth: 1,\n          padding: 5,\n          textAlign: 'center'\n        },\n        onChangeText: function onChangeText(text) {\n          return _this7.changeDescriptionText(text);\n        },\n        multiline: true,\n        selectTextOnFocus: true,\n        defaultValue: s.currentImageToEdit.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        }\n      })), s.listOfImages.length > 1 && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread({}, genericStyles.subtitle, {\n          paddingTop: 20\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        }\n      }, p.allMessages[7]), React.createElement(CheckBox, {\n        title: p.allMessages[8],\n        checked: s.currentImageToEdit.isCover,\n        onPress: function onPress() {\n          _this7.changeIsCover();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 40,\n          paddingBottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: \"red\",\n        title: p.allMessages[9],\n        onPress: function onPress() {\n          return _this7.deleteImage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        }\n      })))), React.createElement(View, {\n        style: genericStyles.down_buttons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        }\n      }, React.createElement(ButtonNoIcon, {\n        raised: true,\n        color: DARK_GRAY_COLOR,\n        title: p.allMessages[4],\n        onPress: function onPress() {\n          return _this7.hideModal_4();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        }\n      })))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var s = this.state;\n      var p = this.props;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        }\n      }, this.modal_1_View(), this.modal_2_View(), this.modal_3_View(), this.modal_4_View(), s.listOfImages.length == 0 && p.takingShot && React.createElement(View, {\n        style: {\n          width: D.IMAGE_PICKER_WIDTH,\n          height: p.height,\n          borderWidth: 1,\n          borderColor: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        }\n      }), (s.listOfImages.length != 0 || !p.takingShot) && React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          _this8.showModal_1();\n        },\n        style: {\n          width: D.IMAGE_PICKER_WIDTH,\n          height: p.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        }\n      }, React.createElement(View, {\n        style: localStyles.showInstructionsObjectScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        }\n      }, s.listOfImages.length == 0 && p.height >= 18 && React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        }\n      }, p.allMessages[10]), s.listOfImages.length != 0 && React.createElement(Image, {\n        resizeMethod: \"auto\",\n        source: {\n          uri: URI_PREFIX + s.uriImageToShow\n        },\n        style: {\n          width: D.IMAGE_PICKER_WIDTH,\n          height: p.height,\n          borderColor: 'black',\n          borderWidth: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        }\n      }))));\n    }\n  }]);\n\n  return ImagePicker;\n}(React.Component);\n\nvar localStyles = StyleSheet.create({\n  showInstructionsObjectScreen: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  imageView: {\n    flex: 1,\n    flexDirection: 'column',\n    paddingTop: 20,\n    paddingBottom: 15,\n    paddingRight: 15,\n    paddingLeft: 15,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonView: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 23\n  },\n  instructionsModuleHeader: {\n    flex: 0.07,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 15,\n    paddingBottom: 15,\n    width: D.GLOBAL_SCREEN_WIDTH\n  },\n  touchableHighlight_WithBorder: {\n    height: 0.7 * D.GLOBAL_SCREEN_WIDTH,\n    width: 0.7 * D.GLOBAL_SCREEN_WIDTH,\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  touchableHighlight_NoBorder: {\n    height: 0.7 * D.GLOBAL_SCREEN_WIDTH,\n    width: 0.7 * D.GLOBAL_SCREEN_WIDTH\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    allMessages: ImagePicker_Texts[state.appPreferencesReducer.language],\n    user_id: state.userReducer.user_id,\n    localDB: state.userReducer.localDB,\n    enteringEnabled: state.popUpReducer.stratumComponentEnabled\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchEnteringPermission: function dispatchEnteringPermission(bool) {\n      return dispatch(changeStratumComponentPermission(bool));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePicker);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/components/ImagePicker.js"],"names":["React","TouchableWithoutFeedBack","CheckBox","Button","ButtonWithIcon","ImageZoom","ExpoImagePicker","Permissions","ExpoFileSystem","connect","changeStratumComponentPermission","ImagePicker_Texts","Log","Database","auxiliarFunctions","genericStyles","DARK_GRAY_COLOR","D","URI_PREFIX","ImagePicker","props","showModal_1","p","enteringEnabled","dispatchEnteringPermission","setState","modal_1_visible","data","listOfImages","log_action","user_id","isCore","Object_id","stratum_key","hideModal_1","setModal_2_Visible","isVisible","modal_2_visible","setModal_3_Visible","modal_3_visible","showModal_4","item","Image","getSize","uri","width","height","modal_4_visible","currentImageToEdit","currentImageToEdit_width","currentImageToEdit_height","hideModal_4","create_matrixOfImages","create_RenderMatrix","selectPictureFromGallery","askAsync","CAMERA_ROLL","status","Alert","alert","allMessages","launchImageLibraryAsync","allowsEditing","base64","cancelled","deleteAsync","saveImage","takePicture","CAMERA","launchCameraAsync","state","uriImageToShow","matrixOfImages","renderMatrix","imageDimensions_OuterScreen","GLOBAL_SCREEN_WIDTH","componentKey","payload","saveStratumModule","index","localDB","s","len","length","matrix","numberRows","Math","ceil","i","newRow","i1","i2","push","map","rowOfImages","flex","flexDirection","justifyContent","alignItems","paddingTop","paddingBottom","k","opacity","isCover","uriToShow","newImage","key","generate_key","description","saveInDatabase","text","elem","updatedImage","findIndex","image","cImage","originalBoolean","updatedCurrentImage","currentIndex","indexNewCover","newCover","updatedNewCover","indexPreviousCover","element","previousCover","updatedPreviousCover","deleteImageAux","wasCover","currentCoverUri","saveChanges","list","filter","toString","onPress","lightGray_background","modalHeader","fontSize","fontWeight","stratumName","white_background_with_ScrollView","localStyles","buttonView","name","textAlign","down_buttons","imageView","GLOBAL_SCREEN_HEIGHT","touchableHighlight_NoBorder","touchableHighlight_WithBorder","subtitle","borderColor","borderWidth","padding","changeDescriptionText","changeIsCover","deleteImage","modal_1_View","modal_2_View","modal_3_View","modal_4_View","takingShot","IMAGE_PICKER_WIDTH","showInstructionsObjectScreen","Component","StyleSheet","create","paddingRight","paddingLeft","instructionsModuleHeader","mapStateToProps","appPreferencesReducer","language","userReducer","popUpReducer","stratumComponentEnabled","mapDispatchToProps","dispatch","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, Button, Image, View, AppRegistry, TouchableWithoutFeedBack, \n\t\tScrollView, Alert, TouchableHighlight, StyleSheet, Dimensions, \n\t\tModal, Button as ButtonNoIcon, TextInput, Platform } from 'react-native'\n\nimport { CheckBox, Button as ButtonWithIcon} from \"react-native-elements\"\n\nimport ImageZoom from 'react-native-image-pan-zoom'\nimport * as ExpoImagePicker from 'expo-image-picker'\nimport * as Permissions     from 'expo-permissions'\nimport * as ExpoFileSystem   from 'expo-file-system'\n\nimport { connect } from 'react-redux'\nimport { changeStratumComponentPermission } from '../redux/actions/popUpActions'\nimport { ImagePicker_Texts } from '../languages/components/ImagePicker'\n\nimport * as Log          from '../genericFunctions/logFunctions'\nimport * as Database     from '../genericFunctions/databaseFunctions'\nimport * as auxiliarFunctions from '../genericFunctions/otherFunctions'\nimport { genericStyles, DARK_GRAY_COLOR } from '../constants/genericStyles'\nimport * as D            from '../constants/Dimensions'\n\nconst URI_PREFIX = 'data:image/jpeg;base64,'\n\nclass ImagePicker extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\t// Dirección de la imagen que se muestra en el ObjectScreen\n\t\t\turiImageToShow: (this.props.data.uriImageToShow == null) ? null : this.props.data.uriImageToShow,\n\n\t\t\t// Lista de imágenes que han sido salvadas\n\t\t\tlistOfImages: (this.props.data.listOfImages == null) ? [] : this.props.data.listOfImages,\n\n\t\t\t// Matriz que guarda las mismas imágenes que \"listOfImages\", pero las separa en filas de 2 imágenes.\n\t\t\tmatrixOfImages: null,\n\n\t\t\t// Igual que \"matrixOfImages\", pero incluyendo la interfaz gráfica que muestra las imágenes\n\t\t\trenderMatrix: null, \n\n\t\t\t// ------- Variables que determinan si se muestran los modales\n\t\t\tmodal_1_visible: false, // Menú en donde se puede capturar una nueva imagen, o ir a la vista de las ya tomadas.\n\t\t\tmodal_2_visible: false, // Aquí se visualizan todas las imágenes tomadas\n\t\t\tmodal_3_visible: false, // Aquí se visualiza una imagen específica completa, con sus dimensiones originales \n\t\t\tmodal_4_visible: false, // Aquí se modifica la descripción de una imagen, y además se puede eliminar dicha imagen\n\n\t\t\t// Llamamos current Image que un usuario seleccionó para visualizarla, cambiarle su descripción, establecerla como portada, o eliminarla\n\t\t\tcurrentImageToEdit:         null, // Objeto con las características de la imagen\n\t\t\tcurrentImageToEdit_width:   null, // Anchura original de la imagen\n\t\t\tcurrentImageToEdit_height:  null, // Altura original de la imagen\n\n\t\t\timageDimensions_OuterScreen: 0.42 * D.GLOBAL_SCREEN_WIDTH, // Dimensiones con las que se mostrarán las imágenes en la ventana externa (ObjectScreen)\n\t\t\tcomponentKey: this.props.stratum_key + '_image', // Para que se sepa qué parte del estrato se va a salvar\n\t\t}\n\t}\n\n\tasync componentDidMount(){\n\t\t/* Si no colocáramos esto, si el programador refresca esta página estando dentro de ella en la aplicación, se regresará a la \n\t\t   ventana externa sin haber vuelto a habilitar el permiso de poder ingresar a los componentes. Antes lo habilitábamos una sola vez\n\t\t   en la ventana externa, pero ahora en todos los componentes */\n\t\tthis.props.dispatchEnteringPermission(true);\n\n\t\t/* Este procedimiento es necesario para crear la matriz de imágenes completa previamente antes\n\t\t   de que se monte el componente, no al momento de necesitar mostrarlas, porque de lo contrario da error */\n\t\tawait this.create_matrixOfImages();\n\t\tthis.create_RenderMatrix();\n\t}\n\n\t// Procedimiento para salvar los cambios realizados en la base de datos del usuario\n\tasync saveInDatabase(payload){\n\t\tawait Database.saveStratumModule(this.props.user_id, this.props.Object_id, this.props.index, this.state.componentKey, payload, this.props.isCore, this.props.localDB);\n\t}\n\n\t// Procedimiento para crear la matriz de dos columnas que contiene todas las imágenes añadidas\n\tcreate_matrixOfImages(){\n\t\tlet s = this.state;\n\t\tvar len   = s.listOfImages.length;\n\t\t\n\t\tif (len > 0){\n\t\t\tvar matrix = [];\n\t\t\tvar numberRows = Math.ceil(s.listOfImages.length/2);\n\n\t\t\tfor (i = 0; i < numberRows; i++){\n\t\t\t\tvar newRow = [];\n\t\t\t\tvar i1 = i << 1; // left shift 1 -> es lo mismo que multiplicar por 2\n\t\t\t\tvar i2 = i1 + 1;\n\t\t\t\tnewRow.push(s.listOfImages[i1]);\n\t\t\t\tif (i2 < len) {\n\t\t\t\t\tnewRow.push(s.listOfImages[i2]);\n\t\t\t\t}\n\t\t\t\tmatrix.push(newRow);\n\t\t\t}\n\t\t\tthis.setState({matrixOfImages: matrix});\n\t\t}\n\t\telse {\n\t\t\tthis.setState({matrixOfImages: [[]] });\n\t\t}\n\t}\n\n\t// Procedimiento para crear una matriz como la de la función de arriba, pero además las muestra como vistas que se pueden renderizar\n\tasync create_RenderMatrix(){\n\t\tlet s = this.state;\n\n\t\tawait this.setState({\n\t\t\trenderMatrix: s.matrixOfImages.map((rowOfImages, i) => (\n\t\t\t\t<View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center', paddingTop: 10, paddingBottom: 10}}  key={i} >\n\t\t\t\t\t{rowOfImages.map((item, k) => (\n\t\t\t\t\t\t<View style={{width: s.imageDimensions_OuterScreen, height: s.imageDimensions_OuterScreen, opacity: 1}}  key={k}>\n\t\t\t\t\t\t\t<TouchableHighlight  \n\t\t\t\t\t\t\t\tonPress = {() => {this.showModal_4(item)}}\n\t\t\t\t\t\t\t\tstyle   = {{flex: 1}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\tsource = {{uri: URI_PREFIX + item.uri}}\n\t\t\t\t\t\t\t\t\tstyle  = {{flex: 1}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t))}\n\t\t\t\t</View>\n\t\t\t))\n\t\t})\n\t} \n\n\t/// ---------------------- Los siguientes procedimientos muestran u ocultan los modales respectivos -------------------------\n\tshowModal_1 = () => {\n\t\tlet p = this.props;\n\t\tif (this.props.enteringEnabled){\n\t\t\tp.dispatchEnteringPermission(false);\n\t\t\tthis.setState({modal_1_visible: true});\n\n\t\t\tif (p.data.listOfImages != null) {\n\t\t\t\tLog.log_action(23, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n\t\t\t}\n\t\t\telse {\t\n\t\t\t\tLog.log_action(22, p.user_id, p.isCore, p.Object_id, p.stratum_key);\n\t\t\t}\n\t\t}\n\t}\n\n\thideModal_1 = () => {\n\t\tthis.props.dispatchEnteringPermission(true);\n\t\tthis.setState({modal_1_visible: false});\n\t}\n\n\tsetModal_2_Visible = (isVisible) => {\n\t\tthis.setState({modal_2_visible: isVisible});\n\t}\n\n\t/* Procedimiento para mostrar el tercer modal, que es en donde se visualiza una imagen específica con sus dimensiones originales */\n\tsetModal_3_Visible = (isVisible) => {\n\t\tthis.setState({modal_3_visible: isVisible});\n\t}\n\n\t/* Procedimiento para mostrar el tercer modal, que es en donde se cambia la descripción de la imagen.\n\t   Aquí la imagen se muestra con sus dimensiones originales */\n\tshowModal_4 = (item) => {\n\t\tImage.getSize(item.uri, (width, height) => {\n\t\t\tthis.setState({\n\t\t\t\tmodal_4_visible:            true,\n\t\t\t\tcurrentImageToEdit:         item,\n\t\t\t\tcurrentImageToEdit_width:   width, \n\t\t\t\tcurrentImageToEdit_height:  height,\t\n\t\t\t})\n\t\t});\n\t}\n\n\t// Procedimento para ocultar el tercer modal. Eso requiere reconstruir las matrices de imágenes\n\thideModal_4 = async() => {\n\t\tthis.setState({\n\t\t\tmodal_4_visible:          false,\n\t\t\tcurrentImageToEdit:        null, \n\t\t\tcurrentImageToEdit_width:  null,\n\t\t\tcurrentImageToEdit_height: null,\n\t\t});\n\t\tawait this.create_matrixOfImages();\n\t\tthis.create_RenderMatrix();\n\t}\n\n\t// Procedimiento para acceder a la galería de imágenes del teléfono (o desde cualquier otro directorio) y poder escoger de allí una imagen\n\tselectPictureFromGallery = async () => {\n\t\tconst {status} = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n\t\tif (status !== 'granted'){\n\t\t\t// Alerta: \"No tiene permiso para acceder a la galería\"\n\t\t\tAlert.alert(this.props.allMessages[13], this.props.allMessages[11]);\n\t\t}\n\t\telse {\n\t\t\tconst { cancelled, uri, base64} = await ExpoImagePicker.launchImageLibraryAsync({ allowsEditing: true, base64: true });\n\t\t\t// Borramos la imagen que se crea en la caché para sólo quedarnos con la \"base64\", que es la que podemos almacenar en la base de datos\n\t\t\tExpoFileSystem.deleteAsync(uri);\n\n\t\t\tif(!cancelled) { // Caso en que el usuario sí seleccionó una imagen\n\t\t\t\tthis.saveImage(base64);\n\t\t\t} \t\t\n\t\t}\n\t}\n\n\t// Procedimiento para poder tomar una nueva foto con la cámara del teléfono\n\ttakePicture = async () => {\n\t\tconst {status} = await Permissions.askAsync(Permissions.CAMERA);\n\n\t\tif (status !== 'granted'){\n\t\t\t// Alerta: \"No tiene permiso para acceder a la cámara\"\n\t\t\tAlert.alert(this.props.allMessages[13], this.props.allMessages[12]);\n\t\t}\n\t\telse {\n\t\t\tconst { cancelled, uri, base64 } = await ExpoImagePicker.launchCameraAsync({ allowsEditing: true, base64: true });\n\t\t\t// Borramos la imagen que se crea en la caché para sólo quedarnos con la \"base64\", que es la que podemos almacenar en la base de datos\n\t\t\tExpoFileSystem.deleteAsync(uri);\n\n\t\t\tif(!cancelled) { // Caso en que el usuario sí capturó una fotografía\n\t\t\t\tthis.saveImage(base64);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Esta función se llama cada vez que se crea una nueva imagen\n\tasync saveImage(uri){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\tvar isCover   = false;\n\t\tvar uriToShow = s.uriImageToShow;\n\n\t\t// Si no había elementos en la lista de imágenes, la imagen que se mostrará en la ventana externa será la que se acaba de crear\n\t\tif (s.listOfImages.length == 0){\n\t\t\tthis.setState({uriImageToShow: uri});\n\t\t\turiToShow = uri;\n\t\t\tisCover   = true;\n\t\t}\n\n\t\t// Creamos el objeto que tiene la dirección de la nueva imagen, además de su identificador y su descripción\n\t\tvar newImage = {key: auxiliarFunctions.generate_key(), uri, description: \"\", isCover}; \n\n\t\tawait s.listOfImages.push(newImage); // Insertamos dicho objeto en la lista de imágenes guardadas\n\t\tawait this.create_matrixOfImages();  // Creamos de nuevo la matriz de imágenes de dos columnas\n\t\tthis.create_RenderMatrix();          // También creamos de nuevo la matriz de imágenes que se renderizan en la vista de todas las imágenes\n\n\t\t// Almacenamos la información necesaria en la base de datos\n\t\tvar payload = {\n\t\t\tlistOfImages:   s.listOfImages, \n\t\t\turiImageToShow: uriToShow,\n\t\t};\n\t\tawait this.saveInDatabase(payload, newImage);\n\n\t\t// Alerta: \"La imagen fue agregada exitosamente\"\n\t\tAlert.alert(this.props.allMessages[13], this.props.allMessages[17]);\n\t}\n\n\t// Cambia la descripción de una imagen\n\tchangeDescriptionText(text){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\tlet elem = s.currentImageToEdit;\n\n\t\tconst updatedImage = {\n\t\t\turi:         elem.uri,\n\t\t\tkey:         elem.key,\n\t\t\tdescription: text,\n\t\t\tisCover:     elem.isCover,\n\t\t}\n\n\t\tthis.setState({currentImageToEdit: updatedImage});\n\n\t\t// Actualizamos la lista de imágenes del estado con la nueva descripción\n\t\tvar index = s.listOfImages.findIndex(image => image.key === elem.key);\n\t\ts.listOfImages[index] = updatedImage;\n\n\t\t// Almacenamos la información necesaria en la base de datos\n\t\tvar payload = {\n\t\t\tlistOfImages:   s.listOfImages, \n\t\t\turiImageToShow: s.uriImageToShow,\n\t\t};\n\t\tthis.saveInDatabase(payload);\n\t}\n\n\t// Cambia si la imagen actual es portada del estrato o no\n\tasync changeIsCover(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\tvar cImage = s.currentImageToEdit;\n\t\tvar originalBoolean = cImage.isCover;\n\n\t\tconst updatedCurrentImage = {\n\t\t\turi:         cImage.uri,\n\t\t\tkey:         cImage.key,\n\t\t\tdescription: cImage.description,\n\t\t\tisCover:     ! originalBoolean,\n\t\t}\n\n\t\t// Encontramos el índice de la imagen que estamos editando\n\t\tvar currentIndex = s.listOfImages.findIndex(image => image.key === cImage.key);\n\n\t\t// Caso en que estamos desmarcando el cuadro\n\t\tif (originalBoolean){\n\t\t\t/* La imagen que ahora será portada debe ser la primera de la lista, pero si la que estamos desmarcando es la primera\n\t\t\t   de la lista, entonces la portada debe ser la segunda */\n\t\t\t(currentIndex == 0) ? (indexNewCover = 1) : (indexNewCover = 0);\n\t\t\tvar newCover = s.listOfImages[indexNewCover];\n\t\t\tvar updatedNewCover = {\n\t\t\t\turi:         newCover.uri,\n\t\t\t\tkey:         newCover.key,\n\t\t\t\tdescription: newCover.description,\n\t\t\t\tisCover:     true,\n\t\t\t}\n\t\t\ts.listOfImages[indexNewCover] = updatedNewCover;\n\t\t\ts.listOfImages[currentIndex]  = updatedCurrentImage;\n\t\t\tthis.setState({uriImageToShow: newCover.uri, currentImageToEdit: updatedCurrentImage});\n\t\t}\n\t\telse // Caso en que estamos marcando el cuadro\n\t\t{ \n\t\t\t// Tenemos que hacer que el campo \"isCover\" de la imagen que antes era portada ahora sea falso\n\t\t\tvar indexPreviousCover = s.listOfImages.findIndex(element => element.isCover === true);\n\t\t\tvar previousCover = s.listOfImages[indexPreviousCover];\n\t\t\tvar updatedPreviousCover = {\n\t\t\t\turi:         previousCover.uri,\n\t\t\t\tkey:         previousCover.key,\n\t\t\t\tdescription: previousCover.description,\n\t\t\t\tisCover:     false,\n\t\t\t}\n\t\t\ts.listOfImages[indexPreviousCover] = updatedPreviousCover;\n\t\t\ts.listOfImages[currentIndex]       = updatedCurrentImage;\n\t\t\tthis.setState({uriImageToShow: cImage.uri, currentImageToEdit: updatedCurrentImage});\n\t\t}\n\n\t\t// Almacenamos la información necesaria en la base de datos\n\t\tvar payload = {\n\t\t\tlistOfImages:   s.listOfImages, \n\t\t\turiImageToShow: cImage.uri,\n\t\t};\n\t\tawait this.saveInDatabase(payload);\n\t}\n\n\t// Procedimiento para borrar una imagen\n\tdeleteImage(){\n\t\tlet p = this.props;\t\n\n\t\t// Procedimiento auxiliar que se invoca cuando se confirma que se desea eliminar la imagen\n\t\tlet deleteImageAux = async(p) => {\n\t\t\tlet s = this.state;\n\n\t\t\tvar cImage   = s.currentImageToEdit; // ElementoActual\n\t\t\tvar wasCover = cImage.isCover; \n\t\t\tvar currentCoverUri = s.uriImageToShow;\n\t\t\tvar saveChanges = false;\n\n\t\t\tconst list = s.listOfImages.filter(function(item){\n\t\t\t\treturn item.key.toString() !== cImage.key.toString();\n\t\t\t})\n\t\t\t// Caso en que la imagen eliminada era la portada\n\t\t\tif (wasCover){\n\t\t\t\t// Caso en que no quedan otros elementos en la lista\n\t\t\t\tif (list.length == 0){\n\t\t\t\t\tvar currentCoverUri = null;\n\t\t\t\t\tvar saveChanges     = true;\n\t\t\t\t}\n\t\t\t\telse // Caso en que sí quedan otros elementos. La portada será el primero de dicha lista.\n\t\t\t\t{\n\t\t\t\t\tvar elem = list[0];\n\t\t\t\t\tvar updatedImage = {\n\t\t\t\t\t\turi:         elem.uri,\n\t\t\t\t\t\tkey:         elem.key,\n\t\t\t\t\t\tdescription: elem.description,\n\t\t\t\t\t\tisCover:     true,\n\t\t\t\t\t}\n\t\t\t\t\tcurrentCoverUri = elem.uri;\n\t\t\t\t\tlist[0]         = await updatedImage;\n\t\t\t\t\tsaveChanges     = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsaveChanges = true;\n\t\t\t}\n\n\t\t\tif (saveChanges){\n\t\t\t\tawait this.setState({listOfImages: list, uriImageToShow: currentCoverUri});\n\n\t\t\t\t// Almacenamos la información necesaria en la base de datos\n\t\t\t\tconst payload = {\n\t\t\t\t\tlistOfImages:   list, \n\t\t\t\t\turiImageToShow: currentCoverUri,\n\t\t\t\t};\n\t\t\t\tawait this.saveInDatabase(payload);\n\t\t\t\tthis.hideModal_4();\n\t\t\t}\n\t\t}\n\n\t\t// Alerta: \"¿Seguro de que desea eliminar la imagen?\"\n\t\tAlert.alert(p.allMessages[13], p.allMessages[14],\n\t\t\t[\n\t\t\t\t// Mensaje: \"Sí\"\n\t\t\t\t{text: p.allMessages[15], onPress: () => deleteImageAux(p)},\n\t\t\t\t// Mensaje: \"No\"\n\t\t\t\t{text: p.allMessages[16]},\n\t\t\t] \n\t\t)\n\t}\n\n\t// Lo que se muestra cuando el usuario ingresa en el menú de selección de fotografía\n\tmodal_1_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_1_visible}\n\t\t\t\t\tonRequestClose = {() => this.hideModal_1()}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Cabecera de la pantalla que dice el nombre del estrato que se está modificando*/}\n\t\t\t\t\t\t<View style = {genericStyles.modalHeader}>\n\t\t\t\t\t\t\t{/* Mensaje: \"Imágenes del estrato\"*/}\n\t\t\t\t\t\t\t<Text style = {{justifyContent: 'center', alignItems: 'center', fontSize: 17, fontWeight: 'bold'}}>\n\t\t\t\t\t\t\t\t{p.allMessages[0]}: {p.stratumName}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/*Botones para ir a las otras vistas*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\n\t\t\t\t\t\t\t<ScrollView>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}> \n\t\t\t\t\t\t\t\t\t<ButtonWithIcon  // Botón para añadir una imagen desde archivo\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[1]} // Mensaje: \"Agregar desde galería\"\n\t\t\t\t\t\t\t\t\t\tonPress = {this.selectPictureFromGallery}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'add-to-photos'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}> \n\t\t\t\t\t\t\t\t\t<ButtonWithIcon  ///Botón para capturar una fotografía\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[2]} // Mensaje: \"Tomar nueva foto\"\n\t\t\t\t\t\t\t\t\t\tonPress = {this.takePicture}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'add-a-photo'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}>\n\t\t\t\t\t\t\t\t\t<ButtonWithIcon  /// Botón para ir a la galería de todas las imágenes añadidas a este estrato\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[3]} // Mensaje: \"Ver imágenes añadidas\"\n\t\t\t\t\t\t\t\t\t\tonPress = {()=>{this.setModal_2_Visible(true)}}\n\t\t\t\t\t\t\t\t\t\ticon    = {{name: 'collections'}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t\t<View style = {localStyles.buttonView}>\n\t\t\t\t\t\t\t\t\t<ButtonNoIcon    /// Botón para volver al ObjectScreen\n\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[4]}// Mesnaje: \"Volver\"\n\t\t\t\t\t\t\t\t\t\tcolor   = \"#4f4f4f\" \n\t\t\t\t\t\t\t\t\t\tonPress = {()=>{this.hideModal_1()}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Aquí se muestran todas las imágenes añadidas\n\tmodal_2_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_2_visible}\n\t\t\t\t\tonRequestClose = {() => this.setModal_2_Visible(false)}\n\t\t\t\t>\n\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{/*Aquí se despliegan todas las fotografías*/}\n\t\t\t\t\t\t<View style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t{(s.listOfImages.length == 0) &&\n\t\t\t\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'column', justifyContent: 'space-around', alignItems: 'center'}}>\n\t\t\t\t\t\t\t\t\t{/*Mensaje: \"No se han añadido imágenes\"*/}\n\t\t\t\t\t\t\t\t\t<Text style = {{textAlign: 'center'}}>{p.allMessages[5]}</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{(s.listOfImages.length != 0) &&\n\t\t\t\t\t\t\t\t<ScrollView>\n\t\t\t\t\t\t\t\t\t{s.renderMatrix}\n\t\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</View>\n\n\t\t\t\t\t\t{/* Botón para regresar a la vista anterior */}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[4]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\tonPress = {() => this.setModal_2_Visible(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Ventana para visualizar una imagen específica con sus dimensiones originales, y además se le puede hacer zoom\n\tmodal_3_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_3_visible}\n\t\t\t\t\tonRequestClose = {() => this.setModal_3_Visible(false)}\n\t\t\t\t>\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{(s.currentImageToEdit != null) && \n\n\t\t\t\t\t\t\t< // Aquí están todos los elementos de la vista menos el botón para volver\n\t\t\t\t\t\t\tView style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t\t{/*Imagen mostrada*/}\n\t\t\t\t\t\t\t\t<View style = {localStyles.imageView}>\n\t\t\t\t\t\t\t\t\t<ImageZoom \n\t\t\t\t\t\t\t\t\t\tcropWidth   = {0.9 * D.GLOBAL_SCREEN_WIDTH}  // Ancho del área operativa\n\t\t\t\t\t\t\t\t\t\tcropHeight  = {0.8 * D.GLOBAL_SCREEN_HEIGHT} // Alto del área operativa\n\t\t\t\t\t\t\t\t\t\timageWidth  = {s.currentImageToEdit_width} // Ancho de la imagen a mostrar\n\t\t\t\t\t\t\t\t\t\timageHeight = {s.currentImageToEdit_height} // Alto de la imagen a mostrar\n\t\t\t\t\t\t\t\t\t\tenableCenterFocus = {false} // Si se deja esto en \"true\", siempre se enfoca el centro de la imagen\n\t\t\t\t\t\t\t\t\t\tminScale    = {1/100}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\t\tsource = {{uri: URI_PREFIX + s.currentImageToEdit.uri}}\n\t\t\t\t\t\t\t\t\t\t\tstyle  = {{width: s.currentImageToEdit_width, height: s.currentImageToEdit_height}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ImageZoom> \n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/*// Botón para regresar a la vista anterior */}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[4]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\tonPress = {() => this.setModal_3_Visible(false)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t// Ventana para visualizar editar la descripción de una imagen específica, el cuadro de confirmación para posiblemente establecerla como\n    // portada, y el botón para eliminarla \n\tmodal_4_View(){\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\t\treturn(\n\t\t\t<View>\n\t\t\t\t<Modal\n\t\t\t\t\tanimationType  = \"fade\"\n\t\t\t\t\ttransparent    = {false}\n\t\t\t\t\tvisible        = {s.modal_4_visible}\n\t\t\t\t\tonRequestClose = {() => this.hideModal_4()}\n\t\t\t\t>\n\n\t\t\t\t\t<View style = {genericStyles.lightGray_background}>\n\n\t\t\t\t\t\t{(s.currentImageToEdit != null) && \n\n\t\t\t\t\t\t\t< // Aquí están todos los elementos de la vista menos el botón para volver\n\t\t\t\t\t\t\tView style = {genericStyles.white_background_with_ScrollView}>\n\t\t\t\t\t\t\t\t<ScrollView>\t\n\n\t\t\t\t\t\t\t\t\t<View style = {{justifyContent: 'center', alignItems: 'center', paddingTop: 20}}>\n\t\t\t\t\t\t\t\t\t\t<TouchableHighlight \n\t\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.setModal_3_Visible(true)}} \n\t\t\t\t\t\t\t\t\t\t\tstyle   = {localStyles.touchableHighlight_NoBorder}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\t\t\t\tresizeMethod = \"auto\"\n\t\t\t\t\t\t\t\t\t\t\t\tsource       = {{ uri: URI_PREFIX + s.currentImageToEdit.uri }}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle        = {localStyles.touchableHighlight_WithBorder}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t\t\t\t</View>\t\n\n\t\t\t\t\t\t\t\t\t{/*//Mensaje: \"Descripción de imagen*/}\n\t\t\t\t\t\t\t\t\t<Text style = {{...genericStyles.subtitle, paddingTop: 20}}>{p.allMessages[6]}</Text>\n\n\t\t\t\t\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}> \n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t{/*//Aquí se rellena la descripción de la imagen*/}\n\t\t\t\t\t\t\t\t\t\t<TextInput  \n\t\t\t\t\t\t\t\t\t\t\tstyle = {{ \n\t\t\t\t\t\t\t\t\t\t\t\theight:         0.13 * D.GLOBAL_SCREEN_HEIGHT, \n\t\t\t\t\t\t\t\t\t\t\t\twidth:          0.8 * D.GLOBAL_SCREEN_WIDTH, \n\t\t\t\t\t\t\t\t\t\t\t\tborderColor:    'black', \n\t\t\t\t\t\t\t\t\t\t\t\tborderWidth:    1, \n\t\t\t\t\t\t\t\t\t\t\t\tpadding:        5,\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlign:      'center'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonChangeText      = {text => this.changeDescriptionText(text)}\n\t\t\t\t\t\t\t\t\t\t\tmultiline         = {true}\n\t\t\t\t\t\t\t\t\t\t\tselectTextOnFocus = {true}\n\t\t\t\t\t\t\t\t\t\t\tdefaultValue      = {s.currentImageToEdit.description}\n\t\t\t\t\t\t\t\t\t\t/>\t\n\n\t\t\t\t\t\t\t\t\t</View>\t\n\n\t\t\t\t\t\t\t\t\t{(s.listOfImages.length > 1) &&\n\t\t\t\t\t\t\t\t\t\t<View>\n\t\t\t\t\t\t\t\t\t\t\t{/*//Mensaje: \"Establecer como imagen predeterminada del estrato\"*/}\n\t\t\t\t\t\t\t\t\t\t\t<Text style = {{...genericStyles.subtitle, paddingTop: 20}}>{p.allMessages[7]}</Text>\n\n\t\t\t\t\t\t\t\t\t\t\t<CheckBox /// Cuadro para seleccionar si ésta será la imagen predeterminada del estrato\n\t\t\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[8]} // Mensaje: \"Es imagen predeterminada\"\n\t\t\t\t\t\t\t\t\t\t\t\tchecked = {s.currentImageToEdit.isCover}\n\t\t\t\t\t\t\t\t\t\t\t\tonPress = {() => {this.changeIsCover()}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t<View style = {{flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'center', paddingTop: 40, paddingBottom: 30}}> \t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\t\t\t\tcolor   = 'red'\n\t\t\t\t\t\t\t\t\t\t\ttitle   = {p.allMessages[9]} /// Mensaje: \"Eliminar imagen\"\n\t\t\t\t\t\t\t\t\t\t\tonPress = {() => this.deleteImage()}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</View>\t\n\n\t\t\t\t\t\t\t\t</ScrollView>\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{/*Botón para regresar a la vista anterior */}\n\t\t\t\t\t\t<View style = {genericStyles.down_buttons}>\n\t\t\t\t\t\t\t<ButtonNoIcon\n\t\t\t\t\t\t\t\traised\n\t\t\t\t\t\t\t\tcolor   = {DARK_GRAY_COLOR}\n\t\t\t\t\t\t\t\ttitle   = {p.allMessages[4]} // Mensaje: \"Volver\"\n\t\t\t\t\t\t\t\tonPress = {() => this.hideModal_4()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</Modal>\n\t\t\t</View>\n\t\t)\n\t}\n\n\t/// Todo lo que se le mostrará al usuario\n\trender() {\n\t\tlet s = this.state;\n\t\tlet p = this.props;\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t{/*Modales*/}\n\t\t\t\t{this.modal_1_View()}\n\t\t\t\t{this.modal_2_View()}\n\t\t\t\t{this.modal_3_View()}\n\t\t\t\t{this.modal_4_View()}\n\n\t\t\t\t{/*Ésta es la parte que ve el usuario cuando está en la ventana ObjectScreen*/}\n\n\t\t\t\t{ // Caso en que no se ha agregado ninguna imagen y se está haciendo una captura del afloramiento\n\t\t\t\t(s.listOfImages.length == 0) && p.takingShot &&\n\t\t\t\t\t<View style = {{width: D.IMAGE_PICKER_WIDTH, height: p.height, borderWidth: 1, borderColor: 'black'}}/>\n\t\t\t\t}\n\n\t\t\t\t{ // Caso en que ya se agregó una imagen o no se está haciendo una captura del afloramiento\n\t\t\t\t( (s.listOfImages.length != 0) || (!p.takingShot) ) &&\n\t\t\t\t\t<TouchableHighlight onPress = {()=>{this.showModal_1()}} style = {{width: D.IMAGE_PICKER_WIDTH, height: p.height}}>\n\t\t\t\t\t\t<View style = {localStyles.showInstructionsObjectScreen}>\n\t\t\t\t\t\t\t{(s.listOfImages.length == 0) && (p.height >= 18) && <Text>{p.allMessages[10]}</Text>}\n\t\t\t\t\t\t\t{(s.listOfImages.length != 0) && \n\t\t\t\t\t\t\t\t<Image \n\t\t\t\t\t\t\t\t\tresizeMethod = \"auto\"\n\t\t\t\t\t\t\t\t\tsource       = {{ uri: URI_PREFIX + s.uriImageToShow }}\n\t\t\t\t\t\t\t\t\tstyle        = {{\n\t\t\t\t\t\t\t\t\t\twidth:       D.IMAGE_PICKER_WIDTH, \n\t\t\t\t\t\t\t\t\t\theight:      p.height, \n\t\t\t\t\t\t\t\t\t\tborderColor: 'black', \n\t\t\t\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\n/// Constante para darle formato a los diversos componentes de esta pantalla\nconst localStyles = StyleSheet.create({\n\n\t// Empleado para mostrar en la ventana \"ObjectScreen\" el texto que indica que se debe tocar allí para cambiar la fotografía\n\tshowInstructionsObjectScreen: {\n\t\tflex:           1,\n\t\tflexDirection:  'column',\n\t\tjustifyContent: 'center',\n\t\talignItems:     'center',\n\t\tborderColor:    'black',\n\t\tborderWidth:    1,\n\t},\n\n\t// Formato de la vista en la que se muestra una imagen con sus dimensiones originales\n\timageView: {\n\t\tflex:           1,\n\t\tflexDirection:  'column',\n\t\tpaddingTop:     20, \n\t\tpaddingBottom:  15, \n\t\tpaddingRight:   15, \n\t\tpaddingLeft:    15,\n\t\talignItems:     'center',\n\t\tjustifyContent: 'center',\n\t},\n\n\t// Formato de cada una de las vistas en donde están los botones del modal más externo: 1) Añadir desde galería, 2) Tomar con la cámara, etc.\n\tbuttonView: {\n\t\tflex:           1, \n\t\talignItems:     'center', \n\t\tjustifyContent: 'center', \n\t\tpadding:         23,\n\t},\n\n\t// Para la cabecera de la pantalla en la que se le da instrucciones al usuario de que pulsación corta es para ver imagen, y pulsación larga es para editar información\n\tinstructionsModuleHeader: {\n\t\tflex:            0.07,\n\t\tflexDirection:   'row',\n\t\tjustifyContent:  'center',\n\t\talignItems:      'center',\n\t\tpaddingTop:      15,\n\t\tpaddingBottom:   15,\n\t\twidth:           D.GLOBAL_SCREEN_WIDTH,\n\t},\n\n\t/* Formato de la imagen que se visualiza encima de su descripción*/\n\ttouchableHighlight_WithBorder: {\n\t\theight:         0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t\twidth:          0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t\tborderColor:    'black', \n\t\tborderWidth:    1,\n\t},\n\n\t// Formato del TouchableHighlight en donde está la imagen\n\ttouchableHighlight_NoBorder: {\n\t\theight:         0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t\twidth:          0.7 * D.GLOBAL_SCREEN_WIDTH, \n\t},\n});\n\n// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tallMessages:     ImagePicker_Texts[state.appPreferencesReducer.language], \n\t\tuser_id:         state.userReducer.user_id,\n\t\tlocalDB:         state.userReducer.localDB,\n\t\tenteringEnabled: state.popUpReducer.stratumComponentEnabled,\n\t}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tdispatchEnteringPermission: (bool) => dispatch(changeStratumComponentPermission(bool)),\n\t}\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePicker);"]},"metadata":{},"sourceType":"module"}