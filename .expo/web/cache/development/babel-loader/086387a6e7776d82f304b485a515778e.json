{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\modifiedLibraries\\\\react-native-chart-kit\\\\src\\\\abstract-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { LinearGradient, Line, Text, Defs, Stop } from \"react-native-svg\";\n\nvar AbstractChart = function (_Component) {\n  _inherits(AbstractChart, _Component);\n\n  function AbstractChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AbstractChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AbstractChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.calcScaler = function (data) {\n      var minYValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var maxYValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.props.fromZero) {\n        var min = minYValue != null ? Math.min(minYValue, 0) : Math.min.apply(Math, _toConsumableArray(data).concat([0]));\n        var max = maxYValue != null ? Math.max(maxYValue, 0) : Math.max.apply(Math, _toConsumableArray(data).concat([0]));\n        return max - min || 1;\n      } else {\n        var _min = minYValue != null ? minYValue : Math.min.apply(Math, _toConsumableArray(data));\n\n        var _max = maxYValue != null ? maxYValue : Math.max.apply(Math, _toConsumableArray(data));\n\n        return _max - _min || 1;\n      }\n    };\n\n    _this.calcBaseHeight = function (data, height) {\n      var minYValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var maxYValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var scaler = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var min = minYValue != null ? minYValue : Math.min.apply(Math, _toConsumableArray(data));\n      var max = maxYValue != null ? maxYValue : Math.max.apply(Math, _toConsumableArray(data));\n      scaler = scaler != null ? scaler : _this.calcScaler(data, min, max);\n\n      if (min >= 0 && max >= 0) {\n        return height;\n      } else if (min < 0 && max <= 0) {\n        return 0;\n      } else if (min < 0 && max > 0) {\n        return height * max / scaler;\n      }\n    };\n\n    _this.calcHeight = function (val, data, height) {\n      var minYValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var maxYValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var scaler = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n      var min = minYValue != null ? minYValue : Math.min.apply(Math, _toConsumableArray(data));\n      var max = maxYValue != null ? maxYValue : Math.max.apply(Math, _toConsumableArray(data));\n      scaler = scaler != null ? scaler : _this.calcScaler(data, min, max);\n\n      if (min < 0 && max > 0) {\n        return height * (val / scaler);\n      } else if (min >= 0 && max >= 0) {\n        return _this.props.fromZero ? height * (val / scaler) : height * ((val - min) / scaler);\n      } else if (min < 0 && max <= 0) {\n        return _this.props.fromZero ? height * (val / scaler) : height * ((val - max) / scaler);\n      }\n    };\n\n    _this.renderHorizontalLines = function (config) {\n      var count = config.count,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          data = config.data;\n      var basePosition = height - height / 4;\n      var div = basePosition / count;\n      var widthForLines = width - (width - paddingRight) / data.datasets[0].data.length;\n      return _toConsumableArray(new Array(count + 1)).map(function (_, i) {\n        var y = div * i + paddingTop;\n        return React.createElement(Line, _extends({\n          key: Math.random(),\n          x1: paddingRight,\n          y1: y,\n          x2: widthForLines,\n          y2: y\n        }, _this.getPropsForBackgroundLines(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          }\n        }));\n      });\n    };\n\n    _this.renderHorizontalLine = function (config) {\n      var width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n      return React.createElement(Line, _extends({\n        key: Math.random(),\n        x1: paddingRight,\n        y1: height - height / 4 + paddingTop,\n        x2: width,\n        y2: height - height / 4 + paddingTop\n      }, _this.getPropsForBackgroundLines(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        }\n      }));\n    };\n\n    _this.renderHorizontalLabels = function (config) {\n      var count = config.count,\n          data = config.data,\n          scaler = config.scaler,\n          minYValue = config.minYValue,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          _config$horizontalLab = config.horizontalLabelRotation,\n          horizontalLabelRotation = _config$horizontalLab === void 0 ? 0 : _config$horizontalLab,\n          _config$decimalPlaces = config.decimalPlaces,\n          decimalPlaces = _config$decimalPlaces === void 0 ? 2 : _config$decimalPlaces,\n          _config$formatYLabel = config.formatYLabel,\n          formatYLabel = _config$formatYLabel === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _config$formatYLabel;\n      var _this$props = _this.props,\n          _this$props$yAxisLabe = _this$props.yAxisLabel,\n          yAxisLabel = _this$props$yAxisLabe === void 0 ? \"\" : _this$props$yAxisLabe,\n          _this$props$yAxisSuff = _this$props.yAxisSuffix,\n          yAxisSuffix = _this$props$yAxisSuff === void 0 ? \"\" : _this$props$yAxisSuff,\n          _this$props$yLabelsOf = _this$props.yLabelsOffset,\n          yLabelsOffset = _this$props$yLabelsOf === void 0 ? 12 : _this$props$yLabelsOf;\n      var basePosition = height - height / 4;\n      var x = paddingRight - yLabelsOffset;\n      return _toConsumableArray(Array(count === 1 ? 1 : count + 1).keys()).map(function (i, _) {\n        var yLabel = i * count;\n\n        if (count === 1) {\n          yLabel = \"\" + yAxisLabel + formatYLabel(data[0].toFixed(decimalPlaces)) + yAxisSuffix;\n        } else {\n          var label = _this.props.fromZero ? scaler / count * i + Math.min(minYValue, 0) : scaler / count * i + minYValue;\n          yLabel = \"\" + yAxisLabel + formatYLabel(label.toFixed(decimalPlaces)) + yAxisSuffix;\n        }\n\n        var y = count === 1 && _this.props.fromZero ? paddingTop + 4 : height * 3 / 4 - basePosition / count * i + paddingTop;\n        return React.createElement(Text, _extends({\n          rotation: horizontalLabelRotation,\n          origin: x + \", \" + y,\n          key: Math.random(),\n          x: x,\n          textAnchor: \"end\",\n          y: y\n        }, _this.getPropsForLabels(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          }\n        }), yLabel);\n      });\n    };\n\n    _this.renderVerticalLabels = function (config) {\n      var _config$labels = config.labels,\n          labels = _config$labels === void 0 ? [] : _config$labels,\n          scale = config.scale,\n          sizeOfUnit = config.sizeOfUnit,\n          width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          _config$horizontalOff = config.horizontalOffset,\n          horizontalOffset = _config$horizontalOff === void 0 ? 0 : _config$horizontalOff,\n          _config$stackedBar = config.stackedBar,\n          stackedBar = _config$stackedBar === void 0 ? false : _config$stackedBar,\n          _config$verticalLabel = config.verticalLabelRotation,\n          verticalLabelRotation = _config$verticalLabel === void 0 ? 0 : _config$verticalLabel,\n          _config$formatXLabel = config.formatXLabel,\n          formatXLabel = _config$formatXLabel === void 0 ? function (xLabel) {\n        return xLabel;\n      } : _config$formatXLabel;\n      var _this$props2 = _this.props,\n          _this$props2$xAxisLab = _this$props2.xAxisLabel,\n          xAxisLabel = _this$props2$xAxisLab === void 0 ? \"\" : _this$props2$xAxisLab,\n          _this$props2$xLabelsO = _this$props2.xLabelsOffset,\n          xLabelsOffset = _this$props2$xLabelsO === void 0 ? 0 : _this$props2$xLabelsO,\n          _this$props2$hidePoin = _this$props2.hidePointsAtIndex,\n          hidePointsAtIndex = _this$props2$hidePoin === void 0 ? [] : _this$props2$hidePoin;\n      var fontSize = 12;\n      var fac = 1;\n\n      if (stackedBar) {\n        fac = 0.71;\n      }\n\n      var minX = labels[0];\n      var lenMinusOne = labels.length - 1;\n      return labels.map(function (label, i) {\n        if (hidePointsAtIndex.includes(i)) {\n          return null;\n        }\n\n        var x = 10 + Math.floor(paddingRight + Math.abs(labels[i] - minX) * sizeOfUnit / scale) * fac;\n        var y = height * 3 / 4 + paddingTop + fontSize * 2 + xLabelsOffset;\n        return React.createElement(Text, _extends({\n          origin: x + \", \" + y,\n          rotation: verticalLabelRotation,\n          key: Math.random(),\n          x: x,\n          y: y,\n          textAnchor: verticalLabelRotation === 0 ? \"middle\" : \"start\"\n        }, _this.getPropsForLabels(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          }\n        }), \"\" + formatXLabel(label) + xAxisLabel);\n      });\n    };\n\n    _this.renderVerticalLines = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          scale = config.scale,\n          labels = config.labels,\n          sizeOfUnit = config.sizeOfUnit;\n      var minX = labels[0];\n      return _toConsumableArray(new Array(data.length)).map(function (_, i) {\n        var x = Math.floor(paddingRight + Math.abs(labels[i] - minX) * sizeOfUnit / scale);\n        return React.createElement(Line, _extends({\n          key: Math.random(),\n          x1: x,\n          y1: paddingTop,\n          x2: x,\n          y2: height - height / 4 + paddingTop\n        }, _this.getPropsForBackgroundLines(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          }\n        }));\n      });\n    };\n\n    _this.renderVerticalLine = function (config) {\n      var height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight;\n      return React.createElement(Line, _extends({\n        key: Math.random(),\n        x1: Math.floor(paddingRight),\n        y1: 0,\n        x2: Math.floor(paddingRight),\n        y2: height - height / 4 + paddingTop\n      }, _this.getPropsForBackgroundLines(), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        }\n      }));\n    };\n\n    _this.renderDefs = function (config) {\n      var width = config.width,\n          height = config.height,\n          backgroundGradientFrom = config.backgroundGradientFrom,\n          backgroundGradientTo = config.backgroundGradientTo;\n      var fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\") ? config.backgroundGradientFromOpacity : 1.0;\n      var toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\") ? config.backgroundGradientToOpacity : 1.0;\n      var fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\") ? config.fillShadowGradient : _this.props.chartConfig.color();\n      var fillShadowGradientOpacity = config.hasOwnProperty(\"fillShadowGradientOpacity\") ? config.fillShadowGradientOpacity : 0.1;\n      return React.createElement(Defs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        }\n      }, React.createElement(LinearGradient, {\n        id: \"backgroundGradient\",\n        x1: \"0\",\n        y1: height,\n        x2: width,\n        y2: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        }\n      }, React.createElement(Stop, {\n        offset: \"0\",\n        stopColor: backgroundGradientFrom,\n        stopOpacity: fromOpacity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        }\n      }), React.createElement(Stop, {\n        offset: \"1\",\n        stopColor: backgroundGradientTo,\n        stopOpacity: toOpacity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        }\n      })), React.createElement(LinearGradient, {\n        id: \"fillShadowGradient\",\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        }\n      }, React.createElement(Stop, {\n        offset: \"0\",\n        stopColor: fillShadowGradient,\n        stopOpacity: fillShadowGradientOpacity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        }\n      }), React.createElement(Stop, {\n        offset: \"1\",\n        stopColor: fillShadowGradient,\n        stopOpacity: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        }\n      })));\n    };\n\n    return _this;\n  }\n\n  _createClass(AbstractChart, [{\n    key: \"getPropsForBackgroundLines\",\n    value: function getPropsForBackgroundLines() {\n      var _this$props$chartConf = this.props.chartConfig.propsForBackgroundLines,\n          propsForBackgroundLines = _this$props$chartConf === void 0 ? {} : _this$props$chartConf;\n      return _objectSpread({\n        stroke: this.props.chartConfig.labelColor(0.2),\n        strokeDasharray: \"5, 10\",\n        strokeWidth: 1\n      }, propsForBackgroundLines);\n    }\n  }, {\n    key: \"getPropsForLabels\",\n    value: function getPropsForLabels() {\n      var _this$props$chartConf2 = this.props.chartConfig,\n          _this$props$chartConf3 = _this$props$chartConf2.propsForLabels,\n          propsForLabels = _this$props$chartConf3 === void 0 ? {} : _this$props$chartConf3,\n          color = _this$props$chartConf2.color,\n          _this$props$chartConf4 = _this$props$chartConf2.labelColor,\n          labelColor = _this$props$chartConf4 === void 0 ? color : _this$props$chartConf4;\n      return _objectSpread({\n        fontSize: 12,\n        fill: labelColor(0.8)\n      }, propsForLabels);\n    }\n  }]);\n\n  return AbstractChart;\n}(Component);\n\nexport default AbstractChart;","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/modifiedLibraries/react-native-chart-kit/src/abstract-chart.js"],"names":["React","Component","LinearGradient","Line","Text","Defs","Stop","AbstractChart","calcScaler","data","minYValue","maxYValue","props","fromZero","min","Math","max","calcBaseHeight","height","scaler","calcHeight","val","renderHorizontalLines","config","count","width","paddingTop","paddingRight","basePosition","div","widthForLines","datasets","length","Array","map","_","i","y","random","getPropsForBackgroundLines","renderHorizontalLine","renderHorizontalLabels","horizontalLabelRotation","decimalPlaces","formatYLabel","yLabel","yAxisLabel","yAxisSuffix","yLabelsOffset","x","keys","toFixed","label","getPropsForLabels","renderVerticalLabels","labels","scale","sizeOfUnit","horizontalOffset","stackedBar","verticalLabelRotation","formatXLabel","xLabel","xAxisLabel","xLabelsOffset","hidePointsAtIndex","fontSize","fac","minX","lenMinusOne","includes","floor","abs","renderVerticalLines","renderVerticalLine","renderDefs","backgroundGradientFrom","backgroundGradientTo","fromOpacity","hasOwnProperty","backgroundGradientFromOpacity","toOpacity","backgroundGradientToOpacity","fillShadowGradient","chartConfig","color","fillShadowGradientOpacity","propsForBackgroundLines","stroke","labelColor","strokeDasharray","strokeWidth","propsForLabels","fill"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { LinearGradient, Line, Text, Defs, Stop } from \"react-native-svg\";\n\nclass AbstractChart extends Component {\n\n\t// Función que retorna la diferencia entre el mayor y el menor valor de los datasets leídos,\n\t// y con la modificación hecha, ahora puede calcular la diferencia entre un mayor y menor suministrados.\n\t// Siempre devuelve 1 si el resultado es 0\n\tcalcScaler = (data, minYValue=null, maxYValue=null) => {\n\t\tif (this.props.fromZero) {\n\t\t\tconst min = (minYValue != null) ? Math.min(minYValue,0) : Math.min(...data, 0);\n\t\t\tconst max = (maxYValue != null) ? Math.max(maxYValue,0) : Math.max(...data, 0);\n\n\t\t\treturn (max - min) || 1;\n\t\t} else {\n\t\t\tconst min = (minYValue != null) ? minYValue : Math.min(...data);\n\t\t\tconst max = (maxYValue != null) ? maxYValue : Math.max(...data);\n\n\t\t\treturn (max - min) || 1;\n\t\t}\n\t};\n\n\t// Él toma como altura base, es decir, desde la que empieza a contar, a la altura de más arriba de la gráfica, que llamaremos altura máxima\n\t// Luego los demás puntos de la gráfica inferiores estarán ubicados a esa altura máxima, menos cierta cantidad.\n\tcalcBaseHeight = (data, height, minYValue=null, maxYValue=null, scaler=null) => {\n\t\t// console.log(\"\\nEn calcBaseHeight:\");\n\t\t// console.log(\"minYValue = \", minYValue);\n\t\t// console.log(\"maxYValue = \", maxYValue);\n\t\t// console.log(\"scaler = \", scaler);\n\n\t\tconst min = (minYValue != null) ? minYValue : Math.min(...data);\n\t\tconst max = (maxYValue != null) ? maxYValue : Math.max(...data);\n\t\tscaler = (scaler!=null) ? scaler : this.calcScaler(data, min, max);\n\n\t\t// console.log(\"\\nEn calcBaseHeight:\");\n\t\t// console.log(\"min = \", min);\n\t\t// console.log(\"max = \", max);\n\t\t// console.log(\"scaler = \", scaler);\n\n\t\tif (min >= 0 && max >= 0) {\n\t\t\t// Si ambos valores son no negativos, la altura máxima es igual a la altura que fue suministrada\n\t\t\treturn height;\n\t\t} else if (min < 0 && max <= 0) {\n\t\t\t// Si ambos valores son negativos o cero, la altura máxima será cero\n\t\t\treturn 0;\n\t\t} else if (min < 0 && max > 0) {\n\t\t\t// Si el mínimo es negativo y el máximo es positivo, la fórmula que sigue es equivalente a como si empezaras teniendo la gráfica con el \n\t\t\t// mínimo en cero, y luego la bajaras hasta que el mínimo esté en su lugar correspondiente. Eso también hace que la altura máxima se baje,\n\t\t\t// es decir, ya no será igual a la altura suministrada.\n\t\t\treturn (height * max) / scaler;\n\t\t}\n\t};\n\n\t// Calcula la altura a la que debe aparecer el valor \"val\"\n\tcalcHeight = (val, data, height, minYValue=null, maxYValue=null, scaler=null) => {\n\t\t// console.log(\"\\nEn calcHeight:\");\n\t\t// console.log(\"minYValue = \", minYValue);\n\t\t// console.log(\"maxYValue = \", maxYValue);\n\t\t// console.log(\"scaler = \", scaler);\n\n\t\tconst min = (minYValue != null) ? minYValue : Math.min(...data);\n\t\tconst max = (maxYValue != null) ? maxYValue : Math.max(...data);\n\t\tscaler = (scaler!=null) ? scaler : this.calcScaler(data, min, max);\n\n\t\tif (min < 0 && max > 0) {\n\t\t\treturn height * (val / scaler);\n\t\t} else if (min >= 0 && max >= 0) {\n\t\t\treturn this.props.fromZero\n\t\t\t\t? height * (val / scaler)\n\t\t\t\t: height * ((val - min) / scaler);\n\t\t} else if (min < 0 && max <= 0) {\n\t\t\treturn this.props.fromZero\n\t\t\t\t? height * (val / scaler)\n\t\t\t\t: height * ((val - max) / scaler);\n\t\t}\n\t};\n\n\tgetPropsForBackgroundLines() {\n\t\tconst { propsForBackgroundLines = {} } = this.props.chartConfig;\n\t\treturn {\n\t\t\tstroke: this.props.chartConfig.labelColor(0.2),\n\t\t\tstrokeDasharray: \"5, 10\",\n\t\t\tstrokeWidth: 1,\n\t\t\t...propsForBackgroundLines\n\t\t};\n\t}\n\n\tgetPropsForLabels() {\n\t\tconst {\n\t\t\tpropsForLabels = {},\n\t\t\tcolor,\n\t\t\tlabelColor = color\n\t\t} = this.props.chartConfig;\n\n\t\treturn {\n\t\t\tfontSize: 12,\n\t\t\tfill: labelColor(0.8),\n\t\t\t...propsForLabels\n\t\t};\n\t}\n\n\t// Aquí se hizo una modificación\n\trenderHorizontalLines = config => {\n\t\tconst { count, width, height, paddingTop, paddingRight, data } = config;\n\t\tconst basePosition = height - height / 4; // No sé por qué considera así la posición base\n\t\tconst div = (basePosition / count);\n\n\t\t// Esto para que no quede un espacio sobrante en las líneas mostradas\n\t\tconst widthForLines = width - (width - paddingRight) / data.datasets[0].data.length;\n\n\t\treturn [...new Array(count+1)].map((_, i) => { // El +1 es para que también coloque la línea que corresponde al primer elemento\n\t\t\tconst y = div * i  + paddingTop;\n\t\t\treturn (\n\t\t\t\t<Line\n\t\t\t\t\tkey = {Math.random()}\n\t\t\t\t\tx1  = {paddingRight}\n\t\t\t\t\ty1  = {y}\n\t\t\t\t\tx2  = {widthForLines} // Originalmente esto era \"width\"\n\t\t\t\t\ty2  = {y}\n\t\t\t\t\t{...this.getPropsForBackgroundLines()}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\t// Esto no se ha modificado porque no se necesita. Se utiliza cuando la gráfica tiene una leyenda. Pero de todos modos habría que cambiarlo si se llegara a usar\n\trenderHorizontalLine = config => {\n\t\tconst { width, height, paddingTop, paddingRight } = config;\n\t\treturn (\n\t\t\t<Line\n\t\t\t\tkey = {Math.random()}\n\t\t\t\tx1  = {paddingRight}\n\t\t\t\ty1  = {height - height / 4 + paddingTop}\n\t\t\t\tx2  = {width}\n\t\t\t\ty2  = {height - height / 4 + paddingTop}\n\t\t\t\t{...this.getPropsForBackgroundLines()}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// Esto ya no se utiliza aquí, sino que copiamos su definición en el archivo que lo emplea, para que el ScrollView no mueva estas etiquetas también\n\trenderHorizontalLabels = config => {\n\t\tconst {\n\t\t\tcount,\n\t\t\tdata,\n\t\t\tscaler,\n\t\t\tminYValue,\n\t\t\theight,\n\t\t\tpaddingTop,\n\t\t\tpaddingRight,\n\t\t\thorizontalLabelRotation = 0,\n\t\t\tdecimalPlaces = 2,\n\t\t\tformatYLabel = yLabel => yLabel\n\t\t} = config;\n\n\t\tconst {\n\t\t\tyAxisLabel = \"\",\n\t\t\tyAxisSuffix = \"\",\n\t\t\tyLabelsOffset = 12\n\t\t} = this.props;\n\n\t\tconst basePosition = height - height / 4;\n\t\tconst x = paddingRight - yLabelsOffset;\n\t\treturn [...Array(count === 1 ? 1 : count + 1).keys()].map((i, _) => {\n\t\t\tlet yLabel = i * count;\n\n\t\t\tif (count === 1) {\n\t\t\t\tyLabel = `${yAxisLabel}${formatYLabel(\n\t\t\t\t\tdata[0].toFixed(decimalPlaces)\n\t\t\t\t)}${yAxisSuffix}`;\n\t\t\t} else {\n\t\t\t\tconst label = this.props.fromZero\n\t\t\t\t\t? (scaler / count) * i + Math.min(minYValue, 0)\n\t\t\t\t\t: (scaler / count) * i + minYValue;\n\t\t\t\tyLabel = `${yAxisLabel}${formatYLabel(\n\t\t\t\t\tlabel.toFixed(decimalPlaces)\n\t\t\t\t)}${yAxisSuffix}`;\n\t\t\t}\n\n\t\t\tconst y =\n\t\t\t\tcount === 1 && this.props.fromZero\n\t\t\t\t\t? paddingTop + 4\n\t\t\t\t\t: (height * 3) / 4 - (basePosition / count) * i + paddingTop;\n\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\trotation   = {horizontalLabelRotation}\n\t\t\t\t\torigin     = {`${x}, ${y}`}\n\t\t\t\t\tkey        = {Math.random()} \n\t\t\t\t\tx          = {x}\n\t\t\t\t\ttextAnchor = \"end\"\n\t\t\t\t\ty          = {y}\n\t\t\t\t\t{...this.getPropsForLabels()}\n\t\t\t\t>\n\t\t\t\t\t{yLabel}\n\t\t\t\t</Text>\n\t\t\t);\n\t\t});\n\t};\n\n\t//`///Holllo  ksksks\n\trenderVerticalLabels = config => {\n\t\tconst {\n\t\t\tlabels = [],\n\t\t\tscale,\n\t\t\tsizeOfUnit,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tpaddingRight,\n\t\t\tpaddingTop,\n\t\t\thorizontalOffset = 0,\n\t\t\tstackedBar = false,\n\t\t\tverticalLabelRotation = 0,\n\t\t\tformatXLabel = xLabel => xLabel\n\t\t} = config;\n\t\tconst {\n\t\t\txAxisLabel = \"\",\n\t\t\txLabelsOffset = 0,\n\t\t\thidePointsAtIndex = []\n\t\t} = this.props;\n\t\tconst fontSize = 12;\n\t\tlet fac = 1;\n\t\tif (stackedBar) {\n\t\t\tfac = 0.71;\n\t\t}\n\n\t\tconst minX        = labels[0];\n\t\tconst lenMinusOne = labels.length - 1;\n\n\t\treturn labels.map((label, i) => {\n\t\t\tif (hidePointsAtIndex.includes(i)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst x = 10 + Math.floor( paddingRight + Math.abs(labels[i] - minX) * sizeOfUnit / scale ) * fac;\n\n\t\t\tconst y = (height * 3) / 4 + paddingTop + fontSize * 2 + xLabelsOffset;\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\torigin   = {`${x}, ${y}`} \n\t\t\t\t\trotation = {verticalLabelRotation}\n\t\t\t\t\tkey      = {Math.random()}\n\t\t\t\t\tx        = {x}\n\t\t\t\t\ty        = {y}\n\t\t\t\t\ttextAnchor={verticalLabelRotation === 0 ? \"middle\" : \"start\"}\n\t\t\t\t\t{...this.getPropsForLabels()}\n\t\t\t\t>\n\t\t\t\t\t{`${formatXLabel(label)}${xAxisLabel}`} \n\t\t\t\t</Text>\n\t\t\t);\n\t\t});\n\t};\n\n\n\t// `//Esta función fue modificada\n\trenderVerticalLines = config => {\n\t\tconst { data, width, height, paddingTop, paddingRight, scale, labels, sizeOfUnit } = config;\n\n\t\tconst minX = labels[0];\n\n\t\treturn [...new Array(data.length)].map((_, i) => {\n\t\t\tconst x = Math.floor( paddingRight + Math.abs(labels[i] - minX) * sizeOfUnit / scale );\n\t\t\treturn (\n\t\t\t\t<Line\n\t\t\t\t\tkey = {Math.random()}\n\t\t\t\t\tx1  = {x}\n\t\t\t\t\ty1  = {paddingTop}\n\t\t\t\t\tx2  = {x}\n\t\t\t\t\ty2  = {height - height / 4 + paddingTop}\n\t\t\t\t\t{...this.getPropsForBackgroundLines()}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\t// Esto no se ha modificado porque no se necesita. Se utiliza cuando la gráfica tiene una leyenda. Pero de todos modos habría que cambiarlo si se llegara a usar\n\trenderVerticalLine = config => {\n\t\tconst { height, paddingTop, paddingRight } = config;\n\t\treturn (\n\t\t\t<Line\n\t\t\t\tkey = {Math.random()}\n\t\t\t\tx1  = {Math.floor(paddingRight)}\n\t\t\t\ty1  = {0}\n\t\t\t\tx2  = {Math.floor(paddingRight)}\n\t\t\t\ty2  = {height - height / 4 + paddingTop}\n\t\t\t\t{...this.getPropsForBackgroundLines()}\n\t\t\t/>\n\t\t);\n\t};\n\n\trenderDefs = config => {\n\t\tconst {\n\t\t\twidth,\n\t\t\theight,\n\t\t\tbackgroundGradientFrom,\n\t\t\tbackgroundGradientTo\n\t\t} = config;\n\t\tconst fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\")\n\t\t\t? config.backgroundGradientFromOpacity\n\t\t\t: 1.0;\n\t\tconst toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\")\n\t\t\t? config.backgroundGradientToOpacity\n\t\t\t: 1.0;\n\n\t\tconst fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\")\n\t\t\t? config.fillShadowGradient\n\t\t\t: this.props.chartConfig.color();\n\n\t\tconst fillShadowGradientOpacity = config.hasOwnProperty(\n\t\t\t\"fillShadowGradientOpacity\"\n\t\t)\n\t\t\t? config.fillShadowGradientOpacity\n\t\t\t: 0.1;\n\n\t\treturn (\n\t\t\t<Defs>\n\t\t\t\t<LinearGradient\n\t\t\t\t\tid = \"backgroundGradient\"\n\t\t\t\t\tx1 = \"0\"\n\t\t\t\t\ty1 = {height}\n\t\t\t\t\tx2 = {width} \n\t\t\t\t\ty2 = {0}\n\t\t\t\t>\n\t\t\t\t\t<Stop\n\t\t\t\t\t\toffset      = \"0\"\n\t\t\t\t\t\tstopColor   = {backgroundGradientFrom}\n\t\t\t\t\t\tstopOpacity = {fromOpacity}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stop\n\t\t\t\t\t\toffset      = \"1\"\n\t\t\t\t\t\tstopColor   = {backgroundGradientTo}\n\t\t\t\t\t\tstopOpacity = {toOpacity}\n\t\t\t\t\t/>\n\t\t\t\t</LinearGradient>\n\t\t\t\t<LinearGradient\n\t\t\t\t\tid = \"fillShadowGradient\"\n\t\t\t\t\tx1 = {0}\n\t\t\t\t\ty1 = {0}\n\t\t\t\t\tx2 = {0}\n\t\t\t\t\ty2 = {height}\n\t\t\t\t>\n\t\t\t\t\t<Stop\n\t\t\t\t\t\toffset      = \"0\"\n\t\t\t\t\t\tstopColor   = {fillShadowGradient}\n\t\t\t\t\t\tstopOpacity = {fillShadowGradientOpacity}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stop offset=\"1\" stopColor={fillShadowGradient} stopOpacity=\"0\" />\n\t\t\t\t</LinearGradient>\n\t\t\t</Defs>\n\t\t);\n\t};\n}\n\nexport default AbstractChart;\n"]},"metadata":{},"sourceType":"module"}