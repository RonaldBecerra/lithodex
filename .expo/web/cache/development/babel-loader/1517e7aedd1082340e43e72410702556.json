{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\modifiedLibraries\\\\PickerCheckBox\\\\modalOverlay.js\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\n\nvar ModalOVerlay = function (_React$PureComponent) {\n  _inherits(ModalOVerlay, _React$PureComponent);\n\n  function ModalOVerlay() {\n    _classCallCheck(this, ModalOVerlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ModalOVerlay).apply(this, arguments));\n  }\n\n  _createClass(ModalOVerlay, [{\n    key: \"_handlePressBackModal\",\n    value: function _handlePressBackModal() {\n      pressBackModal = this.props.cancelable == null || this.props.cancelable;\n\n      if (pressBackModal) {\n        this.props.onRequestClose();\n      }\n    }\n  }, {\n    key: \"renderContentModal\",\n    value: function renderContentModal() {\n      var _this = this;\n\n      return React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this._handlePressBackModal();\n        },\n        underlayColor: \"rgba(0, 0, 0, 0.55)\",\n        activeOpacity: 1,\n        style: [EstiloModalOverload.container, this.props.styleContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        }\n      }, React.createElement(View, {\n        style: [this.props.styleContent, EstiloModalOverload.containerChildren],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      }, this.props.children));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(Modal, _extends({}, props, {\n        transparent: true,\n        animationType: \"fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        }\n      }), this.renderContentModal()));\n    }\n  }]);\n\n  return ModalOVerlay;\n}(React.PureComponent);\n\nexport { ModalOVerlay as default };\nEstiloModalOverload = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.55)',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  containerChildren: {\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/modifiedLibraries/PickerCheckBox/modalOverlay.js"],"names":["React","PureComponent","ModalOVerlay","pressBackModal","props","cancelable","onRequestClose","_handlePressBackModal","EstiloModalOverload","container","styleContainer","styleContent","containerChildren","children","renderContentModal","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;;;;IAGqBC,Y;;;;;;;;;;;4CAEM;AACnBC,MAAAA,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,IAAyB,IAAzB,IAA+B,KAAKD,KAAL,CAAWC,UAA3D;;AACA,UAAIF,cAAJ,EAAmB;AACf,aAAKC,KAAL,CAAWE,cAAX;AACH;AACJ;;;yCACoB;AAAA;;AACjB,aACI,oBAAC,kBAAD;AACI,QAAA,OAAO,EAAU;AAAA,iBAAM,KAAI,CAACC,qBAAL,EAAN;AAAA,SADrB;AAEI,QAAA,aAAa,EAAG,qBAFpB;AAGI,QAAA,aAAa,EAAI,CAHrB;AAII,QAAA,KAAK,EAAY,CAACC,mBAAmB,CAACC,SAArB,EAAgC,KAAKL,KAAL,CAAWM,cAA3C,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAM,CAAC,KAAKN,KAAL,CAAWO,YAAZ,EAA0BH,mBAAmB,CAACI,iBAA9C,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKR,KAAL,CAAWS,QADhB,CALJ,CADJ;AAWH;;;6BACQ;AAAA,UACKT,KADL,gBACc,KAAKA,KADnB;;AAEL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD,eACQA,KADR;AAEI,QAAA,WAAW,EAAM,IAFrB;AAGI,QAAA,aAAa,EAAG,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA,UAIK,KAAKU,kBAAL,EAJL,CADJ,CADJ;AAUH;;;;EAjCqCd,KAAK,CAACC,a;;SAA3BC,Y;AAoCrBM,mBAAmB,GAAGO,UAAU,CAACC,MAAX,CAAkB;AACpCP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAC,CADE;AAEPC,IAAAA,eAAe,EAAE,qBAFV;AAGPC,IAAAA,aAAa,EAAI,QAHV;AAIPC,IAAAA,cAAc,EAAG;AAJV,GADyB;AAQpCR,EAAAA,iBAAiB,EAAC;AACdM,IAAAA,eAAe,EAAC;AADF;AARkB,CAAlB,CAAtB","sourcesContent":["import React, { PureComponent } from 'react';\nimport {StyleSheet, View, Modal, TouchableHighlight} from 'react-native';\n\nexport default class ModalOVerlay extends React.PureComponent{\n\n    _handlePressBackModal(){\n        pressBackModal = this.props.cancelable == null||this.props.cancelable;\n        if (pressBackModal){\n            this.props.onRequestClose();\n        }\n    }\n    renderContentModal() {\n        return(\n            <TouchableHighlight \n                onPress       = {() => this._handlePressBackModal()}\n                underlayColor = 'rgba(0, 0, 0, 0.55)'\n                activeOpacity = {1}\n                style         = {[EstiloModalOverload.container, this.props.styleContainer]}>\n                <View style   = {[this.props.styleContent, EstiloModalOverload.containerChildren]}>\n                    {this.props.children}\n                </View>\n            </TouchableHighlight>\n        )\n    }\n    render() {\n        const {...props} = this.props;\n        return(\n            <View>\n                <Modal\n                    {...props}\n                    transparent   = {true}\n                    animationType = 'fade'>\n                    {this.renderContentModal()}\n                </Modal>\n            </View>\n        )\n    }\n}\n\nEstiloModalOverload = StyleSheet.create({\n    container :{\n        flex:1,\n        backgroundColor: 'rgba(0, 0, 0, 0.55)',\n        flexDirection:   'column',\n        justifyContent:  'center'\n    },\n\n    containerChildren:{\n        backgroundColor:'white',\n    },\n})"]},"metadata":{},"sourceType":"module"}