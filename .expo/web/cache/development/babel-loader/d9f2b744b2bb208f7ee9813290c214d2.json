{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ronald\\\\Documents\\\\Universidad\\\\Miniproyecto\\\\Proyecto final - geolog\\xEDa\\\\Versiones de la aplicaci\\xF3n\\\\lithodex\\\\src\\\\screens\\\\contactUsers\\\\ShowProfileImageDrawer.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar } from \"react-native-elements\";\nimport { connect } from 'react-redux';\nimport { DEFAULT_USER_ICON } from \"../../constants/genericImages\";\n\nvar ShowProfileImageDrawer = function (_Component) {\n  _inherits(ShowProfileImageDrawer, _Component);\n\n  function ShowProfileImageDrawer(props) {\n    _classCallCheck(this, ShowProfileImageDrawer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowProfileImageDrawer).call(this, props));\n  }\n\n  _createClass(ShowProfileImageDrawer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          paddingTop: 10,\n          paddingBottom: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      }, React.createElement(Avatar, {\n        source: this.props.profileImage != null ? {\n          uri: this.props.profileImage\n        } : DEFAULT_USER_ICON,\n        size: \"xlarge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      }));\n    }\n  }]);\n\n  return ShowProfileImageDrawer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profileImage: state.userReducer.profileImage\n  };\n};\n\nexport default connect(mapStateToProps)(ShowProfileImageDrawer);","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/screens/contactUsers/ShowProfileImageDrawer.js"],"names":["React","Component","Avatar","connect","DEFAULT_USER_ICON","ShowProfileImageDrawer","props","justifyContent","alignItems","paddingTop","paddingBottom","profileImage","uri","mapStateToProps","state","userReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,SAASC,MAAT,QAAsB,uBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,iBAAR;;IAIMC,sB;;;AAEL,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA,+FACZA,KADY;AAElB;;;;6BAEQ;AACR,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAACC,UAAAA,cAAc,EAAE,QAAjB;AAA2BC,UAAAA,UAAU,EAAE,QAAvC;AAAiDC,UAAAA,UAAU,EAAE,EAA7D;AAAiEC,UAAAA,aAAa,EAAE;AAAhF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AACC,QAAA,MAAM,EAAK,KAAKJ,KAAL,CAAWK,YAAX,IAA2B,IAA5B,GAAoC;AAACC,UAAAA,GAAG,EAAE,KAAKN,KAAL,CAAWK;AAAjB,SAApC,GAAqEP,iBADhF;AAEC,QAAA,IAAI,EAAK,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAQA;;;;EAfmCH,S;;AAmBrC,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNH,IAAAA,YAAY,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AAD1B,GAAP;AAGA,CAJD;;AAMA,eAAeR,OAAO,CAACU,eAAD,CAAP,CAAyBR,sBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View } from 'react-native'\n\nimport { Avatar} from \"react-native-elements\"\nimport { connect } from 'react-redux'\nimport {DEFAULT_USER_ICON} from '../../constants/genericImages'\n\n\n/* Esta vista sirve en realidad como componente para \"ContactUsersRootComponent\". Tuvimos que separar esta parte */ \nclass ShowProfileImageDrawer extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props) \n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View style = {{justifyContent: 'center', alignItems: 'center', paddingTop: 10, paddingBottom: 10}}>\n\t\t\t\t<Avatar \n\t\t\t\t\tsource = {(this.props.profileImage != null) ? {uri: this.props.profileImage} : DEFAULT_USER_ICON}\n\t\t\t\t\tsize   = 'xlarge'\n\t\t\t\t/>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\n/// Función para obtener las variables deseadas desde el estado global de la tienda Redux\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tprofileImage: state.userReducer.profileImage, \n\t}\n};\n\nexport default connect(mapStateToProps)(ShowProfileImageDrawer)"]},"metadata":{},"sourceType":"module"}