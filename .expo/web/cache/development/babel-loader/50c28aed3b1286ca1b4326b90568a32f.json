{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PouchDB from 'pouchdb-react-native';\nimport publicIP from 'react-native-public-ip';\nimport * as Location from 'expo-location';\nimport * as Permissions from 'expo-permissions';\nimport * as Network from 'expo-network';\nimport { UNAUTHENTICATED_ID, DEFAULT_DOCUMENT_ID, LOCAL_LITHODEX, REMOTE_GENERIC_LITHODEX, LOG_DOCUMENT_ID } from \"../constants/appConstants\";\nvar ALL_ACTIONS = {\n  1: 'open_app',\n  2: 'open_settings',\n  3: 'open_about_lithodex',\n  4: 'open_objectOfStudy_gallery',\n  5: 'open_add_new_objectOfStudy',\n  6: 'add_new_objectOfStudy',\n  7: 'open_edit_objectOfStudy',\n  8: 'edit_objectOfStudy',\n  9: 'delete_objectOfStudy',\n  10: 'open_objectOfStudy_screen',\n  11: 'open_add_new_stratum',\n  12: 'add_new_stratum',\n  13: 'open_edit_stratum',\n  14: 'edit_stratum',\n  15: 'delete_stratum',\n  16: 'open_lithology_screen_new',\n  17: 'open_lithology_screen_again',\n  18: 'open_structure_screen_new',\n  19: 'open_structure_screen_again',\n  20: 'open_fossil_screen_new',\n  21: 'open_fossil_screen_again',\n  22: 'open_stratum_image_screen_new',\n  23: 'open_stratum_image_screen_again',\n  24: 'open_user_registration',\n  25: 'open_user_edit',\n  26: 'user_edit'\n};\nvar ACTIONS_TO_STORE_REMOTELY = {\n  6: 'add_new_objectOfStudy',\n  8: 'edit_objectOfStudy',\n  9: 'delete_objectOfStudy',\n  12: 'add_new_stratum',\n  14: 'edit_stratum',\n  15: 'delete_stratum',\n  26: 'user_edit'\n};\nvar remoteGenericLithodex = new PouchDB(REMOTE_GENERIC_LITHODEX);\nvar localLithodex = new PouchDB(LOCAL_LITHODEX);\nexport function log_action(entry_code, user_id, isCore) {\n  var objectOfStudy_id,\n      stratum_key,\n      current_time,\n      log_entry,\n      storeRemoteEntryLocally,\n      _await$Network$getNet,\n      isInternetReachable,\n      user_ip,\n      _await$Permissions$as,\n      status,\n      longitude,\n      latitude,\n      geographicLocation,\n      _args2 = arguments;\n\n  return _regeneratorRuntime.async(function log_action$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          objectOfStudy_id = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : null;\n          stratum_key = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : null;\n          current_time = new Date().getTime();\n          log_entry = {\n            time: current_time,\n            action: ALL_ACTIONS[entry_code],\n            code: entry_code,\n            objectOfStudy_type: isCore ? 'core' : 'outcrop',\n            objectOfStudy_id: objectOfStudy_id,\n            stratum_key: stratum_key\n          };\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(localLithodex.get(DEFAULT_DOCUMENT_ID).then(function _callee(document) {\n            var cu;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    cu = document.currentUser;\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(cu.log.push(log_entry));\n\n                  case 3:\n                    if (cu.log_length > 99) {\n                      cu.log.shift();\n                    } else {\n                      cu.log_length += 1;\n                    }\n\n                    return _context.abrupt(\"return\", localLithodex.put(_objectSpread({}, document, {\n                      _rev: document._rev\n                    })));\n\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          }).catch(function (error) {\n            console.error(error.toString());\n          }));\n\n        case 6:\n          storeRemoteEntryLocally = false;\n\n          if (!(ACTIONS_TO_STORE_REMOTELY[entry_code] != null)) {\n            _context2.next = 41;\n            break;\n          }\n\n          storeRemoteEntryLocally = true;\n          _context2.prev = 9;\n\n          if (!(user_id !== UNAUTHENTICATED_ID)) {\n            _context2.next = 36;\n            break;\n          }\n\n          _context2.next = 13;\n          return _regeneratorRuntime.awrap(Network.getNetworkStateAsync());\n\n        case 13:\n          _await$Network$getNet = _context2.sent;\n          isInternetReachable = _await$Network$getNet.isInternetReachable;\n\n          if (!isInternetReachable) {\n            _context2.next = 36;\n            break;\n          }\n\n          user_ip = null;\n          _context2.next = 19;\n          return _regeneratorRuntime.awrap(publicIP().then(function (ip) {\n            user_ip = ip;\n          }));\n\n        case 19:\n          _context2.next = 21;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n        case 21:\n          _await$Permissions$as = _context2.sent;\n          status = _await$Permissions$as.status;\n\n          if (!(status !== 'granted')) {\n            _context2.next = 28;\n            break;\n          }\n\n          longitude = 'Undetermined';\n          latitude = 'Undetermined';\n          _context2.next = 33;\n          break;\n\n        case 28:\n          _context2.next = 30;\n          return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n            enableHighAccuracy: true\n          }));\n\n        case 30:\n          geographicLocation = _context2.sent;\n          longitude = JSON.stringify(geographicLocation.coords.longitude);\n          latitude = JSON.stringify(geographicLocation.coords.latitude);\n\n        case 33:\n          log_entry = _objectSpread({\n            user_id: user_id,\n            user_ip: user_ip,\n            latitude: latitude,\n            longitude: longitude\n          }, log_entry);\n          _context2.next = 36;\n          return _regeneratorRuntime.awrap(remoteGenericLithodex.get(LOG_DOCUMENT_ID).then(function (document) {\n            document.log.push(log_entry);\n            remoteGenericLithodex.put(_objectSpread({}, document, {\n              _rev: document._rev\n            }));\n            storeRemoteEntryLocally = false;\n          }));\n\n        case 36:\n          _context2.next = 41;\n          break;\n\n        case 38:\n          _context2.prev = 38;\n          _context2.t0 = _context2[\"catch\"](9);\n          storeRemoteEntryLocally = true;\n\n        case 41:\n          if (storeRemoteEntryLocally) {\n            log_entry = _objectSpread({}, log_entry, {\n              time: current_time,\n              user_id: user_id\n            });\n            localLithodex.get(DEFAULT_DOCUMENT_ID).then(function (document) {\n              document.remoteLog.push(log_entry);\n              return localLithodex.put(_objectSpread({}, document, {\n                _rev: document._rev\n              }));\n            });\n          }\n\n        case 42:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[9, 38]]);\n}","map":{"version":3,"sources":["C:/Users/Ronald/Documents/Universidad/Miniproyecto/Proyecto final - geología/Versiones de la aplicación/lithodex/src/genericFunctions/logFunctions.js"],"names":["PouchDB","publicIP","Location","Permissions","Network","UNAUTHENTICATED_ID","DEFAULT_DOCUMENT_ID","LOCAL_LITHODEX","REMOTE_GENERIC_LITHODEX","LOG_DOCUMENT_ID","ALL_ACTIONS","ACTIONS_TO_STORE_REMOTELY","remoteGenericLithodex","localLithodex","log_action","entry_code","user_id","isCore","objectOfStudy_id","stratum_key","current_time","Date","getTime","log_entry","time","action","code","objectOfStudy_type","get","then","document","cu","currentUser","log","push","log_length","shift","put","_rev","catch","error","console","toString","storeRemoteEntryLocally","getNetworkStateAsync","isInternetReachable","user_ip","ip","askAsync","LOCATION","status","longitude","latitude","getCurrentPositionAsync","enableHighAccuracy","geographicLocation","JSON","stringify","coords","remoteLog"],"mappings":"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","sourcesContent":["import PouchDB from 'pouchdb-react-native'\r\nimport publicIP from 'react-native-public-ip'\r\nimport * as Location from 'expo-location'\r\nimport * as Permissions from 'expo-permissions'\r\nimport * as Network from 'expo-network';\r\nimport { UNAUTHENTICATED_ID, DEFAULT_DOCUMENT_ID, LOCAL_LITHODEX, REMOTE_GENERIC_LITHODEX,\r\n\t\t LOG_DOCUMENT_ID } from '../constants/appConstants'\r\n\r\n// Aquí almacenamos todas las acciones posibles que se pueden registrar, incluyendo tanto las que sólo se guardan en la base de datos local del usuario\r\n// como las que se guardan en la base de datos remota global para todos los usuarios.\r\nconst ALL_ACTIONS = {\r\n\t1: 'open_app', // Abrimos la aplicación\r\n\t2: 'open_settings', // Abrimos la ventana de configuración\r\n\t3: 'open_about_lithodex', // Abrimos la ventana de información de LithoDex\r\n\t4: 'open_objectOfStudy_gallery', // Abrimos la ventana de galería de un objeto de estudio\r\n\t5: 'open_add_new_objectOfStudy', // Abrimos la ventana para añadir un nuevo onjeto de estudio, pero todavía no lo hemos salvado\r\n\t6: 'add_new_objectOfStudy', // Salvamos un nuevo objeto de estudio\r\n\t7: 'open_edit_objectOfStudy', // Abrimos la ventana para modificar la información de un objeto de estudio ya existente, pero todavía no hemos salvado cambios\r\n\t8: 'edit_objectOfStudy', // Salvamos la modificación de un objeto de estudio\r\n\t9: 'delete_objectOfStudy', // Borramos un objeto de estudio que había sido creado\r\n\t10: 'open_objectOfStudy_screen', // Abrimos la ventana en la que se muestra la columna estratigráfica del objeto de estudio, y también las gráficas, en caso de tratarse de un núcleo\r\n\t11: 'open_add_new_stratum', // Abrimos la ventana en la que se añade un nuevo estrato \r\n\t12: 'add_new_stratum', // Salvamos un nuevo estrato\r\n\t13: 'open_edit_stratum', // Abrimos la ventana para editar la información de un estrato\r\n\t14: 'edit_stratum', // Salvamos la modificación de un estrato\r\n\t15: 'delete_stratum', // Borramos un estrato que había sido creado\r\n\t16: 'open_lithology_screen_new', // Abrimos la ventana de litología cuando todavía no se ha añadido ninguna litología\r\n\t17: 'open_lithology_screen_again', // Abrimos la ventana de litología cuando ya se ha añadido alguna litología para el estrato correspondiente\r\n\t18: 'open_structure_screen_new', // Abrimos la ventana de estructura sedimentaria cuando todavía no se ha añadido ninguna estructura\r\n\t19: 'open_structure_screen_again', // Abrimos la ventana de estructura sedimentaria cuando ya se ha añadido alguna estructura para el estrato correspondiente\r\n\t20: 'open_fossil_screen_new', // Abrimos la ventana de fósiles cuando todavía no se ha añadido ningún fósil\r\n\t21: 'open_fossil_screen_again', // Abrimos la ventana de fósiles cuando ya se ha añadido algún fósil para el estrato correspondiente\r\n\t22: 'open_stratum_image_screen_new', // Abrimos la ventana de selección de imágenes de un estrato cuando todavía no se ha añadido ninguna imagen\r\n\t23: 'open_stratum_image_screen_again', // Abrimos la ventana de selección de imágenes de un estrato cuando ya se añadido alguna imagen para el estrato correspondiente\r\n\t24: 'open_user_registration', // Abrimos la ventana en la que un usuario se registra\r\n\t25: 'open_user_edit', // Abrimos el formulario de usuario para editar la información de un usuario ya existente\r\n\t26: 'user_edit', // Se edita la información de un usuario ya registrado\r\n}\r\n\r\n// Aquí sólo incluimos aquellas acciones que deben almacenarse en la base de datos remota global para todos los usuarios\r\n// (Las que están aquí son una copia de las que ya habíamos incluido en \"ALL_ACTIONS\")\r\nconst ACTIONS_TO_STORE_REMOTELY = {\r\n\t6: 'add_new_objectOfStudy', // Salvamos un nuevo objeto de estudio\r\n\t8: 'edit_objectOfStudy', // Salvamos la modificación de un objeto de estudio\r\n\t9: 'delete_objectOfStudy', // Borramos un objeto de estudio que había sido creado\r\n\t12: 'add_new_stratum', // Salvamos un nuevo estrato\r\n\t14: 'edit_stratum', // Salvamos la modificación de un estrato\r\n\t15: 'delete_stratum', // Borramos un estrato que había sido creado\r\n\t26: 'user_edit', // Se edita la información de un usuario ya registrado\r\n}\r\n\r\n// Base de datos remota en la que se recopila información de todos los usuarios\r\nconst remoteGenericLithodex = new PouchDB(REMOTE_GENERIC_LITHODEX);\r\n\r\n// Base de datos local genérica (no la de un usuario particular)\r\nconst localLithodex = new PouchDB(LOCAL_LITHODEX); \r\n\r\n// Función para registrar todos los tipos de acciones\r\nexport async function log_action(entry_code, user_id, isCore, objectOfStudy_id = null, stratum_key = null) {\r\n\tconst current_time = new Date().getTime();\r\n\tvar log_entry = {\r\n\t\ttime:   current_time,\r\n\t\taction: ALL_ACTIONS[entry_code],\r\n\t\tcode:   entry_code,\r\n\t\tobjectOfStudy_type: (isCore ? 'core' : 'outcrop'),\r\n\t\tobjectOfStudy_id,\r\n\t\tstratum_key,\r\n\t}\r\n\r\n\t// Salvamos la entrada de log en la base de datos local genérica\r\n\t// Esta entrada servirá en el futuro para determinar si el usuario tiene dificultades con el manejo de la aplicación\r\n\tawait localLithodex.get(DEFAULT_DOCUMENT_ID)\r\n\t\t.then(async function(document){\r\n\t\t\tlet cu = document.currentUser;\r\n\t\t\tawait cu.log.push(log_entry);\r\n\t\t\tif (cu.log_length > 99){\r\n\t\t\t\tcu.log.shift();\r\n\t\t\t} else {\r\n\t\t\t\tcu.log_length += 1;\r\n\t\t\t}\r\n\t\t\treturn localLithodex.put({...document, _rev: document._rev});\r\n\t\t\t}).catch(function (error){\r\n\t\t\t\tconsole.error(error.toString());\r\n\t\t\t})\r\n\r\n\tlet storeRemoteEntryLocally = false;\r\n\r\n\tif (ACTIONS_TO_STORE_REMOTELY[entry_code] != null){\r\n\t\tstoreRemoteEntryLocally = true;\r\n\t\ttry{\r\n\t\t\tif (user_id !== UNAUTHENTICATED_ID){\r\n\t\t\t\tconst {isInternetReachable} = await Network.getNetworkStateAsync();\r\n\t\t\t\tif (isInternetReachable){\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Determinamos la dirección ip del usuario\r\n\t\t\t\t\tlet user_ip = null;\r\n\t\t\t\t\tawait publicIP()\r\n\t\t\t\t\t.then(ip => {\r\n\t\t\t\t\t\tuser_ip = ip;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// Determinamos la localización geográfica del usuario\r\n\t\t\t\t\tlet { status } = await Permissions.askAsync(Permissions.LOCATION);\r\n\t\t\t\t\tif (status !== 'granted') {\r\n\t\t\t\t\t\tvar longitude = 'Undetermined';\r\n\t\t\t\t\t\tvar latitude  = 'Undetermined';\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst geographicLocation = await Location.getCurrentPositionAsync({enableHighAccuracy: true});\r\n\t\t\t\t\t\tvar longitude = JSON.stringify(geographicLocation.coords.longitude);\r\n\t\t\t\t\t\tvar latitude  = JSON.stringify(geographicLocation.coords.latitude);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlog_entry = {\r\n\t\t\t\t\t\tuser_id, user_ip, latitude, longitude,\r\n\t\t\t\t\t\t...log_entry,\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tawait remoteGenericLithodex.get(LOG_DOCUMENT_ID)\r\n\t\t\t\t\t\t.then(function(document){\r\n\t\t\t\t\t\t\tdocument.log.push(log_entry);\r\n\t\t\t\t\t\t\tremoteGenericLithodex.put({...document, _rev: document._rev});\r\n\t\t\t\t\t\t\tstoreRemoteEntryLocally = false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e) {\r\n\t\t\tstoreRemoteEntryLocally = true;\r\n\t\t}\t\r\n\t}\r\n\tif (storeRemoteEntryLocally){\r\n\t\tlog_entry = {\r\n\t\t\t...log_entry,\r\n\t\t\ttime: current_time,\r\n\t\t\tuser_id,\r\n\t\t}\r\n\t\tlocalLithodex.get(DEFAULT_DOCUMENT_ID)\r\n\t\t\t.then(function(document){\r\n\t\t\t\tdocument.remoteLog.push(log_entry);\r\n\t\t\t\treturn localLithodex.put({...document, _rev: document._rev});\r\n\t\t\t})\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}